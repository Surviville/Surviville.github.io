{"version":3,"file":"js/app.b4546a2d.js","mappings":"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","sources":["webpack://surviville-staking/./src/App.vue","webpack://surviville-staking/./src/App.vue?7ccd","webpack://surviville-staking/./src/components/Admin.vue","webpack://surviville-staking/./src/components/Admin.vue?52a4","webpack://surviville-staking/./src/components/NftMint.vue","webpack://surviville-staking/./src/components/NftMint.vue?90eb","webpack://surviville-staking/./src/components/MyReapers.vue","webpack://surviville-staking/./src/components/Nft.vue","webpack://surviville-staking/./src/components/Nft.vue?acd9","webpack://surviville-staking/./src/components/NftTop.vue","webpack://surviville-staking/./src/components/NftTop.vue?e54b","webpack://surviville-staking/./src/components/MyReapers.vue?d67f","webpack://surviville-staking/./src/components/AllReapers.vue","webpack://surviville-staking/./src/components/AllNfts.vue","webpack://surviville-staking/./src/components/AllNfts.vue?1a8b","webpack://surviville-staking/./src/components/AllReapers.vue?c64b","webpack://surviville-staking/./src/components/InfoStaking.vue","webpack://surviville-staking/./src/components/InfoStaking.vue?078e","webpack://surviville-staking/./src/main.js","webpack://surviville-staking/webpack/bootstrap","webpack://surviville-staking/webpack/runtime/amd options","webpack://surviville-staking/webpack/runtime/chunk loaded","webpack://surviville-staking/webpack/runtime/compat get default export","webpack://surviville-staking/webpack/runtime/define property getters","webpack://surviville-staking/webpack/runtime/global","webpack://surviville-staking/webpack/runtime/hasOwnProperty shorthand","webpack://surviville-staking/webpack/runtime/node module decorator","webpack://surviville-staking/webpack/runtime/jsonp chunk loading","webpack://surviville-staking/webpack/startup"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\">Mint</router-link> |\n    <router-link to=\"/my-reapers\">My Collection</router-link> |\n    <router-link to=\"/all-reapers\">Explore Collection</router-link> |\n    <router-link to=\"/info\">Info Staking</router-link>\n  </nav>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #e0f2f2;\n  background-color: #131129;\n}\n\n.card {\n  background-color: #410952;\n  padding: 0.25rem 0.25rem;\n  border: 1.5px solid rgb(0 0 0);\n}\n\n.dropdown-menu a {\n  border-color: hsla(0, 0%, 100%, 0.08);\n}\n.dropdown-item {\n  display: block;\n  width: 100%;\n  padding: 0.25rem 1rem;\n  clear: both;\n  font-weight: 400;\n  color: #e5e5e5;\n  text-align: inherit;\n  text-decoration: none;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n}\n\n.btn-primary {\n  color: #fff;\n  background-color: rgb(131, 31, 154);\n  border-color: #8705a4;\n}\n\n.btn-primary:hover {\n  color: rgb(6, 6, 6);\n  background-color: #c65ef6;\n  border-color: #69057f;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #4256b9;\n}\n\na {\n  color: #992cd4;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-text-decoration-skip: objects;\n}\n\na:hover {\n  color: #cf3ced;\n  -webkit-text-decoration-skip: objects;\n}\n\na:not([href]):not([tabindex]) {\n  color: rgb(204, 52, 239);\n  text-decoration: none;\n}\n\n.dropdown-item:hover {\n  background-color: #c65ef6;\n  -webkit-text-decoration-skip: objects;\n}\n\n.back-to-top {\n  position: fixed;\n  bottom: 10px;\n  right: 10px;\n  width: 64px;\n  height: 64px;\n  z-index: 9999;\n  cursor: pointer;\n  text-decoration: none;\n  transition: opacity 0.2s ease-out;\n  background-image: url(../public/images/top.png);\n  display: none;\n}\n.back-to-top:hover {\n  opacity: 0.9;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=5c21f7d4\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=5c21f7d4&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"content-body\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xxl-12\">\n          <div>\n            <h2 class=\"mb-0\">Reaperville Staking Statistics</h2>\n            <p>\n              Earnable reward tokens: 5 million in total for Reaperville\n              collection, 1 million in first year, 2.5 million in first 3 years\n            </p>\n            <p>SVC Total max. supply: 210 million</p>\n            <p>Total staked power: {{ totalStakedPower }}</p>\n            <p>Base staking power: {{ baseStakingPower }}</p>\n            <!-- <p>Released SVC by contract: {{ released }}</p> -->\n            <p>Total emission rate: {{ svcEmissionPerHour }} SVC / hour</p>\n            <p>\n              =\n              {{ Math.round((svcEmissionPerHour * 24 * 365) / 1000) / 1000 }}\n              million SVC / year\n            </p>\n\n            <h1 class=\"mb-0\">—Everything below this line is ADMIN ONLY—</h1>\n            <h2 v-if=\"!isAdmin\">(You are not logged into the admin wallet)</h2>\n            <h2 v-else>(YOU ARE THE ADMIN)</h2>\n\n            <h2>Mint Reward Tokens</h2>\n            <input\n              id=\"tokensToMint\"\n              type=\"number\"\n              min=\"10\"\n              class=\"form-control mx-auto\"\n              v-model=\"rewardTokensToMint\"\n            />\n            <input\n              id=\"addressTo\"\n              type=\"text\"\n              class=\"form-control mx-auto\"\n              v-model=\"addressTo\"\n            />\n\n            <button\n              class=\"btn btn-danger\"\n              @click=\"registerAddressAsMinter(addressTo)\"\n            >\n              Register {{ addressTo }} as minter\n            </button>\n\n            &nbsp;\n\n            <button\n              class=\"btn btn-primary\"\n              @click=\"mintRewardToken(addressTo, rewardTokensToMint)\"\n            >\n              Mint {{ rewardTokensToMint }}\n            </button>\n\n            <h6>{{ feedbackMessage }}</h6>\n\n            <h2 class=\"mb-0\">Register Reaper Contract as Token Minter</h2>\n            <div>\n              Reaperville is minter: <strong>{{ reaperIsSvcMinter }}</strong>\n            </div>\n            <div>\n              <button\n                class=\"btn btn-danger\"\n                type=\"button\"\n                :disabled=\"!reaperIsSvcMinter\"\n                @click=\"unregisterReaperAsMinter\"\n              >\n                Unregister as minter\n              </button>\n              &nbsp;\n              <button\n                class=\"btn btn-success\"\n                type=\"button\"\n                :disabled=\"reaperIsSvcMinter\"\n                @click=\"registerReaperAsMinter\"\n              >\n                Register as minter\n              </button>\n            </div>\n            <br />\n\n            <h4>Reaper Contract Balances</h4>\n            <p>\n              {{ Math.round(reaperBchBalance / 10 ** 15) / 10 ** 3 }}\n              BCH\n            </p>\n            <div>\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                :disabled=\"reaperBchBalance <= 0\"\n                @click=\"withdrawBchFromReaper\"\n              >\n                withdraw BCH\n              </button>\n            </div>\n\n            <br />\n\n            <h4>Reaper Mint Price</h4>\n            <p>\n              {{ Math.round(reaperBchPerNft / 10 ** 12) / 10 ** 6 }}\n              BCH\n            </p>\n            <input\n              id=\"reaperBchPerNft\"\n              type=\"number\"\n              min=\"10\"\n              class=\"form-control mx-auto\"\n              v-model=\"reaperBchPerNft\"\n            />\n            <div>\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                @click=\"setReaperBchPerNft\"\n              >\n                set new price\n                {{ Math.round(reaperBchPerNft / 10 ** 12) / 10 ** 6 }} BCH\n              </button>\n            </div>\n\n            <br />\n\n            <h2 class=\"mb-0\">Pause Reaper Mint</h2>\n            Mint is active: {{ !reaperMintPaused }}\n            <p>\n              <button\n                @click=\"setReaperMintPaused(true)\"\n                :disabled=\"reaperMintPaused\"\n                class=\"btn btn-danger\"\n              >\n                Pause\n              </button>\n              &nbsp;\n              <button\n                @click=\"setReaperMintPaused(false)\"\n                :disabled=\"!reaperMintPaused\"\n                class=\"btn btn-success\"\n              >\n                Unpause\n              </button>\n            </p>\n\n            <h2 class=\"mb-0\">Pause Reaper Staking</h2>\n            Staking is active: {{ !reaperStakingPaused }}\n            <p>\n              <button\n                @click=\"setReaperStakingPaused(true)\"\n                :disabled=\"reaperStakingPaused\"\n                class=\"btn btn-danger\"\n              >\n                Pause\n              </button>\n              &nbsp;\n              <button\n                @click=\"setReaperStakingPaused(false)\"\n                :disabled=\"!reaperStakingPaused\"\n                class=\"btn btn-success\"\n              >\n                Unpause\n              </button>\n            </p>\n            <!-- <p>\n              <button @click=\"resetBoosts\" class=\"btn btn-warning\">Reset boosts</button>\n            </p> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      rewardTokenContract: null,\n      reaperContract: null,\n\n      reaperBchBalance: 0,\n      reaperBchPerNft: 0,\n\n      rewardTokensToMint: 10000,\n      addressTo: \"\",\n\n      feedbackMessage: \"\",\n\n      reaperIsSvcMinter: false,\n\n      isAdmin: false,\n\n      reaperMintPaused: false,\n      reaperStakingPaused: false,\n\n      allowanceToSet: 5000000,\n      totalStakedPower: null,\n      baseStakingPower: null,\n      released: null,\n      svcEmissionPerHour: null,\n    };\n  },\n  methods: {\n    mintRewardToken: async function (addressTo, amount) {\n      let tx = await this.rewardTokenContract.mint(\n        addressTo,\n        ethers.utils.parseUnits(amount.toString(), \"ether\")\n      );\n      await tx.wait();\n    },\n\n    registerAddressAsMinter: async function (addressTo) {\n      this.feedbackMessage = \"\";\n      let minterAllowance =\n        await this.rewardTokenContract.remainingMintersAllowance(addressTo);\n      if (minterAllowance > 0) {\n        this.feedbackMessage = addressTo + \" is already registered as minter\";\n        return false;\n      }\n      let newAllowance = \"5000000000000000000000000\"; // 5 million\n      let tx = await this.rewardTokenContract.updateMintersAllowance(\n        addressTo,\n        newAllowance\n      );\n      await tx.wait();\n      window.location.reload();\n    },\n\n    registerReaperAsMinter: async function () {\n      let newAllowance = \"5000000000000000000000000\"; // 5 million\n      let tx = await this.rewardTokenContract.updateMintersAllowance(\n        window.ReaperAddress,\n        newAllowance\n      );\n      await tx.wait();\n      window.location.reload();\n    },\n    unregisterReaperAsMinter: async function () {\n      let tx = await this.rewardTokenContract.removeMinter(\n        window.ReaperAddress\n      );\n      await tx.wait();\n      window.location.reload();\n    },\n\n    setReaperMintPaused: async function (newPaused) {\n      let tx = await this.reaperContract.setMintPaused(newPaused);\n      await tx.wait();\n      window.location.reload();\n    },\n    setReaperStakingPaused: async function (newPaused) {\n      let tx = await this.reaperContract.setStakingPaused(newPaused);\n      await tx.wait();\n      window.location.reload();\n    },\n\n    setReaperBchPerNft: async function () {\n      let tx = await this.reaperContract.setBchPerNft(this.reaperBchPerNft);\n      await tx.wait();\n      window.location.reload();\n    },\n\n    withdrawBchFromReaper: async function () {\n      let tx = await this.reaperContract.withdraw();\n      await tx.wait();\n      window.location.reload();\n    },\n  },\n  mounted: function () {\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    this.provider\n      .send(\"eth_requestAccounts\", [])\n      .then(() => {\n        this.signer = this.provider.getSigner();\n        let _rewardTokenContract = new ethers.Contract(\n          window.RewardTokenAddress,\n          RewardToken.abi,\n          this.provider.getSigner()\n        );\n        let _reaperContract = new ethers.Contract(\n          window.ReaperAddress,\n          Reaperville.abi,\n          this.provider.getSigner()\n        );\n        // let _flexUsdContract = new ethers.Contract(\n        //   window.FlexUsdAddress,\n        //   RewardToken.abi,\n        //   this.provider.getSigner()\n        // );\n\n        this.rewardTokenContract = _rewardTokenContract;\n        this.reaperContract = _reaperContract;\n        // this.flexUsdTokenContract = _flexUsdContract;\n      })\n      .then(() => {\n        this.signer.getAddress().then((address) => {\n          this.addressTo = address;\n          if (address === window.DevAddress) {\n            this.isAdmin = true;\n          }\n        });\n        this.reaperContract\n          .showStakerInfo(window.DevAddress)\n          .then((stakerInfo) => {\n            this.totalStakedPower = stakerInfo[2];\n            this.baseStakingPower = stakerInfo[3];\n            this.svcEmissionPerHour =\n              Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\n              100000;\n          });\n        this.provider.getBalance(window.ReaperAddress).then((balance) => {\n          this.reaperBchBalance = balance;\n        });\n        this.reaperContract.isMintPausedStakingPaused().then((result) => {\n          this.reaperMintPaused = result[0];\n          this.reaperStakingPaused = result[1];\n        });\n        this.reaperContract.bchPerNft().then((_bchPerNft) => {\n          this.reaperBchPerNft = _bchPerNft;\n        });\n\n        this.rewardTokenContract\n          .remainingMintersAllowance(window.ReaperAddress)\n          .then((_allowance) => {\n            this.reaperIsSvcMinter = _allowance > 0;\n          });\n      });\n  },\n};\n</script>\n","import { render } from \"./Admin.vue?vue&type=template&id=54f90fa0\"\nimport script from \"./Admin.vue?vue&type=script&lang=js\"\nexport * from \"./Admin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <section\n    class=\"text-center container col-lg-8 col-md-9 col-sm-10 mx-auto mt-2 mb-4\"\n  >\n    <h1>The Reaperville NFT Collection</h1>\n\n    <h4 class=\"text-muted\">\n      This collection of colorful reapers is the first NFT collection of the\n      Surviville project.\n      <a target=\"_blank\" href=\"https://ville.cash/\"\n        >Learn more about Surviville.</a\n      >\n    </h4>\n    <div class=\"col-xxl-4 mx-auto mt-4 mb-4\">\n      <img\n        src=\"/images/avatar/preview.gif\"\n        class=\"img-fluid rounded\"\n        alt=\"Reaperville NFTs Preview\"\n      />\n    </div>\n    <h4 class=\"text-muted\">\n      After minting some Reaperville NFTs, you can stake them\n      <a href=\"/my-reapers\">here</a>\n      to earn a passive income stream of Surviville coins. These coins can be\n      used to permanently upgrade the level of your NFTs in order to increase\n      their staking power.\n    </h4>\n    <h4 class=\"text-muted\">\n      In the future, more use cases will follow — such as giving your NFTs\n      custom names and participating in winning opportunities.\n    </h4>\n\n    <br />\n    <template v-if=\"nftsMinted < nftsToMintTotal\">\n      <h2>For {{ bchPerNft / 10 ** 18 }} BCH you can mint 1 NFT.</h2>\n\n      <h4 class=\"lead text-muted mx-auto my-3\">\n        <span>You can mint up to 40 NFTs per transaction. </span>\n        <span>The NFTs are minted in a non-sequential, randomised order.</span>\n      </h4>\n\n      <h2 class=\"mx-auto my-4\">\n        <span\n          >{{ nftsMinted }} of {{ nftsToMintTotal }} NFTs have been\n          minted.</span\n        >\n      </h2>\n\n      <h4 class=\"lead text-muted mx-auto my-3\">\n        <span>Please select how many Reaperville NFTs you want to mint.</span>\n      </h4>\n\n      <div class=\"mb-3 mx-auto\">\n        <div class=\"input-group mx-auto\">\n          <div class=\"input-group-prepend mx-auto\">\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 1\"\n            >\n              1\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 5\"\n            >\n              5\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 10\"\n            >\n              10\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 15\"\n            >\n              15\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 20\"\n            >\n              20\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 25\"\n            >\n              25\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 30\"\n            >\n              30\n            </button>\n            &nbsp;\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              @click=\"nftsToMint = 40\"\n            >\n              40\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mb-3 mx-auto\">\n        <div class=\"input-group mx-auto\">\n          <div class=\"input-group-prepend mx-auto\">\n            <button\n              class=\"btn-primary\"\n              :disabled=\"nftsToMint <= 1\"\n              @click=\"changeNftsToMint(-1)\"\n            >\n              -\n            </button>\n\n            <div class=\"col-lg-8 col-md-8 col-sm-8 mx-auto\">\n              <input\n                id=\"tokensToBuy\"\n                type=\"number\"\n                min=\"1\"\n                :max=\"maxNftsPerTx\"\n                class=\"form-control mx-auto\"\n                @change=\"changeNftsToMint(0)\"\n                v-model=\"nftsToMint\"\n              />\n            </div>\n\n            <button\n              class=\"btn-primary\"\n              :disabled=\"nftsToMint >= maxNftsPerTx\"\n              @click=\"changeNftsToMint(1)\"\n            >\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <span class=\"row-lg-12\">\n        <span class=\"column\">\n          <h4 v-if=\"nftsToMint > 1\">\n            Mint {{ nftsToMint }} Reaperville NFTs for:\n          </h4>\n          <h4 v-else>Mint 1 Reaperville NFT for:</h4>\n          <div class=\"col-lg-6 col-md-8 mx-auto\">\n            <button\n              id=\"buyButtonBch\"\n              type=\"button\"\n              class=\"btn btn-primary my-2 btn-large\"\n              :disabled=\"mintPaused || bchPerNft <= 0\"\n              @click=\"mintNFTsWithBCH\"\n            >\n              {{ Math.round((nftsToMint * bchPerNft) / 10 ** 12) / 10 ** 6 }}\n              BCH\n            </button>\n            <!-- &nbsp;\n            <button\n              id=\"buyButtonWom\"\n              type=\"button\"\n              class=\"btn btn-primary my-2 btn-large\"\n              :disabled=\"mintPaused || powTokenPriceWom <= 0\"\n              @click=\"buyPowWithToken('WoM')\"\n            >\n              {{\n                Math.round((nftsToMint * powTokenPriceWom) / 10 ** 12) / 10 ** 6\n              }}\n              WoM\n            </button>\n            &nbsp;\n            <button\n              id=\"buyButtonFlexUsd\"\n              type=\"button\"\n              class=\"btn btn-primary my-2 btn-large\"\n              :disabled=\"mintPaused || powTokenPriceFlexUsd <= 0\"\n              @click=\"buyPowWithToken('flexUSD')\"\n            >\n              {{\n                Math.round((nftsToMint * powTokenPriceFlexUsd) / 10 ** 12) /\n                10 ** 6\n              }}\n              flexUSD\n            </button> -->\n          </div>\n        </span>\n      </span>\n    </template>\n    <template v-else>\n      <h2 class=\"mt-4\">\n        All Reaperville NFTs have been minted. Visit\n        <a\n          :href=\"'https://oasis.cash/collection/' + mintContractAddress\"\n          target=\"_blank\"\n          >Oasis.cash</a\n        >\n        to check if there are some for sale!\n      </h2>\n    </template>\n\n    <br />\n\n    <h3 class=\"mt-4\">\n      <span\n        >Your Balance:\n        {{ Math.round(stakersBchBalance / 10 ** 15) / 10 ** 3 }} BCH\n        <!-- {{ Math.round(stakersWomBalance / 10 ** 15) / 10 ** 3 }} WoM,\n              {{ Math.round(stakersFlexUsdBalance / 10 ** 15) / 10 ** 3 }}\n              flexUSD -->\n      </span>\n    </h3>\n\n    <h3>You hold {{ nftsOwned }} Reaperville NFTs in your wallet.</h3>\n\n    <br />\n\n    <div class=\"row\">\n      <h4 class=\"text-monospace col-lg-12 col-md-12 mx-auto mt-4 mb-2\">\n        {{ feedbackMessage }}\n      </h4>\n    </div>\n\n    <div class=\"row\" v-if=\"txInProgress\">\n      <h4 class=\"text-monospace col-lg-12 col-md-12 mx-auto mt-1 mb-4\">\n        Please wait for the transaction to finish!\n      </h4>\n    </div>\n\n    <br />\n\n    <h6 class=\"text-muted mt-2\">\n      <span\n        >The gas limit is set to {{ gasLimit }} to ensure a successful mint.\n        Unused gas is automatically returned to your wallet. If you lower the\n        gas limit, you risk having failed transactions. If a transaction fails,\n        the gas fee is lost.</span\n      >\n    </h6>\n\n    <h6 class=\"mx-auto text-muted\">\n      <span>Note that transactions cannot be undone.</span>\n    </h6>\n\n    <!-- <br />\n    <h1 class=\"fw-light\"><strong>Your POW tokens</strong></h1>\n\n    <div class=\"lead text-muted\">\n      <span>Balance: {{ stakersRewardTokenBalance }} POW </span>\n    </div>\n    <div\n      class=\"lead text-muted\"\n      v-if=\"stakersRewardTokenBalance > 0 && stakersPowAllowanceForLeveling <= 0\"\n    >\n      <span>Remember to approve the POW token for level upgrades.</span>\n    </div>\n    <div\n      class=\"lead text-muted\"\n      v-if=\"stakersRewardTokenBalance > 0 && stakersPowAllowanceForLeveling > 0\"\n    >\n      <span>You are now ready to level up some NFTs!</span>\n    </div>\n\n    <br /> \n    <div class=\"row py-5\">\n      <div>\n        <h1 class=\"fw-light\">\n          <strong>POW Tokens Approval for Leveling</strong>\n        </h1>\n\n        <div class=\"lead text-muted\">\n          <span\n            >Before you can upgrade the staking power of the NFTs, you have to\n            approve the leveler contract as a spender of POW tokens.</span\n          >\n        </div>\n\n        <div class=\"lead text-muted\">\n          <span>You only need to give your approval once.</span>\n        </div>\n\n        <div class=\"lead text-muted\">\n          <span\n            >If you wish to remove your approval, you can do that here,\n            too.</span\n          >\n        </div>\n\n        <div class=\"col-12\">\n          <button\n            class=\"btn btn-success\"\n            type=\"button\"\n            id=\"approvePowToken\"\n            :disabled=\"stakersPowAllowanceForLeveling > 0\"\n            @click=\"approvePowToken\"\n          >\n            approve\n          </button>\n          &nbsp;\n          <button\n            class=\"btn btn-danger\"\n            type=\"button\"\n            id=\"removePowAllowance\"\n            :disabled=\"stakersPowAllowanceForLeveling <= 0\"\n            @click=\"removePowTokenAllowance\"\n          >\n            (remove approval)\n          </button>\n        </div> \n      </div> \n    </div> -->\n  </section>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      provider: null,\n      signer: null,\n\n      stakersAddress: \"\",\n      stakersBchBalance: 0,\n\n      feedbackMessage: \"\",\n\n      mintContract: null,\n      mintContractAddress: window.ReaperAddress,\n      mintPaused: true,\n      nftsToMint: 10,\n      maxNftsPerTx: 40,\n      bchPerNft: 20000000000000000,\n      nftsMinted: 0,\n      nftsOwned: 0,\n      nftsToMintTotal: 2500,\n      txInProgress: false,\n      gasLimit: 250000,\n\n      // stakersRewardTokenBalance: 0,\n\n      // rewardTokenPerNft: 0,\n      // flexUsdPerNft: 0,\n\n      // rewardTokenContract: null,\n      // flexUsdTokenContract: null,\n    };\n  },\n  methods: {\n    getBchBalance: function () {\n      this.provider.getBalance(this.stakersAddress).then((balance) => {\n        this.stakersBchBalance = balance;\n      });\n    },\n\n    changeNftsToMint: function (_changeAmount) {\n      this.feedbackMessage = \"\";\n      this.nftsToMint = Math.floor(this.nftsToMint) + _changeAmount;\n      if (this.nftsToMint < 1) {\n        this.nftsToMint = 1;\n      } else if (this.nftsToMint > this.maxNftsPerTx) {\n        this.nftsToMint = this.maxNftsPerTx;\n      }\n    },\n\n    mintNFTsWithBCH: async function () {\n      await this.load(); // get most recent values\n\n      // check if there are enough NFTs left to mint as the user wants\n      let nftsLeft = this.nftsToMintTotal - this.nftsMinted;\n      if (this.nftsToMint > nftsLeft) {\n        this.feedbackMessage = `There are only ${nftsLeft} NFTs available for minting!`;\n        this.maxNftsPerTx = nftsLeft;\n        return false;\n      }\n\n      // check if the user has enough funds\n      let totalCostBchWei = this.bchPerNft * this.nftsToMint;\n      let totalGasLimit = Math.min(\n        10000000,\n        this.gasLimit + (this.gasLimit - 25000) * (this.nftsToMint - 1)\n      );\n\n      console.log(\"totalCostBchWei: \", totalCostBchWei);\n      console.log(\"Gas limit: \", totalGasLimit);\n\n      if (this.stakersBchBalance < totalCostBchWei + totalGasLimit) {\n        this.feedbackMessage = `You have ${\n          Math.round(this.stakersBchBalance / 10 ** 14) / 10 ** 4\n        } BCH in your wallet. You can mint up to ${Math.round(\n          this.stakersBchBalance / Number(this.bchPerNft) - 0.5\n        )} NFTs with that.`;\n        return false;\n      }\n\n      // mint NFTs\n      this.feedbackMessage = `Minting your NFTs.`;\n      this.txInProgress = true;\n\n      let tx;\n      try {\n        tx = await this.mintContract.mint(this.nftsToMint, {\n          value: totalCostBchWei.toString(),\n          gasLimit: totalGasLimit.toString(),\n          gasPrice: 1046740000,\n        });\n        console.log(tx);\n        await tx.wait();\n        console.log(tx);\n      } catch (err) {\n        this.feedbackMessage = \"An error occured. Please try again later.\";\n        this.txInProgress = false;\n        return false;\n      }\n\n      console.log(\"tx hash:\", tx.hash);\n      const txInfo = await this.provider.getTransaction(tx.hash);\n      try {\n        let code = await this.provider.call(txInfo, txInfo.blockNumber);\n        console.log(code);\n        if (code == \"0x\") {\n          this.feedbackMessage = `Congratulations! You successfully minted some NFTs! Visit the staking website to take a look at your NFTs.`;\n          this.txInProgress = false;\n        }\n      } catch (err) {\n        this.feedbackMessage = \"An error occured.\\nPlease try again later.\";\n        this.txInProgress = false;\n        const code = err.data.replace(\"Reverted \", \"\");\n        console.log({ err });\n        let reason = ethers.utils.toUtf8String(\"0x\" + code.substr(138));\n        console.log(\"revert reason:\", reason);\n      }\n\n      this.load();\n    },\n\n    load: async function () {\n      this.signer.getAddress().then((myAddress) => {\n        this.stakersAddress = myAddress;\n        this.getBchBalance();\n        // this.getRewardTokenBalance();\n        // this.getFlexUsdBalance();\n        this.mintContract.balanceOf(myAddress).then((_nftsOwned) => {\n          this.nftsOwned = _nftsOwned;\n        });\n      });\n      this.mintContract.isMintPausedStakingPaused().then((result) => {\n        this.mintPaused = result[0];\n      });\n      this.mintContract.bchPerNft().then((_bchPerNft) => {\n        this.bchPerNft = _bchPerNft;\n      });\n      this.mintContract.totalSupply().then((_nftsMinted) => {\n        this.nftsMinted = _nftsMinted;\n      });\n    },\n  },\n  mounted: function () {\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    this.provider\n      .send(\"eth_requestAccounts\", [])\n      .then(() => {\n        this.signer = this.provider.getSigner();\n\n        this.mintContract = new ethers.Contract(\n          window.ReaperAddress,\n          Reaperville.abi,\n          this.provider.getSigner()\n        );\n      })\n      .then(() => {\n        this.load();\n      });\n  },\n};\n</script>\n","import { render } from \"./NftMint.vue?vue&type=template&id=69a1b975\"\nimport script from \"./NftMint.vue?vue&type=script&lang=js\"\nexport * from \"./NftMint.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"content-body\">\n    <NftTop projectname=\"Reaperville\" />\n\n    <Nft\n      :nftCA=\"nftContract\"\n      projectname=\"Reaperville\"\n      pictureLink=\"https://raw.githubusercontent.com/Surviville/Reaperville/master/png-low-res/\"\n    />\n  </div>\n</template>\n\n<script>\nimport Nft from \"@/components/Nft.vue\";\nimport NftTop from \"@/components/NftTop.vue\";\n\nexport default {\n  name: \"App\",\n  components: { Nft, NftTop },\n  data() {\n    return {\n      nftContract: window.ReaperAddress,\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <div class=\"text-center\" v-if=\"stakersAddress === null\">\n    <h5>Please log into Metamask first, then refresh this website...</h5>\n  </div>\n\n  <div\n    class=\"text-center\"\n    v-if=\"loadingNfts === true && stakersAddress !== null\"\n  >\n    <h5 mt-4>Loading NFTs...</h5>\n  </div>\n\n  <div class=\"col-12 text-center\" v-if=\"transactionInProgress\">\n    <h5>Waiting for current transaction to finish...</h5>\n  </div>\n\n  <h4 class=\"mt-4\">{{ feedbackMessage }}</h4>\n\n  <div\n    class=\"col-xxl-10 col-xl-10 col-lg-10 col-md-10 col-sm-12 mx-auto\"\n    v-if=\"stakersAddress !== null && stakersTokenAllowanceForLeveling <= 0\"\n  >\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <span\n          >Before you can upgrade your NFTs, you need to approve the SVC token\n          once.</span\n        >\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          id=\"approveRewardToken\"\n          @click=\"approveRewardToken\"\n        >\n          approve SVC\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <br />\n\n  <div class=\"card\" v-if=\"stakersAddress !== null\">\n    <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n      <div class=\"card-body\">\n        <h4 v-if=\"selectedNfts.length == 1\">1 NFT selected</h4>\n\n        <h4 v-else>{{ selectedNfts.length }} NFTs selected</h4>\n\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          @click=\"expandFilter = !expandFilter\"\n        >\n          Filter\n        </button>\n\n        <ul v-if=\"expandFilter\">\n          <li>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              @click=\"filterNfts('all')\"\n              v-bind:class=\"filter === null ? 'current' : ''\"\n              >All ({{ stakersNfts.length }})</a\n            >\n          </li>\n          <li>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              @click=\"filterNfts('staked')\"\n              v-bind:class=\"filter === 'staked' ? 'current' : ''\"\n              >Staked ({{ stakedCount }})</a\n            >\n          </li>\n          <li>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              @click=\"filterNfts('unstaked')\"\n              v-bind:class=\"filter === 'unstaked' ? 'current' : ''\"\n              >Unstaked ({{ unstakedCount }})</a\n            >\n          </li>\n        </ul>\n\n        &nbsp;\n\n        <button\n          @click=\"selectVisible\"\n          class=\"btn btn-success\"\n          style=\"font-size: 14px\"\n        >\n          Select all\n        </button>\n\n        &nbsp;\n\n        <button\n          @click=\"clearSelection\"\n          class=\"btn btn-danger\"\n          style=\"font-size: 14px\"\n        >\n          Clear selection\n        </button>\n        &nbsp;\n        <button\n          @click=\"upgradeSelectedNfts()\"\n          class=\"btn btn-success\"\n          :disabled=\"\n            selectedNfts.length <= 0 ||\n            stakersTokenAllowanceForLeveling <= 0 ||\n            stakersTokenBalance <= 0 ||\n            stakingPaused\n          \"\n          style=\"font-size: 14px\"\n        >\n          Upgrade {{ Math.min(selectedNfts.length, maxNftsPerTx) }} for\n          {{ tokenCostToBulkUpgrade }}\n          SVC\n        </button>\n        &nbsp;\n        <button\n          @click=\"stakeSelected\"\n          class=\"btn btn-success\"\n          :disabled=\"selectedNfts.length <= 0 || stakingPaused\"\n          style=\"font-size: 14px\"\n        >\n          Stake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\n        </button>\n        &nbsp;\n        <button\n          @click=\"unstakeSelected\"\n          class=\"btn btn-danger\"\n          :disabled=\"selectedNfts.length <= 0 || stakingPaused\"\n          style=\"font-size: 14px\"\n        >\n          Unstake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\n        </button>\n        <p v-if=\"selectedNfts.length > maxLevel\">\n          Note: {{ maxLevel }} NFTs max staking and unstaking in 1 transaction\n        </p>\n      </div>\n    </div>\n\n    <br />\n\n    <div class=\"row\">\n      <template v-if=\"loadingNfts === false && stakersNfts.length <= 0\">\n        <h1 class=\"text-center\">No NFTs to display</h1>\n      </template>\n\n      <div\n        class=\"col-xxl-2 col-xl-3 col-lg-3 col-md-4 col-sm-4\"\n        v-for=\"tokenId in filteredNfts\"\n        :key=\"tokenId\"\n      >\n        <div class=\"card items\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <input\n                type=\"checkbox\"\n                :value=\"tokenId\"\n                v-model=\"selectedNfts\"\n                @click=\"selectNft(tokenId)\"\n              />\n              &nbsp;\n              <label>\n                <h5>#{{ tokenId }}</h5>\n              </label>\n            </div>\n            <div class=\"items-img position-relative\">\n              <img\n                :src=\"pictureLink + tokenId + '.png'\"\n                class=\"img-fluid rounded mb-3\"\n                alt=\"\"\n                @click=\"selectNft(tokenId)\"\n              />\n            </div>\n            <h6>\n              Current: &nbsp;\n              <span title=\"current level\">🏆{{ nftInfo[tokenId].level }}</span>\n              &nbsp;\n              <span title=\"current staking power\"\n                >🔥{{ powerForLevel[nftInfo[tokenId].level] }}</span\n              >\n            </h6>\n\n            <h6 v-if=\"nftInfo[tokenId].level >= maxLevel\">\n              Max. level reached!\n            </h6>\n            <div v-else>\n              <!-- <span title=\"current level\"\n                        >🏆{{ nftInfo[tokenId].level }}</span\n                      > -->\n              <div class=\"row\">\n                <input\n                  type=\"range\"\n                  title=\"Choose desired level after upgrade\"\n                  class=\"form-control-range\"\n                  :min=\"nftInfo[tokenId].level + 1\"\n                  :max=\"maxLevel\"\n                  id=\"levelsToUpgradeSlider\"\n                  v-model=\"nftInfo[tokenId].nftLevelAfterUpgrade\"\n                  @change=\"updateLevelsToUpgrade(tokenId)\"\n                />\n              </div>\n              <h6 class=\"text-muted\" mx-auto>\n                After upgrade:\n                <span\n                  title=\"level after upgrade\"\n                  v-if=\"nftInfo[tokenId].nftLevelAfterUpgrade <= maxLevel\"\n                >\n                  🏆{{ nftInfo[tokenId].nftLevelAfterUpgrade }}\n                </span>\n                <span title=\"power after upgrade\">\n                  🔥{{\n                    powerForLevel[nftInfo[tokenId].nftLevelAfterUpgrade]\n                  }}</span\n                >\n              </h6>\n            </div>\n            <div class=\"d-flex justify-content-center mt-3\">\n              <button\n                v-if=\"nftInfo[tokenId].staked\"\n                @click=\"unstake(tokenId)\"\n                class=\"btn btn-danger\"\n                :disabled=\"stakingPaused\"\n              >\n                Unstake\n              </button>\n              <button\n                v-else\n                @click=\"stake(tokenId)\"\n                class=\"btn btn-primary\"\n                :disabled=\"stakingPaused\"\n              >\n                Stake\n              </button>\n\n              &nbsp;\n\n              <button\n                v-if=\"stakersTokenAllowanceForLeveling <= 0\"\n                class=\"btn btn-primary\"\n                type=\"button\"\n                id=\"approveRewardToken\"\n                @click=\"approveRewardToken\"\n              >\n                approve SVC\n              </button>\n              <button\n                v-else\n                @click=\"\n                  upgradeSpecificNft(tokenId, nftInfo[tokenId].levelsToUpgrade)\n                \"\n                class=\"btn btn-primary\"\n                :disabled=\"\n                  stakersTokenBalance <= 0 ||\n                  nftInfo[tokenId].level >= maxLevel ||\n                  stakingPaused\n                \"\n                style=\"font-size: 14px\"\n              >\n                Upgrade\n                {{ nftInfo[tokenId].levelsToUpgrade }} level<template\n                  v-if=\"nftInfo[tokenId].levelsToUpgrade != 1\"\n                  >s</template\n                >\n                for\n                {{ nftInfo[tokenId].levelsToUpgrade * tokenCostPerLevel }}\n                SVC\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { ethers } from \"ethers\";\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\n\nfunction removeItemOnce(arr, value) {\n  let index = arr.indexOf(value);\n  if (index > -1) {\n    arr.splice(index, 1); // 2nd parameter: Amount of elements to remove\n  } else {\n    console.log(\"Unstaking an NFT that has not been staked before!\");\n  }\n  return arr;\n}\n\n// function matchesAllFilters(nft, filters) {\n//   for (const [category, traits] of Object.entries(filters)) {\n//     if (0 === traits.length) {\n//       // console.log(\"No filter on \" + category + \" specified\");\n//       continue;\n//     } else if (-1 === traits.indexOf(nft[\"traits\"][category])) {\n//       // console.log(\"Specified traits for \" + category + \" not in nft \" + nft.id +\". Trait is \" + nft[\"traits\"][category]);\n//       return false;\n//     }\n//   }\n//   // console.log(nft.id + \" matches all filters\");\n//   return true;\n// }\n\nexport default {\n  name: \"App\",\n  props: [\"nftCA\", \"projectname\", \"pictureLink\"],\n  emits: [\"updateStakingPowerEvent\"],\n\n  data() {\n    return {\n      expandFilter: false,\n\n      rpc: null,\n\n      maxLevel: 100,\n      tokenCostPerLevel: 100,\n      tokenCostToBulkUpgrade: 0,\n\n      powerForLevel: [\n        1000, 1050, 1104, 1162, 1224, 1291, 1363, 1440, 1523, 1613, 1710, 1815,\n        1928, 2051, 2184, 2329, 2486, 2657, 2844, 3048, 3271, 3515, 3782, 4075,\n        4397, 4730, 5074, 5428, 5792, 6165, 6546, 6934, 7329, 7730, 8136, 8546,\n        8959, 9375, 9793, 10212, 10632, 11051, 11469, 11886, 12301, 12713,\n        13122, 13527, 13928, 14324, 14715, 15101, 15481, 15855, 16223, 16584,\n        16939, 17287, 17628, 17962, 18288, 18607, 18918, 19222, 19519, 19808,\n        20090, 20364, 20631, 20891, 21143, 21391, 21634, 21873, 22107, 22336,\n        22561, 22781, 22997, 23210, 23421, 23630, 23836, 24040, 24242, 24441,\n        24638, 24833, 25025, 25215, 25402, 25587, 25770, 25950, 26128, 26304,\n        26477, 26648, 26817, 26983, 27147,\n      ],\n\n      maxNftsPerTx: 50,\n\n      showLevelingExplanation: false,\n\n      stakersAddress: null,\n\n      currentCollection: null,\n\n      stakersTokenBalance: 0,\n      stakersTokenAllowanceForLeveling: 0,\n\n      feedbackMessage: \"\",\n\n      nftContract: null,\n      stakingContract: null,\n      rewardTokenContract: null,\n\n      provider: null,\n      signer: null,\n\n      loadingNfts: true,\n\n      stakersNfts: [],\n      filteredNfts: [],\n      filter: \"all\",\n      selectedNfts: [],\n      nftInfo: {},\n\n      stakedCount: 0,\n      unstakedCount: 0,\n\n      nftLevel: {},\n\n      transactionInProgress: false,\n\n      stakingPaused: true,\n    };\n  },\n\n  methods: {\n    // updateFilters: function () {\n    //   that.filters = {}\n    //   filters.Background = getSelectValues(document.getElementById(\"Background\"));\n    //   filters.Fur = getSelectValues(document.getElementById(\"Fur\"));\n    //   filters.Clothes = getSelectValues(document.getElementById(\"Clothes\"));\n    //   filters.Eyes = getSelectValues(document.getElementById(\"Eyes\"));\n    //   filters.Mouth = getSelectValues(document.getElementById(\"Mouth\"));\n    //   filters.Earring = getSelectValues(document.getElementById(\"Earring\"));\n    //   filters.Hat = getSelectValues(document.getElementById(\"Hat\"));\n    //   filters.Profile = getSelectValues(document.getElementById(\"Profile\"));\n    //   filters.Special = getSelectValues(document.getElementById(\"Special\"));\n    //   filters.trait_count = getSelectValues(document.getElementById(\"trait_count\"));\n\n    //   for (let nft of that.sts) {\n    //     if (false == matchesAllFilters(nft, filters)) continue;\n    //   }\n    // },\n\n    selectNft: function (_tokenId) {\n      let that = this;\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\n        that.selectedNfts.push(_tokenId);\n      } else {\n        removeItemOnce(that.selectedNfts, _tokenId);\n      }\n      that.updateCostForBulkUpgrade();\n    },\n\n    updateLevelsToUpgrade: function (_tokenId) {\n      let that = this;\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\n        that.selectedNfts.push(_tokenId);\n      }\n      if (that.nftInfo[_tokenId].nftLevelAfterUpgrade > that.maxLevel) {\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade = that.maxLevel;\n      }\n      that.nftInfo[_tokenId].levelsToUpgrade =\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade -\n        that.nftInfo[_tokenId].level;\n\n      that.updateCostForBulkUpgrade();\n    },\n\n    getInitialLevel: function (_tokenId) {\n      // set initial level\n      if (_tokenId < 10) {\n        return 10;\n      } else if (_tokenId == 2500) {\n        return 0;\n      } else {\n        return 9 - Math.floor(_tokenId / 250);\n      }\n    },\n\n    getPower: function (_tokenId) {\n      return this.powerForLevel[this.nftInfo[_tokenId].level];\n    },\n\n    approveRewardToken: async function () {\n      let that = this;\n\n      that.feedbackMessage = \"Approving SVC token\";\n      that.transactionInProgress = true;\n\n      try {\n        let tx = await that.rewardTokenContract.approve(\n          window.ReaperAddress,\n          ethers.constants.MaxUint256,\n          {\n            gasLimit: 65000, // 60k is probably fine, too\n            gasPrice: 1046740000,\n          }\n        );\n        await tx.wait();\n        that.rewardTokenContract\n          .allowance(that.stakersAddress, window.ReaperAddress)\n          .then((allowance) => {\n            that.stakersTokenAllowanceForLeveling = allowance;\n          });\n        that.feedbackMessage = \"\";\n        that.transactionInProgress = false;\n      } catch {\n        that.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    stake: async function (tokenId) {\n      this.transactionInProgress = true;\n      this.feedbackMessage = \"Staking NFT\";\n\n      try {\n        let tx = await this.stakingContract.stake([tokenId], {\n          gasLimit: 230000,\n          gasPrice: 1046740000,\n        });\n        // let tx = await this.stakingContract.stake([tokenId]);\n        await tx.wait();\n        this.load();\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"\";\n      } catch {\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    unstake: async function (tokenId) {\n      this.transactionInProgress = true;\n      this.feedbackMessage = \"Unstaking NFT\";\n      try {\n        let tx = await this.stakingContract.unstake([tokenId], {\n          gasLimit: 290000,\n          gasPrice: 1046740000,\n        });\n        await tx.wait();\n        this.load();\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"\";\n      } catch {\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    selectVisible: function () {\n      this.feedbackMessage = \"\";\n      this.selectedNfts = [];\n      for (let tokenId of this.filteredNfts) {\n        if (this.selectedNfts.indexOf(tokenId) < 0) {\n          this.selectedNfts.push(tokenId);\n        }\n      }\n\n      this.updateCostForBulkUpgrade();\n    },\n\n    clearSelection: function () {\n      this.feedbackMessage = \"\";\n      this.selectedNfts = [];\n      this.updateCostForBulkUpgrade();\n    },\n\n    stakeSelected: async function () {\n      this.transactionInProgress = true;\n      this.feedbackMessage = \"Staking NFTs\";\n\n      let IDs = [];\n\n      for (let tokenId of this.selectedNfts) {\n        if (\n          this.nftInfo[tokenId].staked === false &&\n          this.filteredNfts.indexOf(tokenId) > -1 &&\n          IDs.length < this.maxNftsPerTx\n        ) {\n          // console.log(this.selectedNfts[i], this.stakersNfts[findIdx]);\n          IDs.push(tokenId);\n        }\n      }\n\n      this.selectedNfts = IDs.slice();\n\n      if (IDs.length === 0) {\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\n        return false;\n      } else {\n        this.feedbackMessage = \"Staking selected NFTs.\";\n      }\n\n      try {\n        let tx = await this.stakingContract.stake(IDs, {\n          gasLimit: Math.min(50000 + 130000 * IDs.length, 9999999),\n          gasPrice: 1046740000,\n        });\n        await tx.wait();\n        this.load();\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"\";\n      } catch {\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    unstakeSelected: async function () {\n      this.transactionInProgress = true;\n      this.feedbackMessage = \"Unstaking NFTs\";\n\n      let IDs = [];\n\n      for (let tokenId of this.selectedNfts) {\n        if (\n          this.nftInfo[tokenId].staked === true &&\n          this.filteredNfts.indexOf(tokenId) > -1 &&\n          IDs.length < this.maxNftsPerTx\n        ) {\n          // console.log(this.selectedNfts[i], this.filteredNfts[findIdx]);\n          IDs.push(tokenId);\n        }\n      }\n\n      this.selectedNfts = IDs.slice();\n\n      if (IDs.length === 0) {\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\n        return false;\n      } else {\n        this.feedbackMessage = \"Unstaking selected NFTs.\";\n      }\n\n      try {\n        let tx = await this.stakingContract.unstake(IDs, {\n          gasLimit: Math.min(125000 + 200000 * IDs.length, 9999999),\n          gasPrice: 1046740000,\n        });\n        await tx.wait();\n        this.load();\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"\";\n      } catch {\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    updateCostForBulkUpgrade: function () {\n      let nftsFound = 0;\n      this.tokenCostToBulkUpgrade = 0;\n\n      for (let idx = 0; idx < this.selectedNfts.length; idx++) {\n        let tokenId = this.selectedNfts[idx];\n        let cost =\n          this.nftInfo[tokenId].levelsToUpgrade * this.tokenCostPerLevel;\n        if (nftsFound >= this.maxNftsPerTx) {\n          this.feedbackMessage = \"Max. number of NFTs selected\";\n          removeItemOnce(this.selectedNfts, tokenId);\n          idx--;\n        } else {\n          this.tokenCostToBulkUpgrade += cost;\n          nftsFound++;\n        }\n      }\n    },\n\n    upgradeSpecificNft: async function (_tokenId, _levelsToUpgrade) {\n      this.transactionInProgress = true;\n      this.feedbackMessage = \"\";\n\n      if (_levelsToUpgrade === 0) {\n        this.feedbackMessage = \"Can't upgrade 0 levels\";\n        return false;\n      }\n\n      let that = this;\n      let _rewardTokens = _levelsToUpgrade * that.tokenCostPerLevel;\n\n      // checking SVC token\n      if (_rewardTokens > that.stakersTokenAllowanceForLeveling) {\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\n        return false;\n      } else if (_rewardTokens > that.stakersTokenBalance) {\n        that.feedbackMessage = \"SVC token balance is too low\";\n        return false;\n      }\n\n      let level = that.nftInfo[_tokenId].level;\n      if (level >= that.maxLevel) {\n        that.feedbackMessage =\n          \"Cannot upgrade \" + _tokenId + \", because it's already at max. level\";\n        console.log(that.feedbackMessage);\n        return false;\n      }\n\n      // check owner\n      let _nftOwner = await that.nftContract.ownerOf(_tokenId);\n      if (_nftOwner !== that.stakersAddress) {\n        if (_nftOwner !== window.ReaperAddress) {\n          that.feedbackMessage =\n            \"Cannot upgrade \" + _tokenId + \", because it's not in your wallet\";\n          console.log(that.feedbackMessage);\n          return false;\n        }\n      }\n\n      that.feedbackMessage =\n        \"Upgrading 1 NFT by \" +\n        _levelsToUpgrade +\n        \" levels with \" +\n        _rewardTokens +\n        \" SVC\";\n      console.log(that.feedbackMessage);\n\n      console.log(\"Power old= \" + that.getPower(_tokenId));\n      console.log(\"Level old= \" + level);\n      console.log(\"Balance old= \" + that.stakersTokenBalance);\n      let balanceNew = that.stakersTokenBalance - _rewardTokens;\n      console.log(\"Balance new= \" + balanceNew);\n\n      try {\n        let tx = await that.stakingContract.upgradeLevel(\n          [_tokenId],\n          [_levelsToUpgrade],\n          {\n            gasLimit: 200000,\n            gasPrice: 1046740000,\n          }\n        );\n        await tx.wait();\n\n        if (that.nftInfo[_tokenId].staked) {\n          // that.load();\n          // that.$emit('updateStakingPowerEvent');\n          window.location.reload();\n        } else {\n          that.load();\n        }\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"\";\n      } catch {\n        this.transactionInProgress = false;\n        this.feedbackMessage = \"The transaction failed 😢\";\n      }\n    },\n\n    upgradeSelectedNfts: async function () {\n      this.feedbackMessage = \"\";\n\n      let that = this;\n\n      // checking SVC token\n      if (\n        that.tokenCostToBulkUpgrade * 10 ** 18 >\n        that.stakersTokenAllowanceForLeveling\n      ) {\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\n        return false;\n      } else if (\n        that.tokenCostToBulkUpgrade * 10 ** 18 >\n        that.stakersTokenBalance\n      ) {\n        that.feedbackMessage = \"SVC token balance is too low\";\n        return false;\n      }\n\n      if (that.selectedNfts.length < 1) {\n        that.feedbackMessage = \"No NFTs selected\";\n        return false;\n      } else if (that.selectedNfts.length == 1) {\n        let tokenId = that.selectedNfts[0];\n        let level = that.nftInfo[tokenId].level;\n        if (level >= that.maxLevel) {\n          that.feedbackMessage =\n            \"Cannot upgrade \" +\n            tokenId +\n            \", because it's already at max. level\";\n          console.log(that.feedbackMessage);\n          return false;\n        }\n\n        // check owner\n        let _nftOwner = await this.nftContract.ownerOf(tokenId);\n        if (_nftOwner !== that.stakersAddress) {\n          if (_nftOwner !== window.ReaperAddress) {\n            that.feedbackMessage = \"You don't own \" + tokenId;\n            console.log(that.feedbackMessage);\n            return false;\n          }\n        }\n\n        that.feedbackMessage =\n          \"Upgrading 1 NFT by \" +\n          that.nftInfo[tokenId].levelsToUpgrade +\n          \" levels\";\n        console.log(that.feedbackMessage);\n\n        console.log(\"Level old= \" + level);\n        console.log(\"Balance old= \" + that.stakersTokenBalance);\n        let balanceNew =\n          that.stakersTokenBalance - that.nftInfo[tokenId].levelsToUpgrade;\n        console.log(\"Balance new= \" + balanceNew);\n\n        this.transactionInProgress = true;\n        try {\n          let tx = await that.stakingContract.upgradeLevel(\n            [tokenId],\n            [that.nftInfo[tokenId].levelsToUpgrade],\n            {\n              gasLimit: 200000,\n              gasPrice: 1046740000,\n            }\n          );\n          await tx.wait();\n        } catch {\n          this.transactionInProgress = false;\n          this.feedbackMessage = \"The transaction failed 😢\";\n        }\n        if (that.nftInfo[tokenId].staked) {\n          // that.emit('updateStakingPowerEvent');\n          window.location.reload();\n        } else {\n          that.load();\n        }\n      } else if (that.selectedNfts.length > 1) {\n        // go through selected NFTs and pick first maxNftsPerTx which qualify for an upgrade\n        let nftsToUpgradeArray = [];\n        let levelsToUpgradeArray = [];\n        that.feedbackMessage = \"Double checking selected NFTs\";\n        for (\n          let i = 0;\n          i < that.selectedNfts.length &&\n          nftsToUpgradeArray.length < that.maxNftsPerTx;\n          i++\n        ) {\n          let tokenId = that.selectedNfts[i];\n          // check cost\n          if (that.nftInfo[tokenId].levelsToUpgrade === 0) {\n            that.feedbackMessage +=\n              \" — Skipping \" + tokenId + \" (0 SVC upgrade)\";\n            continue;\n          }\n\n          // check level\n          if (that.nftInfo[tokenId].level >= that.maxLevel) {\n            that.feedbackMessage +=\n              \" — Skipping \" + tokenId + \" (already at max level)\";\n            continue;\n          }\n\n          // // check owner\n          // let _nftOwner = await this.nftContract.ownerOf(tokenId);\n          // if (_nftOwner !== that.stakersAddress) {\n          //   if (_nftOwner !== window.ReaperAddress) {\n          //     that.feedbackMessage +=\n          //       \" — Skipping \" + tokenId + \" (not in your wallet)\";\n          //     console.log(that.feedbackMessage);\n          //   }\n          // }\n\n          nftsToUpgradeArray.push(that.selectedNfts[i]);\n          levelsToUpgradeArray.push(that.nftInfo[tokenId].levelsToUpgrade);\n          console.log(\"Adding \" + tokenId);\n          console.log(nftsToUpgradeArray);\n        }\n\n        that.feedbackMessage +=\n          \" — \" + nftsToUpgradeArray.length + \" NFTs passed all checks\";\n        console.log(nftsToUpgradeArray);\n        console.log(levelsToUpgradeArray);\n        console.log(\"Bulk Upgrade Cost= \" + that.tokenCostToBulkUpgrade);\n\n        console.log(\"Balance old=\" + that.stakersTokenBalance);\n        let powBalanceAfterUpgrade =\n          that.stakersTokenBalance - that.tokenCostToBulkUpgrade;\n        console.log(\"Balance after bulk upgrade: \", powBalanceAfterUpgrade);\n\n        if (nftsToUpgradeArray.length <= 0) {\n          return false;\n        }\n\n        that.feedbackMessage +=\n          \" — Upgrading NFTs [\" +\n          nftsToUpgradeArray +\n          \"] by [\" +\n          levelsToUpgradeArray +\n          \"] levels\";\n\n        this.transactionInProgress = true;\n        try {\n          let tx = await this.stakingContract.upgradeLevel(\n            nftsToUpgradeArray,\n            levelsToUpgradeArray,\n            {\n              gasLimit: Math.min(\n                30000 + 135000 * nftsToUpgradeArray.length,\n                9999999\n              ),\n              gasPrice: 1046740000,\n            }\n          );\n          await tx.wait();\n        } catch {\n          this.transactionInProgress = false;\n          this.feedbackMessage = \"The transaction failed 😢\";\n        }\n      }\n      that.load();\n      this.transactionInProgress = false;\n      this.feedbackMessage = \"\";\n    },\n\n    filterNfts: function (_param) {\n      let that = this;\n\n      let staked = [];\n      let unstaked = [];\n\n      that.expandFilter = false;\n\n      that.filter = _param;\n\n      switch (_param) {\n        case \"all\":\n          // that.filteredNfts = that.stakersNfts;\n          staked = that.stakersNfts.filter((tokenId) => {\n            return that.nftInfo[tokenId].staked === true;\n          });\n          unstaked = that.stakersNfts.filter((tokenId) => {\n            return that.nftInfo[tokenId].staked === false;\n          });\n          that.filteredNfts = staked.concat(unstaked);\n          break;\n        case \"staked\":\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\n            return that.nftInfo[tokenId].staked === true;\n          });\n          break;\n        case \"unstaked\":\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\n            return that.nftInfo[tokenId].staked === false;\n          });\n          break;\n        default:\n          that.feedbackMessage = \"Filter not implemented\";\n      }\n    },\n\n    getWalletOfOwner: async function (slice) {\n      let that = this;\n      //////////////////////////////////////////////////////////////////\n      // load wallet of owner (includes staked and unstaked NFTs)     //\n      // and levels for NFTs (level = level + 1000 for unstaked NFTs) //\n      //////////////////////////////////////////////////////////////////\n      const maxNftsToGetIn1Tx = 500;\n      return new Promise((resolve, reject) => {\n        let tokenLevelsLength = 0;\n        let ownerTokenCount = 0;\n\n        console.log(\"slice=\", slice);\n        that.nftContract\n          .walletOfOwnerWithLevels(\n            that.stakersAddress,\n            maxNftsToGetIn1Tx,\n            slice\n          )\n          .then((tokensLevels) => {\n            console.log(\"tokensLevels=\", tokensLevels);\n\n            tokenLevelsLength = tokensLevels.length;\n            if (\n              2 * Math.floor(tokensLevels.length / 2) + 1 !==\n              tokensLevels.length\n            ) {\n              console.log(\n                \"Critical error! tokenLevelsLength should always be an odd number! tokenLevelsLength=\",\n                tokenLevelsLength\n              );\n            }\n\n            // last element is ownerTokenCount — skip last element in loop\n            ownerTokenCount = tokensLevels[tokensLevels.length - 1];\n\n            for (let iCopy = 0; iCopy < tokensLevels.length - 1; iCopy += 2) {\n              let tokenId = Number(tokensLevels[iCopy]);\n              let level = Number(tokensLevels[iCopy + 1]);\n              let staked = false;\n              if (level > that.maxLevel) {\n                level -= 1000;\n                staked = false;\n                that.unstakedCount++;\n              } else {\n                staked = true;\n                that.stakedCount++;\n              }\n\n              if (level === 0) {\n                level = that.getInitialLevel(tokenId);\n              }\n\n              that.stakersNfts.push(tokenId);\n              that.nftInfo[tokenId] = {\n                staked: staked,\n                level: level,\n                nftLevelAfterUpgrade: level + 1,\n                levelsToUpgrade: 1,\n              };\n            }\n          })\n          .then(() => {\n            if ((slice + 1) * maxNftsToGetIn1Tx < ownerTokenCount) {\n              console.log(\"tokenLevelsLength\", tokenLevelsLength);\n              that.getWalletOfOwner(slice + 1).then(() => {\n                resolve();\n              });\n            } else {\n              resolve();\n            }\n          })\n          .catch(() => {\n            reject();\n          });\n      });\n    },\n\n    load: async function () {\n      let that = this;\n      that.loadingNfts = true;\n\n      that.filteredNfts = [];\n      that.stakersNfts = [];\n      that.stakedCount = 0;\n      that.unstakedCount = 0;\n\n      that.stakersAddress = await that.signer.getAddress();\n\n      that.stakingContract.isMintPausedStakingPaused().then((result) => {\n        console.log(result);\n        that.stakingPaused = result[1];\n      });\n\n      // load SVC balance and allowance\n      that.rewardTokenContract\n        .balanceOf(that.stakersAddress)\n        .then((balance) => {\n          that.stakersTokenBalance = balance;\n        });\n      that.rewardTokenContract\n        .allowance(that.stakersAddress, window.ReaperAddress)\n        .then((allowance) => {\n          that.stakersTokenAllowanceForLeveling = allowance;\n        });\n\n      that.getWalletOfOwner(0).then(() => {\n        that.stakersNfts.sort(function (a, b) {\n          return that.nftInfo[b].level - that.nftInfo[a].level;\n        });\n\n        console.log(\"calling filter\");\n        that.filterNfts(that.filter);\n\n        that.transactionInProgress = false;\n        that.loadingNfts = false;\n      });\n    },\n  },\n\n  mounted: function () {\n    this.rpc = window.ethereum; // doesn't work on Android due to a bug(?)\n\n    this.provider = new ethers.providers.Web3Provider(this.rpc, \"any\");\n\n    this.provider\n      .send(\"eth_requestAccounts\", [])\n      .then(() => {\n        this.signer = this.provider.getSigner();\n\n        let _nftContract = new ethers.Contract(\n          this.nftCA.toString(),\n          Reaperville.abi,\n          this.provider.getSigner()\n        );\n        this.stakingContract = new ethers.Contract(\n          window.ReaperAddress,\n          Reaperville.abi,\n          this.provider.getSigner()\n        );\n\n        let _rewardTokenContract = new ethers.Contract(\n          window.RewardTokenAddress,\n          RewardToken.abi,\n          this.provider.getSigner()\n        );\n\n        this.nftContract = _nftContract;\n        this.rewardTokenContract = _rewardTokenContract;\n      })\n      .then(() => {\n        this.load();\n      });\n  },\n};\n</script>\n","import { render } from \"./Nft.vue?vue&type=template&id=23a1b0c7\"\nimport script from \"./Nft.vue?vue&type=script&lang=js\"\nexport * from \"./Nft.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container text-start\" v-if=\"stakersAddress !== null\">\n    <div class=\"row\">\n      <div class=\"col-xxl-6 mx-auto\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <div class=\"col-12 align-items-left\">\n              <h4>\n                {{ projectname }} NFTs — Staking and Leveling &nbsp;\n                <i\n                  title=\"Reload numbers\"\n                  @click=\"reload\"\n                  class=\"ri-refresh-fill\"\n                ></i>\n              </h4>\n              <h5>Balance: {{ stakersRewardTokenBalance }} SVC</h5>\n              <br />\n              <h5 v-on:updateStakingPowerEvent=\"loadStakerInfo\">\n                Staking power: {{ stakersPower }}🔥\n              </h5>\n              <br />\n\n              <template v-if=\"stakersPower > 0\">\n                <h5>\n                  Staked for {{ formatSeconds(stakerStakedForSeconds) }}.\n                  (Harvest and unstake reset the timer.)\n                </h5>\n                <br />\n                <h5>Current payout level: {{ stakersPayoutPct }}%</h5>\n                <br />\n                <h5 v-if=\"stakerNextPayoutPctInSeconds > 0\">\n                  Next payout level: {{ stakersNextPayoutPct }}% — reached in\n                  {{ formatSeconds(stakerNextPayoutPctInSeconds) }}\n                </h5>\n                <h5 v-else>\n                  Congratulations! You reached the highest payout level.\n                </h5>\n              </template>\n\n              <br />\n              <h6>Total staked power: {{ totalStakedPower }}🔥</h6>\n              <!-- <h6>Base power: {{ baseStakingPower }}🔥</h6> -->\n              <h6>\n                Total SVC Emission: ~{{\n                  Math.round(womEmissionPerHour * earningsTime * 100) / 100\n                }}\n                SVC / {{ hoursInWords[earningsTime] }}\n              </h6>\n              <br />\n              <div\n                class=\"settings-menu\"\n                v-if=\"womEmissionPerHour && totalStakedPower && stakersPower\"\n              >\n                <button\n                  class=\"btn btn-primary\"\n                  @click=\"expandEarnings = !expandEarnings\"\n                >\n                  Earning ~{{\n                    Math.round(stakerEarningRateX1k * earningsTime) / 1000\n                  }}\n                  SVC / {{ hoursInWords[earningsTime] }} (@100%)\n                </button>\n                <ul v-if=\"expandEarnings\">\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"\n                        earningsTime = 1;\n                        expandEarnings = false;\n                      \"\n                      :class=\"earningsTime === 1 ? 'current' : ''\"\n                    >\n                      Earning ~{{ Math.round(stakerEarningRateX1k * 1) / 1000 }}\n                      SVC / hour (@100%)\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"\n                        earningsTime = 24;\n                        expandEarnings = false;\n                      \"\n                      v-bind:class=\"earningsTime === 24 ? 'current' : ''\"\n                    >\n                      Earning ~{{\n                        Math.round(stakerEarningRateX1k * 24) / 1000\n                      }}\n                      SVC / day (@100%)\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"\n                        earningsTime = 168;\n                        expandEarnings = false;\n                      \"\n                      v-bind:class=\"earningsTime === 168 ? 'current' : ''\"\n                    >\n                      Earning ~{{\n                        Math.round(stakerEarningRateX1k * 168) / 1000\n                      }}\n                      SVC / week (@100%)\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"\n                        earningsTime = 720;\n                        expandEarnings = false;\n                      \"\n                      v-bind:class=\"earningsTime === 720 ? 'current' : ''\"\n                    >\n                      Earning ~{{\n                        Math.round(stakerEarningRateX1k * 720) / 1000\n                      }}\n                      SVC / month (@100%)\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      class=\"dropdown-item\"\n                      @click=\"\n                        earningsTime = 8760;\n                        expandEarnings = false;\n                      \"\n                      v-bind:class=\"earningsTime === 8760 ? 'current' : ''\"\n                    >\n                      Earning ~{{\n                        Math.round(stakerEarningRateX1k * 8760) / 1000\n                      }}\n                      SVC / year (@100%)\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <br />\n              <div class=\"settings-menu\">\n                <button\n                  class=\"btn btn-primary\"\n                  @click=\"harvest\"\n                  :disabled=\"stakingPaused || womToHarvest == 0\"\n                >\n                  Harvest\n                  {{ Math.round(stakersPayoutPct * womToHarvest * 10) / 1000 }}\n                  SVC\n                </button>\n\n                &nbsp;\n\n                <a\n                  target=\"_blank\"\n                  href=\"https://app.mistswap.fi/swap?inputCurrency=BCH&outputCurrency=0xE7B1076d0853a7aAa6FbB477886726ed03C6Fffd\"\n                  class=\"btn btn-primary\"\n                >\n                  Trade SVC at MistSwap\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ethers } from \"ethers\";\nimport Reaper from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\n\n// let RewardTokenAddress = window.RewardTokenAddress;\n\nexport default {\n  name: \"App\",\n  props: [\"projectname\"],\n  data() {\n    return {\n      expandEarnings: false,\n\n      rewardTokenContract: null,\n\n      nftContract: null,\n      stakingContract: null,\n\n      provider: null,\n      signer: null,\n\n      womEmissionPerHour: null,\n\n      stakersAddress: null,\n      stakerStakedForSeconds: null,\n      SECONDS_PER_DAY: 86400, // TODO 86400 = 1 day\n      stakersPayoutPct: null,\n      stakersNextPayoutPct: null,\n      stakerNextPayoutPctInSeconds: null,\n\n      stakersPower: null,\n      totalStakedPower: null,\n      baseStakingPower: null,\n      stakerEarningRateX1k: null,\n\n      earningsTime: 168,\n      hoursInWords: {\n        1: \"hour\",\n        24: \"day\",\n        168: \"week\",\n        720: \"month\",\n        8760: \"year\",\n      },\n\n      womToHarvest: null,\n      stakingPaused: true,\n      stakersRewardTokenBalance: 0,\n    };\n  },\n  methods: {\n    harvest: async function () {\n      let tx = await this.stakingContract.harvest();\n      await tx.wait();\n      this.load();\n    },\n    approve: async function () {\n      let tx = await this.nftContract.setApprovalForAll(\n        window.ReaperAddress,\n        true\n      );\n      await tx.wait();\n      window.location.reload();\n    },\n\n    loadStakerInfo: function () {\n      this.stakingContract\n        .showStakerInfo(this.stakersAddress)\n        .then((stakerInfo) => {\n          let stakedForSeconds = stakerInfo[0];\n          this.stakerStakedForSeconds = stakedForSeconds;\n          if (stakedForSeconds > 30 * this.SECONDS_PER_DAY) {\n            this.stakersPayoutPct = 115; // 15% bonus\n            this.stakersNextPayoutPct = 115;\n            this.stakerNextPayoutPctInSeconds = 0;\n          } else if (stakedForSeconds < 19 * this.SECONDS_PER_DAY) {\n            let stakedForDays = Math.floor(\n              stakedForSeconds / this.SECONDS_PER_DAY\n            );\n            this.stakersPayoutPct = (stakedForDays + 1) * 5;\n            this.stakersNextPayoutPct = this.stakersPayoutPct + 5;\n            this.stakerNextPayoutPctInSeconds =\n              (stakedForDays + 1) * this.SECONDS_PER_DAY - stakedForSeconds;\n          } else {\n            this.stakersPayoutPct = 100;\n            this.stakersNextPayoutPct = 115;\n            this.stakerNextPayoutPctInSeconds =\n              30 * this.SECONDS_PER_DAY - stakedForSeconds;\n          }\n\n          this.stakersPower = stakerInfo[1];\n          this.totalStakedPower = stakerInfo[2];\n          this.baseStakingPower = stakerInfo[3];\n          this.womEmissionPerHour =\n            Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\n            100000;\n          this.stakerEarningRateX1k =\n            ((this.womEmissionPerHour * this.stakersPower) /\n              (this.totalStakedPower - this.baseStakingPower)) *\n            1000;\n        });\n      this.womToHarvest = 0;\n      this.stakingContract\n        .showStakersEarningsUntilLastTimestamp(this.stakersAddress)\n        .then((amount) => {\n          this.womToHarvest +=\n            Math.round(ethers.utils.formatEther(amount) * 100000) / 100000;\n        });\n      this.stakingContract\n        .showStakersEarningsAfterLastTimestamp(this.stakersAddress)\n        .then((earnings) => {\n          this.womToHarvest +=\n            Math.round(ethers.utils.formatEther(earnings) * 100000) / 100000;\n        });\n      this.stakingContract.isMintPausedStakingPaused().then((result) => {\n        this.stakingPaused = result[1];\n      });\n    },\n\n    formatSeconds: function (seconds) {\n      seconds = Number(seconds);\n      var d = Math.floor(seconds / (3600 * 24));\n      var h = Math.floor((seconds % (3600 * 24)) / 3600);\n      var m = Math.floor((seconds % 3600) / 60);\n      var s = Math.floor(seconds % 60);\n\n      var dDisplay = d > 0 ? d + \" d, \" : \"\";\n      var hDisplay = h > 0 ? h + \" h, \" : \"\";\n      var mDisplay = m > 0 ? m + \" min, \" : \"\";\n      var sDisplay = s > 0 ? s + \" sec\" : \"\";\n      return dDisplay + hDisplay + mDisplay + sDisplay;\n    },\n\n    loadRewardTokenBalance: function () {\n      console.log(this.stakersAddress);\n      this.rewardTokenContract\n        .balanceOf(this.stakersAddress)\n        .then((balance) => {\n          this.stakersRewardTokenBalance =\n            Math.round(ethers.utils.formatEther(balance) * 100000) / 100000;\n        });\n    },\n\n    reload: function () {\n      this.loadRewardTokenBalance();\n      this.loadStakerInfo();\n    },\n\n    load: function () {\n      this.signer.getAddress().then((userAddress) => {\n        console.log(this.stakersAddress);\n        this.stakersAddress = userAddress;\n        console.log(this.stakersAddress);\n        this.loadStakerInfo();\n        this.loadRewardTokenBalance();\n      });\n    },\n  },\n  mounted: function () {\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    this.provider\n      .send(\"eth_requestAccounts\", [])\n      .then(() => {\n        this.signer = this.provider.getSigner();\n        this.rewardTokenContract = new ethers.Contract(\n          window.RewardTokenAddress,\n          RewardToken.abi,\n          this.provider.getSigner()\n        );\n        this.stakingContract = new ethers.Contract(\n          window.ReaperAddress,\n          Reaper.abi,\n          this.provider.getSigner()\n        );\n      })\n      .then(() => {\n        this.load();\n      });\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin-top: 60px;\n}\n</style>\n","import { render } from \"./NftTop.vue?vue&type=template&id=6d176e9b\"\nimport script from \"./NftTop.vue?vue&type=script&lang=js\"\nexport * from \"./NftTop.vue?vue&type=script&lang=js\"\n\nimport \"./NftTop.vue?vue&type=style&index=0&id=6d176e9b&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./MyReapers.vue?vue&type=template&id=66ade722\"\nimport script from \"./MyReapers.vue?vue&type=script&lang=js\"\nexport * from \"./MyReapers.vue?vue&type=script&lang=js\"\n\nimport \"./MyReapers.vue?vue&type=style&index=0&id=66ade722&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"content-body\">\n    <AllNfts :pictureLink=\"pictureLink\" projectname=\"Reaperville\" />\n  </div>\n</template>\n\n<script>\nimport AllNfts from \"@/components/AllNfts.vue\";\n\nexport default {\n  name: \"App\",\n  components: { AllNfts },\n  data() {\n    return {\n      pictureLink: [\n        \"https://raw.githubusercontent.com/Surviville/Reaperville/master/png-low-res/\",\n        \"https://raw.githubusercontent.com/Surviville/Reaperville/master/png/\",\n      ],\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div\n            class=\"col-xxl-10 col-xl-10 col-lg-10 col-md-10 col-sm-12 mx-auto\"\n          >\n            <div class=\"card-body\">\n              <h2>\n                Explore the colorful Reaperville NFT collection on SmartBch!\n              </h2>\n              <h4>\n                Which one is your favorite? Let us know in the\n                <a href=\"https://t.me/reaperville\" target=\"_blank\"\n                  >official Reaperville Telegram group</a\n                >.\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12\">\n    <div class=\"card filter-tab\">\n      <div class=\"card-body bs-0 p-0 bg-transparent\">\n        <div class=\"row\">\n          <div\n            class=\"col-xxl-10 col-xl-10 col-lg-10 col-md-10 col-sm-12 mx-auto\"\n          >\n            <div class=\"card-body\">\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                @click=\"expandRange = !expandRange\"\n              >\n                Showing {{ startIdx }} - {{ startIdx + maxNftsPerPage - 1 }}\n              </button>\n              <ul v-if=\"expandRange\">\n                <li v-for=\"n in Math.ceil(2500 / maxNftsPerPage)\" :key=\"n\">\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load((n - 1) * maxNftsPerPage + 1, maxNftsPerPage)\"\n                    v-bind:class=\"\n                      startIdx === (n - 1) * maxNftsPerPage ? 'current' : ''\n                    \"\n                  >\n                    Show {{ (n - 1) * maxNftsPerPage + 1 }} -\n                    {{ Math.min(n * maxNftsPerPage, 2500) }}</a\n                  >\n                </li>\n              </ul>\n\n              <!-- <span v-for=\"n in Math.ceil(2500 / maxNftsPerPage)\" :key=\"n\">\n                <button\n                  @click=\"load(n, maxNftsPerPage)\"\n                  class=\"btn btn-primary\"\n                >\n                  {{ (n - 1) * maxNftsPerPage + 1 }} - {{ n * maxNftsPerPage }}\n                </button>\n                &nbsp;\n              </span> -->\n\n              &nbsp;\n\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                @click=\"expandMaxNftsPerPage = !expandMaxNftsPerPage\"\n              >\n                Max. {{ maxNftsPerPage }} NFTs\n              </button>\n              <ul v-if=\"expandMaxNftsPerPage\">\n                <li>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load(startIdx, 10)\"\n                    v-bind:class=\"maxNftsPerPage === 10 ? 'current' : ''\"\n                    >Max. 10</a\n                  >\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load(startIdx, 25)\"\n                    v-bind:class=\"maxNftsPerPage === 25 ? 'current' : ''\"\n                    >Max. 25</a\n                  >\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load(startIdx, 50)\"\n                    v-bind:class=\"maxNftsPerPage === 50 ? 'current' : ''\"\n                    >Max. 50</a\n                  >\n                </li>\n                <li>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load(startIdx, 75)\"\n                    v-bind:class=\"maxNftsPerPage === 75 ? 'current' : ''\"\n                    >Max. 75</a\n                  >\n                </li>\n                <li>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    @click=\"load(startIdx, 125)\"\n                    v-bind:class=\"maxNftsPerPage === 125 ? 'current' : ''\"\n                    >Max. 125</a\n                  >\n                </li>\n              </ul>\n\n              &nbsp;\n\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                @click=\"imgResolutionIdx = (imgResolutionIdx + 1) % 2\"\n              >\n                Resolution: {{ imgResolutionIdx === 0 ? \"Low\" : \"High\" }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <br />\n\n        <div class=\"row\">\n          <div\n            class=\"col-xxl-3 col-xl-4 col-lg-4 col-md-6 col-sm-6\"\n            v-for=\"tokenId in filteredNfts\"\n            :key=\"tokenId\"\n          >\n            <div class=\"card items\">\n              <div class=\"card-body\">\n                <div class=\"items-img position-relative\">\n                  <img\n                    :src=\"pictureLink[imgResolutionIdx] + tokenId + '.png'\"\n                    class=\"img-fluid rounded mb-3\"\n                    alt=\"\"\n                  />\n                </div>\n                <label>\n                  <h4 class=\"card-title\">\n                    #{{ tokenId }}\n                    &nbsp;\n                    <!-- <span title=\"current level\"\n                      >🏆{{ nftInfo[tokenId].level }}</span\n                    >\n                    &nbsp;\n                    <span title=\"current staking power\"\n                      >🔥{{ powerForLevel[nftInfo[tokenId].level] }}</span\n                    > -->\n                  </h4>\n                </label>\n                <!-- <div v-if=\"nftInfo[tokenId].level >= maxLevel\">\n                  Max. level reached!\n                </div>\n                <div v-else>\n                  <div>\n                    <span title=\"current level\"\n                      >🏆{{ nftInfo[tokenId].level }}</span\n                    >\n                  </div>\n                </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  props: [\"pictureLink\", \"projectname\"],\n  emits: [\"updateStakingPowerEvent\"],\n\n  data() {\n    return {\n      expandRange: false,\n      expandMaxNftsPerPage: false,\n\n      maxLevel: 100,\n\n      powerForLevel: [\n        1000, 1050, 1104, 1162, 1224, 1291, 1363, 1440, 1523, 1613, 1710, 1815,\n        1928, 2051, 2184, 2329, 2486, 2657, 2844, 3048, 3271, 3515, 3782, 4075,\n        4397, 4730, 5074, 5428, 5792, 6165, 6546, 6934, 7329, 7730, 8136, 8546,\n        8959, 9375, 9793, 10212, 10632, 11051, 11469, 11886, 12301, 12713,\n        13122, 13527, 13928, 14324, 14715, 15101, 15481, 15855, 16223, 16584,\n        16939, 17287, 17628, 17962, 18288, 18607, 18918, 19222, 19519, 19808,\n        20090, 20364, 20631, 20891, 21143, 21391, 21634, 21873, 22107, 22336,\n        22561, 22781, 22997, 23210, 23421, 23630, 23836, 24040, 24242, 24441,\n        24638, 24833, 25025, 25215, 25402, 25587, 25770, 25950, 26128, 26304,\n        26477, 26648, 26817, 26983, 27147,\n      ],\n\n      filteredNfts: [],\n      maxNftsPerPage: 25,\n      startIdx: 1,\n      imgResolutionIdx: 0,\n    };\n  },\n\n  methods: {\n    // updateFilters: function () {\n    //   that.filters = {}\n    //   filters.Background = getSelectValues(document.getElementById(\"Background\"));\n    //   filters.Fur = getSelectValues(document.getElementById(\"Fur\"));\n    //   filters.Clothes = getSelectValues(document.getElementById(\"Clothes\"));\n    //   filters.Eyes = getSelectValues(document.getElementById(\"Eyes\"));\n    //   filters.Mouth = getSelectValues(document.getElementById(\"Mouth\"));\n    //   filters.Earring = getSelectValues(document.getElementById(\"Earring\"));\n    //   filters.Hat = getSelectValues(document.getElementById(\"Hat\"));\n    //   filters.Profile = getSelectValues(document.getElementById(\"Profile\"));\n    //   filters.Special = getSelectValues(document.getElementById(\"Special\"));\n    //   filters.trait_count = getSelectValues(document.getElementById(\"trait_count\"));\n\n    //   for (let nft of that.sts) {\n    //     if (false == matchesAllFilters(nft, filters)) continue;\n    //   }\n    // },\n\n    getInitialLevel: function (_tokenId) {\n      // set initial level\n      if (_tokenId < 10) {\n        return 10;\n      } else if (_tokenId == 2500) {\n        return 0;\n      } else {\n        return 9 - Math.floor(_tokenId / 250);\n      }\n    },\n\n    getPower: function (_tokenId) {\n      return this.powerForLevel[this.nftInfo[_tokenId].level];\n    },\n\n    load: async function (_startIdx, _maxNftsPerPage) {\n      let that = this;\n\n      that.expandRange = false;\n      that.expandMaxNftsPerPage = false;\n\n      if (_startIdx < 1) {\n        _startIdx = 1;\n      }\n\n      this.maxNftsPerPage = _maxNftsPerPage;\n      this.startIdx = _startIdx;\n\n      that.filteredNfts = [];\n      for (\n        let i = _startIdx;\n        i < Math.min(_startIdx + _maxNftsPerPage, 2500);\n        i++\n      ) {\n        that.filteredNfts.push(i);\n      }\n\n      console.log(\"calling filter\");\n      // that.filterNfts(that.filter);\n    },\n  },\n\n  mounted: function () {\n    this.load(1, this.maxNftsPerPage);\n  },\n};\n</script>\n","import { render } from \"./AllNfts.vue?vue&type=template&id=4046bf9c\"\nimport script from \"./AllNfts.vue?vue&type=script&lang=js\"\nexport * from \"./AllNfts.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AllReapers.vue?vue&type=template&id=06458757\"\nimport script from \"./AllReapers.vue?vue&type=script&lang=js\"\nexport * from \"./AllReapers.vue?vue&type=script&lang=js\"\n\nimport \"./AllReapers.vue?vue&type=style&index=0&id=06458757&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"content-body\">\n    <div class=\"container text-start\">\n      <div class=\"col-xxl-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4>Notice</h4>\n            <h6>\n              Click the envelope icons to show or hide the sections on this\n              page.\n            </h6>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 v-if=\"!showStaking\">\n              How Staking Your Reaperville NFTs Works &nbsp;\n              <i\n                @click=\"showStaking = !showStaking\"\n                title=\"Show text\"\n                class=\"ri-mail-line\"\n              ></i>\n            </h4>\n\n            <template v-else>\n              <h4>\n                How Staking Your Reaperville NFTs Works &nbsp;\n                <i\n                  @click=\"showStaking = !showStaking\"\n                  title=\"Hide text\"\n                  class=\"ri-mail-open-line\"\n                ></i>\n              </h4>\n              <ul>\n                <li>\n                  Normally, when you stake one or multiple NFTs, you transfer\n                  the ownership of your NFTs to a smart contract which promises\n                  to transfer them back to you when you want to unstake your\n                  NFTs.\n                </li>\n                <h6 class=\"mt-3\">We at Surviville do things differently!</h6>\n                <li>\n                  When you stake a Reaperville NFT, the NFT remains in your\n                  wallet. That means, you don't have to transfer your NFTs to a\n                  different contract to stake them.\n                </li>\n                <li>\n                  However, when you decide to transfer a staked NFT to another\n                  wallet or an NFT marketplace, you need to unstake them first\n                  on this website in order to harvest your staking rewards.\n                </li>\n                <li>\n                  If you try to transfer a staked NFT without unstaking it\n                  first, the NFT is automatically unstaked for you, but you will\n                  not receive the staking rewards for this particular NFT since\n                  your last automatic or manual harvest.\n                </li>\n                <li>\n                  However, transferring staked NFTs also don't reset the\n                  penalties and reward cycle — which can be an advantage.\n                </li>\n                <li>\n                  However, transferring staked NFTs also don't reset the\n                  penalties and reward cycle.\n                </li>\n              </ul>\n            </template>\n\n            <br />\n\n            <h4 v-if=\"!showHowMany\">\n              How Many NFTs can you stake? &nbsp;\n              <i\n                @click=\"showHowMany = !showHowMany\"\n                title=\"Show text\"\n                class=\"ri-mail-line\"\n              ></i>\n            </h4>\n            <template v-else>\n              <h4>\n                How Many NFTs can you stake? &nbsp;\n                <i\n                  @click=\"showHowMany = !showHowMany\"\n                  title=\"Hide text\"\n                  class=\"ri-mail-open-line\"\n                ></i>\n              </h4>\n              <h6>As many as you want!</h6>\n              <ul>\n                <li>There is no limitation per wallet.</li>\n              </ul>\n            </template>\n\n            <br />\n\n            <h4 v-if=\"!showAdvantages\">\n              Advantages and Disadvantages &nbsp;\n              <i\n                @click=\"showAdvantages = !showAdvantages\"\n                title=\"Show text\"\n                class=\"ri-mail-line\"\n              ></i>\n            </h4>\n            <template v-else>\n              <h4>\n                Advantages and Disadvantages &nbsp;\n                <i\n                  @click=\"showAdvantages = !showAdvantages\"\n                  title=\"Hide text\"\n                  class=\"ri-mail-open-line\"\n                ></i>\n              </h4>\n              <h6>Advantages</h6>\n              <ul>\n                <li>Super low gas fees for staking and unstaking your NFTs.</li>\n                <li>\n                  The staked NFTs remain in your wallet. No need to trust a\n                  smart contract with the custody of your NFTs.\n                </li>\n              </ul>\n              <br />\n              <h6>Disadvantages</h6>\n              <ul>\n                <li>\n                  You need to remember to unstake the NFTs which you want to\n                  transfer to another wallet or which you want to sell on Oasis.\n                </li>\n                <li>\n                  If you forget to unstake the NFTs before transferring them,\n                  you will lose the harvest of these NFTs since your last\n                  automatic or manual harvest, but the penalties and bonus cycle\n                  will not be restarted.\n                </li>\n              </ul>\n            </template>\n          </div>\n        </div>\n\n        <div class=\"col-xxl-12\">\n          <div class=\"card top-bid\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center\">\n                <div class=\"col align-items-center\">\n                  <h4 v-if=\"!showUpgrades\">\n                    NFT Level Upgrades &nbsp;\n                    <i\n                      @click=\"showUpgrades = !showUpgrades\"\n                      title=\"Show text\"\n                      class=\"ri-mail-line\"\n                    ></i>\n                  </h4>\n                  <template v-else>\n                    <h4>\n                      NFT Level Upgrades &nbsp;\n                      <i\n                        @click=\"showUpgrades = !showUpgrades\"\n                        title=\"Show text\"\n                        class=\"ri-mail-open-line\"\n                      ></i>\n                    </h4>\n                    <ul>\n                      <li>\n                        You can permanently increase the staking power of your\n                        NFTs by upgrading the levels of any NFT you own.\n                      </li>\n                      <li>\n                        For level upgrades you need SVC tokens which you can\n                        earn by staking your NFTs or by buying them on MistSwap.\n                      </li>\n                      <li>\n                        Each level upgrade costs\n                        <strong>100 SVC tokens. </strong>\n                      </li>\n                      <li>The maximum level is <strong>100. </strong></li>\n                      <li>\n                        Use the slider on the\n                        <a href=\"/my-reapers\">staking and leveling website</a>\n                        to select the level you want to upgrade to. The website\n                        shows you a preview of the power after the upgrade.\n                      </li>\n                    </ul>\n                  </template>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xxl-12\">\n          <div class=\"card top-bid\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center\">\n                <div class=\"col align-items-center\">\n                  <h4 v-if=\"!showHarvest\">\n                    Harvest Types &nbsp;\n                    <i\n                      @click=\"showHarvest = !showHarvest\"\n                      class=\"ri-mail-line\"\n                    ></i>\n                  </h4>\n                  <template v-else>\n                    <h4>\n                      Harvest Types &nbsp;\n                      <i\n                        @click=\"showHarvest = !showHarvest\"\n                        class=\"ri-mail-open-line\"\n                      ></i>\n                    </h4>\n                    <ul>\n                      <li>\n                        Whenever you stake, unstake or upgrade one or multiple\n                        NFTs, a harvest of SVC reward tokens is automatically\n                        executed.\n                      </li>\n                      <li>\n                        Additionally, you can harvest SVC reward tokens whenever\n                        you want. This operation is called a\n                        <strong>manual harvest</strong>.\n                      </li>\n                    </ul>\n                    <br />\n                    <h4>Harvest Penalties and Bonuses</h4>\n                    <h6>Penalties</h6>\n                    <ul>\n                      <li>\n                        If you harvest within the first 20 days of your first\n                        stake or your last manual harvest, the harvest amount is\n                        reduced by a penalty.\n                      </li>\n                      <li>\n                        The penalty applies to both automatic and manual\n                        harvests.\n                      </li>\n                      <li>\n                        Within the first day of staking, the penalty is 95% of\n                        the harvest amount.\n                      </li>\n                      <li>\n                        For each subsequent full day of staking, the penalty is\n                        reduced by 5 percentage points.\n                      </li>\n                      <li>\n                        That means, you will receive 10% after a full day of\n                        staking, 15% after 2 full days, 20% after 3 full days\n                        and so on.\n                      </li>\n                      <li>\n                        After 19 full days of staking your NFTs, you will\n                        receive 100% of the harvest amount. That means after 20\n                        days there are no penalties on harvests.\n                      </li>\n                    </ul>\n                    <br />\n                    <h6>Bonus</h6>\n                    <ul>\n                      <li>\n                        But wait, that's not all: After 30 full days of staking,\n                        you will receive a 15% bonus. 👀\n                      </li>\n                      <li>\n                        Note that each pure harvest and each unstake will reset\n                        the penalties and bonuses cycle. A stake or level\n                        upgrade will\n                        <strong>not</strong> reset the cycle. An automatic\n                        unstake due to an NFT transfer will also not reset the\n                        cycle.\n                      </li>\n                    </ul>\n                  </template>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      showStaking: true,\n      showAdvantages: false,\n      showHowMany: false,\n      showUpgrades: false,\n      showHarvest: false,\n    };\n  },\n};\n</script>\n","import { render } from \"./InfoStaking.vue?vue&type=template&id=1beda1a3\"\nimport script from \"./InfoStaking.vue?vue&type=script&lang=js\"\nexport * from \"./InfoStaking.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/surviville-staking/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\n// import router from \"./router\";\n\nimport \"remixicon/fonts/remixicon.css\";\n\nimport Admin from \"@/components/Admin\";\nimport NftMint from \"@/components/NftMint\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport MyReapers from \"@/components/MyReapers\";\nimport AllReapers from \"@/components/AllReapers\";\nimport Info from \"@/components/InfoStaking\";\n\nexport let app = createApp(App);\n\nconst routes = [\n  { path: \"/my-reapers\", component: MyReapers },\n  { path: \"/all-reapers\", component: AllReapers },\n  { path: \"/admin\", component: Admin },\n  { path: \"/nftMint\", component: NftMint },\n  { path: \"/info\", component: Info },\n  { path: \"/\", component: NftMint },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\napp.use(router);\n\napp.mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksurviville_staking\"] = self[\"webpackChunksurviville_staking\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7620); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createVNode","_component_router_link","to","_component_router_view","script","__exports__","render","class","_createElementBlock","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","$data","Math","round","_hoisted_8","_hoisted_10","_hoisted_9","_hoisted_11","id","type","min","$event","onClick","$options","_hoisted_13","disabled","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_31","name","components","data","rewardTokenContract","reaperContract","reaperBchBalance","reaperBchPerNft","rewardTokensToMint","addressTo","feedbackMessage","reaperIsSvcMinter","isAdmin","reaperMintPaused","reaperStakingPaused","allowanceToSet","totalStakedPower","baseStakingPower","released","svcEmissionPerHour","methods","mintRewardToken","async","amount","tx","this","mint","ethers","toString","wait","registerAddressAsMinter","minterAllowance","remainingMintersAllowance","newAllowance","updateMintersAllowance","window","location","reload","registerReaperAsMinter","ReaperAddress","unregisterReaperAsMinter","removeMinter","setReaperMintPaused","newPaused","setMintPaused","setReaperStakingPaused","setStakingPaused","setReaperBchPerNft","setBchPerNft","withdrawBchFromReaper","withdraw","mounted","provider","ethereum","send","then","signer","getSigner","_rewardTokenContract","RewardTokenAddress","RewardToken","_reaperContract","Reaperville","getAddress","address","DevAddress","showStakerInfo","stakerInfo","getBalance","balance","isMintPausedStakingPaused","result","bchPerNft","_bchPerNft","_allowance","_hoisted_44","_hoisted_2","_Fragment","key","max","onChange","_hoisted_30","_hoisted_33","href","target","_hoisted_36","_hoisted_38","_hoisted_40","_hoisted_45","_hoisted_46","_hoisted_48","stakersAddress","stakersBchBalance","mintContract","mintContractAddress","mintPaused","nftsToMint","maxNftsPerTx","nftsMinted","nftsOwned","nftsToMintTotal","txInProgress","gasLimit","getBchBalance","changeNftsToMint","_changeAmount","floor","mintNFTsWithBCH","load","nftsLeft","totalCostBchWei","totalGasLimit","console","log","Number","value","gasPrice","err","hash","txInfo","getTransaction","code","call","blockNumber","replace","reason","substr","myAddress","balanceOf","_nftsOwned","totalSupply","_nftsMinted","_component_NftTop","projectname","_component_Nft","nftCA","pictureLink","title","_hoisted_3","_hoisted_14","length","style","_renderList","tokenId","src","$props","alt","level","nftLevelAfterUpgrade","staked","_hoisted_54","_hoisted_55","levelsToUpgrade","removeItemOnce","arr","index","indexOf","splice","props","emits","expandFilter","rpc","maxLevel","tokenCostPerLevel","tokenCostToBulkUpgrade","powerForLevel","showLevelingExplanation","currentCollection","stakersTokenBalance","stakersTokenAllowanceForLeveling","nftContract","stakingContract","loadingNfts","stakersNfts","filteredNfts","filter","selectedNfts","nftInfo","stakedCount","unstakedCount","nftLevel","transactionInProgress","stakingPaused","selectNft","_tokenId","that","push","updateCostForBulkUpgrade","updateLevelsToUpgrade","getInitialLevel","getPower","approveRewardToken","approve","allowance","stake","unstake","selectVisible","clearSelection","stakeSelected","IDs","slice","unstakeSelected","nftsFound","idx","cost","upgradeSpecificNft","_levelsToUpgrade","_rewardTokens","_nftOwner","ownerOf","balanceNew","upgradeLevel","upgradeSelectedNfts","nftsToUpgradeArray","levelsToUpgradeArray","i","powBalanceAfterUpgrade","filterNfts","_param","unstaked","concat","getWalletOfOwner","maxNftsToGetIn1Tx","Promise","resolve","reject","tokenLevelsLength","ownerTokenCount","walletOfOwnerWithLevels","tokensLevels","iCopy","catch","sort","a","b","_nftContract","onUpdateStakingPowerEvent","_hoisted_12","_hoisted_16","expandEarnings","womEmissionPerHour","stakerStakedForSeconds","SECONDS_PER_DAY","stakersPayoutPct","stakersNextPayoutPct","stakerNextPayoutPctInSeconds","stakersPower","stakerEarningRateX1k","earningsTime","hoursInWords","womToHarvest","stakersRewardTokenBalance","harvest","setApprovalForAll","loadStakerInfo","stakedForSeconds","stakedForDays","showStakersEarningsUntilLastTimestamp","showStakersEarningsAfterLastTimestamp","earnings","formatSeconds","seconds","d","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","loadRewardTokenBalance","userAddress","Reaper","Nft","NftTop","_component_AllNfts","_hoisted_1","ceil","n","expandRange","expandMaxNftsPerPage","maxNftsPerPage","startIdx","imgResolutionIdx","_startIdx","_maxNftsPerPage","AllNfts","_hoisted_4","_hoisted_34","_hoisted_43","showStaking","showAdvantages","showHowMany","showUpgrades","showHarvest","app","createApp","App","routes","path","component","MyReapers","AllReapers","Admin","NftMint","Info","router","createRouter","history","createWebHistory","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","r","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}