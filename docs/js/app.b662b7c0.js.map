{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/NftTop.vue?d5c6","webpack:///./src/App.vue?7b18","webpack:///./src/App.vue","webpack:///./src/components/Layout.vue","webpack:///./src/components/Layout.vue?a8d1","webpack:///./src/App.vue?7b1b","webpack:///./src/components/Admin.vue","webpack:///./src/components/Admin.vue?7be1","webpack:///./src/components/NftMint.vue","webpack:///./src/components/NftMint.vue?6ae9","webpack:///./src/components/Reaper.vue","webpack:///./src/components/Nft.vue","webpack:///./src/components/Nft.vue?f1ad","webpack:///./src/components/NftTop.vue","webpack:///./src/components/NftTop.vue?a424","webpack:///./src/components/Reaper.vue?9e8e","webpack:///./src/main.js","webpack:///./src/components/Layout.vue?00a9","webpack:///./src/components/Reaper.vue?7b12"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_createVNode","_component_Layout","_component_router_view","class","_createElementVNode","href","src","alt","width","_hoisted_9","_hoisted_13","data-bs-toggle","aria-haspopup","aria-expanded","tabindex","role","aria-hidden","_hoisted_23","_hoisted_27","_hoisted_6","$data","_createElementBlock","onClick","$options","_toDisplayString","_hoisted_21","_hoisted_30","myAddressDisplay","stakingAddress","ReaperAddress","netName","wrongNetwork","mounted","this","provider","ethers","providers","Web3Provider","ethereum","getNetwork","then","network","chainId","netId","request","method","params","utils","hexlify","catch","err","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","rpcServer","blockExplorerUrls","on","location","reload","signer","getSigner","getAddress","address","substring","methods","loginMM","addRewardTokenToMM","type","options","RewardTokenAddress","__exports__","components","Layout","render","_hoisted_5","_hoisted_7","Math","round","_hoisted_8","_hoisted_10","_hoisted_11","disabled","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","rewardTokenContract","reaperContract","reaperBchBalance","reaperIsSvcMinter","isAdmin","reaperPaused","totalStakedPower","baseStakingPower","released","svcEmissionPerHour","registerReaperAsMinter","addMinter","tx","wait","unregisterReaperAsMinter","removeMinter","stakeAdminPause","setPaused","stakeAdminUnpause","withdrawBchFromReaper","withdraw","send","_rewardTokenContract","Contract","RewardToken","abi","_reaperContract","Reaperville","DevAddress","showStakerInfo","stakerInfo","formatEther","getBalance","balance","isPaused","isMinter","_isMinter","target","_hoisted_12","_hoisted_14","stakersAddress","feedbackMessage","bchPerNft","stakersBchBalance","stakersTokenBalance","burnRewardToken","amount","burn","load","getRewardTokenBalance","balanceOf","getBchBalance","mintReaper","bchAmount","mint","parseUnits","toString","gasLimit","gasPrice","myAddress","_womContract","_hoisted_4","_component_NftTop","_component_Nft","nftCA","projectname","id","aria-powanded","aria-labelledby","title","$props","_hoisted_24","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_36","_hoisted_37","_hoisted_44","_hoisted_45","style","min","_hoisted_48","_hoisted_50","_hoisted_52","_hoisted_53","_hoisted_54","_Fragment","_renderList","tokenId","image","$event","level","staked","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","max","nftLevelAfterUpgrade","onChange","levelsToUpgrade","Web3","require","reaperTest","levels","reaperTestLevel","initialStakes","reaperInitialStakesTest","pictureLink","nftCollection","removeItemOnce","arr","index","indexOf","console","log","props","emits","rpc","maxLevel","tokenCostPerLevel","tokenCostToBulkUpgrade","powerForLevel","maxNftsPerTx","showLevelingExplanation","currentCollection","stakersTokenAllowanceForLeveling","nftContract","loadingUnstakedNfts","loadingStakedNfts","stakersNfts","filteredNfts","filter","selectedNfts","nftInfo","stakedCount","unstakedCount","picLink","nftLevel","transactionInProgress","paused","refreshPowBalance","selectNft","_tokenId","that","updateCostForBulkUpgrade","updateLevelsToUpgrade","getLevel","floor","getPower","approveRewardToken","approve","constants","MaxUint256","allowance","stake","unstake","selectVisible","clearSelection","stakeSelected","IDs","unstakeSelected","nftsFound","idx","cost","upgradeSpecificNft","_levelsToUpgrade","_rewardTokens","ownerOf","_nftOwner","balanceNew","upgradeLevel","upgradeSelectedNfts","nftsToUpgradeArray","levelsToUpgradeArray","powBalanceAfterUpgrade","calculatePowerIncreaseSolidityV2","startLvl","startPwrX10k","result2","upgrade1NftGasSavings","nftPowerAfterUpgrade","newPwrX10k","newLvl","rewardTokensConsumed","minpwrLevel","getMinPower","minpwrNextLevel","pctInLevelX100AfterUpgrade","filterNfts","_param","unstaked","concat","fillNftInfo","_inArr","_staked","sort","a","b","updateLevels","Promise","resolve","reject","nextBlockToCheck","optionsPower","fromBlock","toBlock","web3HttpReadLevels","stakeContractHttp","eth","getPastEvents","events","item","parseInt","returnValues","newLevel","blockNumber","e","pause","walletOfOwnerStaked","tokens","tokensStaked","iCopy","Number","walletOfOwner","tokensInWallet","_nftContract","_hoisted_3","onUpdateStakingPowerEvent","stakingContract","womEmissionPerHour","stakerStakedForSeconds","SECONDS_PER_DAY","stakersPayoutPct","stakersNextPayoutPct","stakerNextPayoutPctInSeconds","stakersPower","stakerEarningRateX1k","earningsTime","hoursInWords","1","24","168","720","8760","womToHarvest","stakersRewardTokenBalance","harvest","setApprovalForAll","loadStakerInfo","stakedForSeconds","stakedForDays","showStakersEarningsUntilLastTimestamp","showStakersEarningsAfterLastTimestamp","earnings","formatSeconds","seconds","h","dDisplay","hDisplay","mDisplay","sDisplay","loadRewardTokenBalance","userAddress","_stakingContract","Reaper","Nft","NftTop","app","createApp","App","routes","path","component","Admin","NftMint","router","createRouter","history","createWebHistory","use","mount"],"mappings":"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","file":"js/app.b662b7c0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NftTop.vue?vue&type=style&index=0&id=d52f2d56&lang=css\"","export * from \"-!../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=7b2d9ba5&lang=css\"","<template>\r\n  <Layout />\r\n  <router-view/>\r\n</template>\r\n\r\n<script>\r\nimport Layout from \"@/components/Layout\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {Layout},\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n\r\nselect, #app select:hover {\r\n  outline: 1px solid #6f4ef2;\r\n}\r\n\r\n.loggeed-in-addr-text {\r\n  background: #6F4EF2;\r\n  background: -webkit-linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  background: -moz-linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  background: linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-weight: bold;\r\n}\r\n\r\n.top-bid button.harvest-button {\r\n  margin: 0;\r\n}\r\n\r\n.back-to-top {\r\n position: fixed;\r\n bottom: 10px;\r\n right: 10px;\r\n width: 64px;\r\n height: 64px;\r\n z-index: 9999;\r\n cursor: pointer;\r\n text-decoration: none;\r\n transition: opacity 0.2s ease-out;\r\n background-image: url(../public/images/top.png);\r\n display: none;\r\n}\r\n.back-to-top:hover{\r\n opacity: 0.9;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"header\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <div class=\"header-content\">\r\n            <div class=\"header-left\">\r\n              <div class=\"brand-logo\">\r\n                <a class=\"mini-logo\" href=\"./\">\r\n                  <img src=\"images/logo.png\" alt=\"\" width=\"40\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"header-right\">\r\n              <!-- <div class=\"dark-light-toggle theme-switch\" onclick=\"themeToggle()\">\r\n                <span class=\"dark\"><i class=\"ri-moon-line\"></i></span>\r\n                <span class=\"light\"><i class=\"ri-sun-line\"></i></span>\r\n              </div> -->\r\n              <template v-if=\"!myAddressDisplay && !wrongNetwork\">\r\n                <div class=\"dark-light-toggle theme-switch\">\r\n                  <a\r\n                    @click=\"addRewardTokenToMM\"\r\n                    class=\"btn btn-outline-secondary btn-sm\"\r\n                    ><img src=\"images/metamask-icon-32.png\" /> Add SVC</a\r\n                  >\r\n                </div>\r\n              </template>\r\n              <div\r\n                class=\"dark-light-toggle theme-switch\"\r\n                v-if=\"!myAddressDisplay && !wrongNetwork\"\r\n              >\r\n                <a @click=\"loginMM\" class=\"btn btn-primary btn-sm\"\r\n                  ><img src=\"images/metamask-icon-32.png\" /> Login</a\r\n                >\r\n              </div>\r\n              <div class=\"dark-light-toggle theme-switch\" v-if=\"wrongNetwork\">\r\n                <strong>Please switch the network to {{ netName }}.</strong>\r\n              </div>\r\n              <div class=\"dropdown profile_log dropdown\">\r\n                <div\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  class=\"\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <div class=\"user icon-menu active loggeed-in-addr-text\">\r\n                    <span>{{ myAddressDisplay }}</span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  tabindex=\"-1\"\r\n                  role=\"menu\"\r\n                  aria-hidden=\"true\"\r\n                  class=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <a class=\"dropdown-item\" href=\"./reaper\">\r\n                    <span><i class=\"ri-user-3-fill\"></i></span>My Reaperville\r\n                    NFTs\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    v-bind:href=\"\r\n                      'https://www.smartscan.cash/address/' + stakingAddress\r\n                    \"\r\n                  >\r\n                    <span><i class=\"ri-search-eye-line\"></i></span>View\r\n                    Contract Activity\r\n                  </a>\r\n                  <div class=\"dark-light-toggle theme-switch\">\r\n                    <a\r\n                      @click=\"addRewardTokenToMM\"\r\n                      class=\"btn btn-outline-secondary btn-sm\"\r\n                      ><img src=\"images/metamask-icon-32.png\" /> Add SVC</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sidebar\">\r\n    <div class=\"brand-logo\">\r\n      <a class=\"full-logo\" href=\"./\"\r\n        ><img src=\"images/logo.png\" alt=\"\" width=\"40\"\r\n      /></a>\r\n    </div>\r\n    <div class=\"menu\">\r\n      <ul>\r\n        <li>\r\n          <a href=\"./nftMint\">\r\n            <span><i class=\"ri-gift-fill\"></i></span>\r\n            <span class=\"nav-text\">NFT Mint</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"./reaper\">\r\n            <span><i class=\"ri-user-3-fill\"></i></span>\r\n            <span class=\"nav-text\">NFTs</span>\r\n          </a>\r\n        </li>\r\n        <!-- <li>\r\n          <a href=\"./admin\">\r\n            <span><i class=\"ri-settings-3-fill\"></i></span>\r\n            <span class=\"nav-text\">Admin</span>\r\n          </a>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      myAddressDisplay: null,\r\n\r\n      stakingAddress: window.ReaperAddress,\r\n      netName: window.netName,\r\n      wrongNetwork: false,\r\n    };\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider.getNetwork().then((network) => {\r\n      if (network.chainId !== window.netId) {\r\n        this.wrongNetwork = true;\r\n        window.ethereum\r\n          .request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: ethers.utils.hexlify(window.netId) }],\r\n          })\r\n          .catch((err) => {\r\n            // This error code indicates that the chain has not been added to MetaMask\r\n            if (err.code === 4902) {\r\n              // dispatch(connectFailed(`Add ${window.netName} to Metamask and then reload this website.`));\r\n              window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                  {\r\n                    chainName: window.netName,\r\n                    chainId: ethers.utils.hexlify(window.netId),\r\n                    nativeCurrency: {\r\n                      name: \"BCH\",\r\n                      decimals: 18,\r\n                      symbol: \"BCH\",\r\n                    },\r\n                    rpcUrls: [window.rpcServer],\r\n                    blockExplorerUrls: [\"https://smartscan.cash/\"],\r\n                  },\r\n                ],\r\n              });\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.provider.on(\"network\", (n, o) => {\r\n      if (o) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n    this.signer = this.provider.getSigner();\r\n    this.signer.getAddress().then((address) => {\r\n      this.myAddressDisplay =\r\n        address.substring(0, 5) +\r\n        \"...\" +\r\n        address.substring(address.length - 5, address.length);\r\n    });\r\n  },\r\n  methods: {\r\n    loginMM: function () {\r\n      window.location.reload();\r\n    },\r\n\r\n    addRewardTokenToMM: function () {\r\n      window.ethereum.request({\r\n        method: \"wallet_watchAsset\",\r\n        params: {\r\n          type: \"ERC20\",\r\n          options: {\r\n            address: window.RewardTokenAddress,\r\n            symbol: \"SVC\",\r\n            decimals: 18,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>","import { render } from \"./Layout.vue?vue&type=template&id=3ac9eb58\"\nimport script from \"./Layout.vue?vue&type=script&lang=js\"\nexport * from \"./Layout.vue?vue&type=script&lang=js\"\n\nimport \"./Layout.vue?vue&type=style&index=0&id=3ac9eb58&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=7b2d9ba5\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7b2d9ba5&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <div>\r\n            <h2 class=\"mb-0\">Reaperville Staking Statistics</h2>\r\n            <p>\r\n              Earnable reward tokens: 5 million in total for Reaperville\r\n              collection, 1 million in first year, 2.5 million in first 3 years\r\n            </p>\r\n            <p>SVC Total max. supply: 210 million</p>\r\n            <p>Total staked power: {{ totalStakedPower }}</p>\r\n            <p>Base staking power: {{ baseStakingPower }}</p>\r\n            <!-- <p>Released SVC by contract: {{ released }}</p> -->\r\n            <p>Total emission rate: {{ svcEmissionPerHour }} SVC / hour</p>\r\n            <p>\r\n              =\r\n              {{ Math.round((svcEmissionPerHour * 24 * 365) / 1000) / 1000 }}\r\n              million SVC / year\r\n            </p>\r\n\r\n            <h1 class=\"mb-0\">---Everything below this line is ADMIN ONLY---</h1>\r\n            <h2 v-if=\"!isAdmin\">(You are not logged into the admin wallet)</h2>\r\n            <h2 v-else>(YOU ARE THE ADMIN)</h2>\r\n\r\n            <h2 class=\"mb-0\">Register Reaper Contract as Token Minter</h2>\r\n            <div>\r\n              Reaperville is minter: <strong>{{ reaperIsSvcMinter }}</strong>\r\n            </div>\r\n            <div>\r\n              <button\r\n                class=\"btn btn-danger\"\r\n                type=\"button\"\r\n                :disabled=\"!reaperIsSvcMinter\"\r\n                @click=\"unregisterReaperAsMinter\"\r\n              >\r\n                Unregister as minter\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                class=\"btn btn-success\"\r\n                type=\"button\"\r\n                :disabled=\"reaperIsSvcMinter\"\r\n                @click=\"registerReaperAsMinter\"\r\n              >\r\n                Register as minter\r\n              </button>\r\n            </div>\r\n            <br />\r\n\r\n            <h4>Reaper Contract Balances</h4>\r\n            <p>\r\n              {{\r\n                Math.round(reaperBchBalance / 10 ** 15) / 10 ** 3\r\n              }}\r\n              BCH\r\n            </p>\r\n            <div>\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                type=\"button\"\r\n                :disabled=\"reaperBchBalance <= 0\"\r\n                @click=\"withdrawBchFromReaper\"\r\n              >\r\n                withdraw BCH\r\n              </button>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <h2 class=\"mb-0\">Pause Staking Contract</h2>\r\n            Staking is active: {{ !reaperPaused }}\r\n            <p>\r\n              <button\r\n                @click=\"stakeAdminPause\"\r\n                :disabled=\"reaperPaused\"\r\n                class=\"btn btn-danger\"\r\n              >\r\n                Pause\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                @click=\"stakeAdminUnpause\"\r\n                :disabled=\"!reaperPaused\"\r\n                class=\"btn btn-success\"\r\n              >\r\n                Unpause\r\n              </button>\r\n            </p>\r\n            <!-- <p>\r\n              <button @click=\"resetBoosts\" class=\"btn btn-warning\">Reset boosts</button>\r\n            </p> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\n\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      rewardTokenContract: null,\r\n      reaperContract: null,\r\n\r\n      reaperBchBalance: 0,\r\n\r\n      reaperIsSvcMinter: false,\r\n\r\n      isAdmin: false,\r\n\r\n      reaperPaused: false,\r\n      totalStakedPower: null,\r\n      baseStakingPower: null,\r\n      released: null,\r\n      svcEmissionPerHour: null,\r\n    };\r\n  },\r\n  methods: {\r\n    registerReaperAsMinter: async function () {\r\n      let tx = await this.rewardTokenContract.addMinter(window.ReaperAddress);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n    unregisterReaperAsMinter: async function () {\r\n      let tx = await this.rewardTokenContract.removeMinter(\r\n        window.ReaperAddress\r\n      );\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    stakeAdminPause: async function () {\r\n      let tx = await this.reaperContract.setPaused(true);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n    stakeAdminUnpause: async function () {\r\n      let tx = await this.reaperContract.setPaused(false);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    withdrawBchFromReaper: async function () {\r\n      let tx = await this.reaperContract.withdraw();\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n        let _rewardTokenContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _reaperContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        // let _flexUsdContract = new ethers.Contract(\r\n        //   window.FlexUsdAddress,\r\n        //   RewardToken.abi,\r\n        //   this.provider.getSigner()\r\n        // );\r\n\r\n        this.rewardTokenContract = _rewardTokenContract;\r\n        this.reaperContract = _reaperContract;\r\n        // this.flexUsdTokenContract = _flexUsdContract;\r\n      })\r\n      .then(() => {\r\n        this.signer.getAddress().then((address) => {\r\n          if (address === window.DevAddress) {\r\n            this.isAdmin = true;\r\n          }\r\n        });\r\n        this.reaperContract\r\n          .showStakerInfo(window.DevAddress)\r\n          .then((stakerInfo) => {\r\n            this.totalStakedPower = stakerInfo[2];\r\n            this.baseStakingPower = stakerInfo[3];\r\n            this.svcEmissionPerHour =\r\n              Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\r\n              100000;\r\n          });\r\n        this.provider.getBalance(window.ReaperAddress).then((balance) => {\r\n          this.reaperBchBalance = balance;\r\n        });\r\n        this.reaperContract.isPaused().then((isPaused) => {\r\n          this.reaperPaused = isPaused;\r\n        });\r\n\r\n        this.rewardTokenContract\r\n          .isMinter(window.ReaperAddress)\r\n          .then((_isMinter) => {\r\n            this.reaperIsSvcMinter = _isMinter;\r\n          });\r\n      });\r\n  },\r\n};\r\n</script>","import { render } from \"./Admin.vue?vue&type=template&id=4cf84b74\"\nimport script from \"./Admin.vue?vue&type=script&lang=js\"\nexport * from \"./Admin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <h2>NFT Minting</h2>\r\n          <p>\r\n            Mint some Reaperville NFTs on the testnet for\r\n            {{ bchPerNft }} testnet BCH!\r\n          </p>\r\n          <button @click=\"mintReaper(40)\" class=\"btn btn-primary\">\r\n            Mint 40\r\n          </button>\r\n          &nbsp;\r\n          <button @click=\"mintReaper(25)\" class=\"btn btn-primary\">\r\n            Mint 25\r\n          </button>\r\n          &nbsp;\r\n          <button @click=\"mintReaper(5)\" class=\"btn btn-primary\">Mint 5</button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {{ feedbackMessage }}\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          <h2>Free Testnet BCH</h2>\r\n          <p>\r\n            Your current BCH balance:\r\n            {{ Math.round(stakersBchBalance / 10 ** 15) / 10 ** 3 }} BCH\r\n          </p>\r\n          <br />\r\n          <p>\r\n            If you need testnet BCH, please claim it for free at:\r\n            <a href=\"http://54.169.31.93:8080/faucet\" target=\"_blank\"\r\n              >http://54.169.31.93:8080/faucet</a\r\n            >\r\n          </p>\r\n          <br />\r\n\r\n          <div class=\"col-xxl-12\">\r\n            <h2>For test purposes, you can burn Surviville Coins here:</h2>\r\n            <p>\r\n              Your SVC token balance:\r\n              {{ Math.round(stakersTokenBalance / 10 ** 15) / 10 ** 3 }} SVC\r\n            </p>\r\n            <button @click=\"burnRewardToken(0)\" class=\"btn btn-primary\">\r\n              Burn My SVC\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      provider: null,\r\n      signer: null,\r\n\r\n      stakersAddress: \"\",\r\n      feedbackMessage: \"\",\r\n\r\n      rewardTokenContract: null,\r\n\r\n      bchPerNft: 0.02,\r\n\r\n      stakersBchBalance: 0,\r\n      stakersTokenBalance: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    burnRewardToken: async function (amount) {\r\n      this.feedbackMessage = \"\";\r\n      if (amount == 0) {\r\n        amount = this.stakersTokenBalance;\r\n      }\r\n      if (amount == 0) {\r\n        this.feedbackMessage = \"Nothing to burn!\";\r\n        return false;\r\n      }\r\n      let tx = await this.rewardTokenContract.burn(amount);\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    getRewardTokenBalance: function () {\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersTokenBalance = balance;\r\n        });\r\n    },\r\n\r\n    getBchBalance: function () {\r\n      this.provider.getBalance(this.stakersAddress).then((balance) => {\r\n        this.stakersBchBalance = balance;\r\n      });\r\n    },\r\n\r\n    mintReaper: async function (amount) {\r\n      let bchAmount = this.bchPerNft * amount;\r\n      if (bchAmount > this.stakersBchBalance/10**3) {\r\n        this.feedbackMessage = \"Not enough BCH!\";\r\n        return false;\r\n      }\r\n      this.feedbackMessage = \"Minting NFTs. Please wait!\";\r\n      let c = new ethers.Contract(\r\n        window.ReaperAddress,\r\n        Reaperville.abi,\r\n        this.provider.getSigner()\r\n      );\r\n      let tx = await c.mint(amount, {\r\n        value: ethers.utils.parseUnits(bchAmount.toString(), \"ether\"),\r\n        gasLimit: 9999999,\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    load: async function () {\r\n      this.signer.getAddress().then((myAddress) => {\r\n        this.stakersAddress = myAddress;\r\n        this.getBchBalance();\r\n        this.getRewardTokenBalance();\r\n      });\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n\r\n        let _womContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.rewardTokenContract = _womContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>","import { render } from \"./NftMint.vue?vue&type=template&id=8bbd668e\"\nimport script from \"./NftMint.vue?vue&type=script&lang=js\"\nexport * from \"./NftMint.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container text-start\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-6\">\r\n          <div class=\"promotion d-flex justify-content-between align-items-center\">\r\n            <div class=\"promotion-detail\">\r\n              <h3 class=\"text-white mb-3\">Reaperville NFTs</h3>\r\n              <p>\r\n                This is the internal beta test for staking and leveling of Reaperville NFTs. Please report any issues you find in the internal Telegram group!\r\n              </p>\r\n              <a href=\"https://oasis.cash/collection/0x4f0A64a905EEeB70810a079019Fd23586eca5268\" target=\"_blank\"\r\n                class=\"btn btn-secondary me-3\">Buy on Oasis</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xxl-6\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <NftTop />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <Nft v-bind:nftCA=\"nftContract\" projectname=\"Reaperville\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Nft from \"@/components/Nft.vue\";\r\nimport NftTop from \"@/components/NftTop.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: { Nft, NftTop },\r\n  data() {\r\n    return {\r\n      nftContract: window.ReaperAddress,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","<template>\r\n  <template v-if=\"stakersAddress === null\">\r\n    <div class=\"text-center\">\r\n      Please log into Metamask first, then refresh this website...\r\n    </div>\r\n  </template>\r\n\r\n  <template\r\n    v-if=\"\r\n      loadingStakedNfts === true &&\r\n      loadingUnstakedNfts === true &&\r\n      stakersAddress !== null\r\n    \"\r\n  >\r\n    <div class=\"text-center\">Loading NFTs...</div>\r\n  </template>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <h2 class=\"text-start\">{{ projectname }}</h2>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4 col-sm-12 col-xs-12\">\r\n            <ul class=\"settings-menu\">\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                type=\"button\"\r\n                id=\"collection-filter\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-powanded=\"false\"\r\n              >\r\n                Filter\r\n              </button>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"collection-filter\">\r\n                <li>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    href=\"#\"\r\n                    @click=\"filterNfts('all')\"\r\n                    v-bind:class=\"filter === null ? 'current' : ''\"\r\n                    >All ({{ stakersNfts.length }})</a\r\n                  >\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    href=\"#\"\r\n                    @click=\"filterNfts('staked')\"\r\n                    v-bind:class=\"filter === 'staked' ? 'current' : ''\"\r\n                    >Staked ({{ stakedCount }})</a\r\n                  >\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    href=\"#\"\r\n                    @click=\"filterNfts('unstaked')\"\r\n                    v-bind:class=\"filter === 'unstaked' ? 'current' : ''\"\r\n                    >Unstaked ({{ unstakedCount }})</a\r\n                  >\r\n                </li>\r\n              </ul>\r\n\r\n              <!-- &nbsp;\r\n                <button class=\"btn btn-primary\" type=\"button\" id=\"rpc-selector\" data-bs-toggle=\"dropdown\"\r\n                  aria-powanded=\"false\">\r\n                  rpc server\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"rpc-selector\">\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(0)\"\r\n                      v-bind:class=\"rpcIndex === 0 ? 'current' : ''\">{{ rpcs[0] }}</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(1)\"\r\n                      v-bind:class=\"rpcIndex === 1 ? 'current' : ''\">{{ rpcs[1] }}</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(2)\"\r\n                      v-bind:class=\"rpcIndex === 2 ? 'current' : ''\">{{ rpcs[2] }}</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(3)\"\r\n                      v-bind:class=\"rpcIndex === 3 ? 'current' : ''\">{{ rpcs[3] }}</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(4)\"\r\n                      v-bind:class=\"rpcIndex === 4 ? 'current' : ''\">{{ rpcs[4] }}</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"dropdown-item\" href=\"#\" @click=\"setRpcIndex(5)\"\r\n                      v-bind:class=\"rpcIndex === 5 ? 'current' : ''\">{{ rpcs[5] }}</a>\r\n                  </li>\r\n                </ul> -->\r\n\r\n              &nbsp;\r\n              <button\r\n                v-if=\"showLevelingExplanation && stakersTokenBalance > 0\"\r\n                @click=\"showLevelingExplanation = false\"\r\n                class=\"btn btn-primary\"\r\n              >\r\n                Hide Explanation\r\n              </button>\r\n              <button\r\n                v-if=\"!showLevelingExplanation && stakersTokenBalance > 0\"\r\n                @click=\"showLevelingExplanation = true\"\r\n                class=\"btn btn-primary\"\r\n              >\r\n                Show Explanation\r\n              </button>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-xxl-6\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col align-items-center\">\r\n                  <div class=\"col-12 text-center\">\r\n                    <div class=\"row text-center\">\r\n                      <h4>This box is only visible in the beta test:</h4>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <input type=\"number\" @input=\"updateCostForBulkUpgrade\" @change=\"updateCostForBulkUpgrade\" min=\"1\"\r\n                    :max=\"Math.min(stakersTokenBalance, 2 ** 24 - 1)\" v-model=\"levelsToUpgrade\"\r\n                    :disabled=\"stakersTokenBalance <= 0 || stakersTokenAllowanceForLeveling <= 0\" />\r\n                  <input type=\"range\" class=\"form-control-range\" min=\"1\" :max=\"Math.min(stakersTokenBalance, 2 ** 24 - 1)\"\r\n                    id=\"rewardTokensForUpgradeSlider\" v-model=\"levelsToUpgrade\" @change=\"updateCostForBulkUpgrade\"\r\n                    :disabled=\"stakersTokenBalance <= 0 || stakersTokenAllowanceForLeveling <= 0\">\r\n                  <button @click=\"upgradeSelectedNfts()\" class=\"btn btn-success\"\r\n                    :disabled=\"selectedNfts.length <= 0 || stakersTokenBalance <= 0\" style=\"font-size : 14px;\">\r\n                    Upgrade {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\r\n                  </button>\r\n                  <p v-if=\"selectedNfts.length > maxNftsPerTx\">Note: {{ maxNftsPerTx }} NFTs max</p>\r\n                  <template v-if=\"nftPowerAfterUpgrade > 0\">\r\n                    <br />\r\n                    <h5>Upgrade Preview:</h5>\r\n                    <h6>Cost: {{ powBalanceBeforeUpgrade - powBalanceAfterUpgrade }} SVC (Balance: {{\r\n                        powBalanceBeforeUpgrade\r\n                    }} SVC -> {{ powBalanceAfterUpgrade }} SVC)</h6>\r\n                    <h6>NFT power: {{ nftPowerBeforeUpgrade / 10000\r\n                    }} (level {{ nftLevelBeforeUpgrade }} - min: {{ getMinPower(nftLevelBeforeUpgrade) / 10000 }} -\r\n                      max:\r\n                      {{ (getMinPower(nftLevelBeforeUpgrade + 1) - 1) / 10000 }})</h6>\r\n                    <h6>NFT power: {{ nftPowerAfterUpgrade / 10000 }}\r\n                      (level {{ nftLevelAfterUpgrade }} - min: {{ getMinPower(nftLevelAfterUpgrade) / 10000 }} - max:\r\n                      {{ (getMinPower(nftLevelAfterUpgrade + 1) - 1) / 10000 }})</h6>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br /> -->\r\n\r\n    <template v-if=\"transactionInProgress\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            Waiting for current transaction to finish...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <div class=\"row text-center\">\r\n      <h4>{{ feedbackMessage }}</h4>\r\n    </div>\r\n    <br />\r\n\r\n    <div v-if=\"stakersTokenAllowanceForLeveling <= 0\" class=\"row\">\r\n      <div class=\"col-xxl-6\">\r\n        <div class=\"card top-bid\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col align-items-center\">\r\n                <span\r\n                  >Before you can upgrade your NFTs, you need to approve the SVC\r\n                  token once.</span\r\n                >\r\n                <button\r\n                  class=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                  id=\"approveRewardToken\"\r\n                  @click=\"approveRewardToken\"\r\n                >\r\n                  approve SVC\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showLevelingExplanation || stakersTokenBalance <= 0\" class=\"row\">\r\n      <div class=\"col-xxl-6\">\r\n        <div class=\"card top-bid\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col align-items-center\">\r\n                <h4>NFT Level Upgrades</h4>\r\n                <ul>\r\n                  <li>\r\n                    You can permanently increase the staking power of your NFTs\r\n                    by upgrading the levels of any NFT you own.\r\n                  </li>\r\n                  <li>\r\n                    For level upgrades you need SVC tokens which you can earn by\r\n                    staking your NFTs or by buying them on MistSwap.\r\n                  </li>\r\n                  <!-- <span>Each level upgrade increases the staking power of your upgraded NFTs permanently. </span> -->\r\n                  <li>\r\n                    Each level upgrade costs <strong>100 SVC tokens. </strong>\r\n                  </li>\r\n                  <li>\r\n                    The maximum level is <strong>{{ maxLevel }}. </strong>\r\n                  </li>\r\n                  <li>\r\n                    Use the slider to select the level you want to upgrade to.\r\n                    The website shows you a preview of the power after the\r\n                    upgrade.\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-xxl-6\">\r\n        <div class=\"card top-bid\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col align-items-center\">\r\n                <h4>Automatic Harvests and Pure Harvests</h4>\r\n                <ul>\r\n                  <li>\r\n                    Whenever you stake, unstake or upgrade one or multiple NFTs,\r\n                    a harvest of SVC reward tokens is automatically executed.\r\n                  </li>\r\n                  <li>\r\n                    Additionally, you can harvest SVC reward tokens whenever you\r\n                    want. This operation is called a\r\n                    <strong>pure harvest.</strong>\r\n                  </li>\r\n                </ul>\r\n                <br />\r\n                <h4>Harvest Penalties and Bonuses</h4>\r\n                <h6>Penalties</h6>\r\n                <ul>\r\n                  <li>\r\n                    If you harvest within the first 20 days of staking, the\r\n                    amount is reduced with a penalty.\r\n                  </li>\r\n                  <li>\r\n                    The penalty applies to both automatic and pure harvests.\r\n                  </li>\r\n                  <li>\r\n                    Within the first day of staking, the penalty is 95% of the\r\n                    harvest amount.\r\n                  </li>\r\n                  <li>\r\n                    For each subsequent full day of staking, the penalty\r\n                    percentage is reduced by 5%.\r\n                  </li>\r\n                  <li>\r\n                    That means, you will receive 10% after a full day of\r\n                    staking, 15% after 2 full days and so on.\r\n                  </li>\r\n                  <li>\r\n                    After 19 full days of staking your NFTs, you will receive\r\n                    100% of the harvest amount (no penalties).\r\n                  </li>\r\n                </ul>\r\n                <br />\r\n                <h6>Bonus</h6>\r\n                <ul>\r\n                  <li>\r\n                    But wait, that's not all: After 30 full days of staking, you\r\n                    will receive a 15% bonus. 👀\r\n                  </li>\r\n                  <li>\r\n                    Note that each pure harvest and each unstake will reset the\r\n                    penalties and bonuses cycle. A stake or level upgrade will\r\n                    <strong>not</strong> reset the cycle.\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n      <div class=\"card filter-tab\">\r\n        <div class=\"card-body bs-0 p-0 bg-transparent\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n              <div class=\"card-body\">\r\n                <h4 v-if=\"selectedNfts.length == 1\">\r\n                  1 NFT selected -- Balance:\r\n                  {{ Math.round(stakersTokenBalance / 10 ** 15) / 1000 }} SVC\r\n                  &nbsp;\r\n                  <i\r\n                    title=\"Refresh SVC Balance\"\r\n                    @click=\"refreshPowBalance\"\r\n                    class=\"ri-refresh-line\"\r\n                  ></i>\r\n                </h4>\r\n                <h4 v-else>\r\n                  {{ selectedNfts.length }} NFTs selected -- Balance:\r\n                  {{ Math.round(stakersTokenBalance / 10 ** 15) / 1000 }} SVC\r\n                  <i\r\n                    title=\"Refresh SVC Balance\"\r\n                    @click=\"refreshPowBalance\"\r\n                    class=\"ri-refresh-line\"\r\n                  ></i>\r\n                </h4>\r\n                <button\r\n                  @click=\"selectVisible\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Select all\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"clearSelection\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Clear selection\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"upgradeSelectedNfts()\"\r\n                  class=\"btn btn-success\"\r\n                  :disabled=\"\r\n                    selectedNfts.length <= 0 ||\r\n                    stakersTokenAllowanceForLeveling <= 0 ||\r\n                    stakersTokenBalance <= 0 ||\r\n                    paused\r\n                  \"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Upgrade {{ Math.min(selectedNfts.length, maxNftsPerTx) }} for\r\n                  {{ tokenCostToBulkUpgrade }}\r\n                  SVC\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"stakeSelected\"\r\n                  class=\"btn btn-success\"\r\n                  :disabled=\"selectedNfts.length <= 0 || paused\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Stake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"unstakeSelected\"\r\n                  class=\"btn btn-danger\"\r\n                  :disabled=\"selectedNfts.length <= 0 || paused\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Unstake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\r\n                </button>\r\n                <p v-if=\"selectedNfts.length > maxLevel\">\r\n                  Note: {{ maxLevel }} NFTs max staking and unstaking in 1\r\n                  transaction\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div class=\"row\">\r\n            <template\r\n              v-if=\"\r\n                loadingStakedNfts === false &&\r\n                loadingUnstakedNfts === false &&\r\n                stakersNfts.length <= 0\r\n              \"\r\n            >\r\n              <h1 class=\"text-center\">No NFTs to display</h1>\r\n            </template>\r\n\r\n            <div\r\n              class=\"col-xxl-3 col-xl-4 col-lg-4 col-md-6 col-sm-6\"\r\n              v-for=\"tokenId in filteredNfts\"\r\n              :key=\"tokenId\"\r\n            >\r\n              <div class=\"card items\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"items-img position-relative\">\r\n                    <img\r\n                      :src=\"nftInfo[tokenId].image\"\r\n                      class=\"img-fluid rounded mb-3\"\r\n                      alt=\"\"\r\n                      @click=\"selectNft(tokenId)\"\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    :value=\"tokenId\"\r\n                    v-model=\"selectedNfts\"\r\n                    @click=\"selectNft(tokenId)\"\r\n                  />\r\n                  &nbsp;\r\n                  <label>\r\n                    <h4 class=\"card-title\">\r\n                      #{{ tokenId }}\r\n                      &nbsp;\r\n                      <span title=\"current level\"\r\n                        >🏆{{ nftInfo[tokenId].level }}</span\r\n                      >\r\n                      &nbsp;\r\n                      <span title=\"current staking power\"\r\n                        >⚡{{ powerForLevel[nftInfo[tokenId].level] }}</span\r\n                      >\r\n                    </h4>\r\n                  </label>\r\n                  <div class=\"d-flex justify-content-center mt-3\">\r\n                    <button\r\n                      v-if=\"nftInfo[tokenId].staked\"\r\n                      @click=\"unstake(tokenId)\"\r\n                      class=\"btn btn-danger\"\r\n                      :disabled=\"paused\"\r\n                    >\r\n                      Unstake\r\n                    </button>\r\n                    <button\r\n                      v-else\r\n                      @click=\"stake(tokenId)\"\r\n                      class=\"btn btn-primary\"\r\n                      :disabled=\"paused\"\r\n                    >\r\n                      Stake\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div v-if=\"nftInfo[tokenId].level >= maxLevel\">\r\n                    Max. level reached! 👏\r\n                  </div>\r\n                  <div v-else>\r\n                    <div>\r\n                      <span title=\"current level\"\r\n                        >🏆{{ nftInfo[tokenId].level }}</span\r\n                      >\r\n                      <input\r\n                        type=\"range\"\r\n                        title=\"Choose desired level after upgrade\"\r\n                        class=\"form-control-range\"\r\n                        :min=\"nftInfo[tokenId].level + 1\"\r\n                        :max=\"maxLevel\"\r\n                        id=\"levelsToUpgradeSlider\"\r\n                        v-model=\"nftInfo[tokenId].nftLevelAfterUpgrade\"\r\n                        @change=\"updateLevelsToUpgrade(tokenId)\"\r\n                      />\r\n                      <span\r\n                        title=\"level after upgrade\"\r\n                        class=\"text-muted\"\r\n                        v-if=\"nftInfo[tokenId].nftLevelAfterUpgrade <= maxLevel\"\r\n                      >\r\n                        ({{ nftInfo[tokenId].nftLevelAfterUpgrade }})\r\n                      </span>\r\n                      <span class=\"text-muted\" title=\"power after upgrade\">\r\n                        (⚡{{\r\n                          powerForLevel[nftInfo[tokenId].nftLevelAfterUpgrade]\r\n                        }})</span\r\n                      >\r\n                    </div>\r\n                    <button\r\n                      @click=\"\r\n                        upgradeSpecificNft(\r\n                          tokenId,\r\n                          nftInfo[tokenId].levelsToUpgrade\r\n                        )\r\n                      \"\r\n                      class=\"btn btn-primary\"\r\n                      :disabled=\"\r\n                        stakersTokenBalance <= 0 ||\r\n                        stakersTokenAllowanceForLeveling <= 0 ||\r\n                        nftInfo[tokenId].level >= maxLevel ||\r\n                        paused\r\n                      \"\r\n                      style=\"font-size: 14px\"\r\n                    >\r\n                      Upgrade\r\n                      {{ nftInfo[tokenId].levelsToUpgrade }} level<template\r\n                        v-if=\"nftInfo[tokenId].levelsToUpgrade != 1\"\r\n                        >s</template\r\n                      >\r\n                      for\r\n                      {{\r\n                        nftInfo[tokenId].levelsToUpgrade * tokenCostPerLevel\r\n                      }}\r\n                      SVC\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nconst Web3 = require(\"web3\");\r\nimport { ethers } from \"ethers\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\n// import reaperInitialStakes from \"../reaper-initial-stakes.json\";\r\n// import reaperLevel from \"../reaper-level.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\nimport reaperInitialStakesTest from \"../reaperTest-initial-stakes.json\";\r\n\r\nimport reaperTestLevel from \"../reaperTest-level.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\n// let reaper = {\r\n//   levels: reaperLevel,\r\n//   initialStakes: reaperInitialStakes,\r\n//   pictureLink:\r\n//     \"https://raw.githubusercontent.com/WorldOfMasks/data/main/json/\",\r\n// };\r\n\r\n// TODO Testnet - Mainnet switch\r\nlet reaperTest = {\r\n  levels: reaperTestLevel,\r\n  initialStakes: reaperInitialStakesTest,\r\n  pictureLink:\r\n    \"https://raw.githubusercontent.com/Surviville/Reaperville/master/png/\",\r\n};\r\n\r\nconst nftCollection = {\r\n  // TODO Testnet - Mainnet switch\r\n  // \"0xf928B82061bc531e3B24B8CF3736724e35988b7a\": reaper,\r\n\r\n  // TODO Testnet - Mainnet switch\r\n  \"0x4a017832df30EFb09B866D22ba2329914A7b6397\": reaperTest,\r\n};\r\n\r\nfunction removeItemOnce(arr, value) {\r\n  let index = arr.indexOf(value);\r\n  if (index > -1) {\r\n    arr.splice(index, 1); // 2nd parameter: Amount of elements to remove\r\n  } else {\r\n    console.log(\"Unstaking an NFT that has not been staked before!\");\r\n  }\r\n  return arr;\r\n}\r\n\r\n// function matchesAllFilters(nft, filters) {\r\n//   for (const [category, traits] of Object.entries(filters)) {\r\n//     if (0 === traits.length) {\r\n//       // console.log(\"No filter on \" + category + \" specified\");\r\n//       continue;\r\n//     } else if (-1 === traits.indexOf(nft[\"traits\"][category])) {\r\n//       // console.log(\"Specified traits for \" + category + \" not in nft \" + nft.id +\". Trait is \" + nft[\"traits\"][category]);\r\n//       return false;\r\n//     }\r\n//   }\r\n//   // console.log(nft.id + \" matches all filters\");\r\n//   return true;\r\n// }\r\n\r\nexport default {\r\n  name: \"App\",\r\n  props: [\"nftCA\", \"projectname\"],\r\n  emits: [\"updateStakingPowerEvent\"],\r\n\r\n  data() {\r\n    return {\r\n      rpc: null,\r\n\r\n      maxLevel: 100,\r\n      tokenCostPerLevel: 100,\r\n      tokenCostToBulkUpgrade: 0,\r\n\r\n      powerForLevel: [\r\n        1000, 1050, 1104, 1162, 1224, 1291, 1363, 1440, 1523, 1613, 1710, 1815,\r\n        1928, 2051, 2184, 2329, 2486, 2657, 2844, 3048, 3271, 3515, 3782, 4075,\r\n        4397, 4730, 5074, 5428, 5792, 6165, 6546, 6934, 7329, 7730, 8136, 8546,\r\n        8959, 9375, 9793, 10212, 10632, 11051, 11469, 11886, 12301, 12713,\r\n        13122, 13527, 13928, 14324, 14715, 15101, 15481, 15855, 16223, 16584,\r\n        16939, 17287, 17628, 17962, 18288, 18607, 18918, 19222, 19519, 19808,\r\n        20090, 20364, 20631, 20891, 21143, 21391, 21634, 21873, 22107, 22336,\r\n        22561, 22781, 22997, 23210, 23421, 23630, 23836, 24040, 24242, 24441,\r\n        24638, 24833, 25025, 25215, 25402, 25587, 25770, 25950, 26128, 26304,\r\n        26477, 26648, 26817, 26983, 27147,\r\n      ],\r\n\r\n      maxNftsPerTx: 50,\r\n\r\n      showLevelingExplanation: false,\r\n\r\n      stakersAddress: null,\r\n\r\n      currentCollection: null,\r\n\r\n      stakersTokenBalance: 0,\r\n      stakersTokenAllowanceForLeveling: 0,\r\n\r\n      feedbackMessage: \"\",\r\n\r\n      nftContract: null,\r\n      reaperContract: null,\r\n      rewardTokenContract: null,\r\n\r\n      provider: null,\r\n      signer: null,\r\n\r\n      loadingUnstakedNfts: true,\r\n      loadingStakedNfts: true,\r\n\r\n      stakersNfts: [],\r\n      filteredNfts: [],\r\n      filter: \"all\",\r\n      selectedNfts: [],\r\n      nftInfo: {},\r\n\r\n      stakedCount: 0,\r\n      unstakedCount: 0,\r\n\r\n      picLink: \"\",\r\n\r\n      nftLevel: {},\r\n\r\n      transactionInProgress: false,\r\n\r\n      paused: true,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // updateFilters: function () {\r\n    //   that.filters = {}\r\n    //   filters.Background = getSelectValues(document.getElementById(\"Background\"));\r\n    //   filters.Fur = getSelectValues(document.getElementById(\"Fur\"));\r\n    //   filters.Clothes = getSelectValues(document.getElementById(\"Clothes\"));\r\n    //   filters.Eyes = getSelectValues(document.getElementById(\"Eyes\"));\r\n    //   filters.Mouth = getSelectValues(document.getElementById(\"Mouth\"));\r\n    //   filters.Earring = getSelectValues(document.getElementById(\"Earring\"));\r\n    //   filters.Hat = getSelectValues(document.getElementById(\"Hat\"));\r\n    //   filters.Profile = getSelectValues(document.getElementById(\"Profile\"));\r\n    //   filters.Special = getSelectValues(document.getElementById(\"Special\"));\r\n    //   filters.trait_count = getSelectValues(document.getElementById(\"trait_count\"));\r\n\r\n    //   for (let nft of that.sts) {\r\n    //     if (false == matchesAllFilters(nft, filters)) continue;\r\n    //   }\r\n    // },\r\n\r\n    refreshPowBalance: function () {\r\n      this.feedbackMessage = \"Updating SVC Balance\";\r\n      this.stakersTokenBalance = \"updating\";\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersTokenBalance = balance;\r\n        });\r\n      this.feedbackMessage = \"Reward Token Balance Updated\";\r\n    },\r\n\r\n    selectNft: function (_tokenId) {\r\n      let that = this;\r\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\r\n        that.selectedNfts.push(_tokenId);\r\n      } else {\r\n        removeItemOnce(that.selectedNfts, _tokenId);\r\n      }\r\n      that.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    updateLevelsToUpgrade: function (_tokenId) {\r\n      let that = this;\r\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\r\n        that.selectedNfts.push(_tokenId);\r\n      }\r\n      if (that.nftInfo[_tokenId].nftLevelAfterUpgrade > that.maxLevel) {\r\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade = that.maxLevel;\r\n      }\r\n      that.nftInfo[_tokenId].levelsToUpgrade =\r\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade -\r\n        that.nftInfo[_tokenId].level;\r\n\r\n      that.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    getLevel: function (_tokenId) {\r\n      let level = this.currentCollection.levels[\"level\"][_tokenId];\r\n      if (!level) {\r\n        // set initial level\r\n        if (_tokenId < 10) {\r\n          level = 10;\r\n        } else if (_tokenId == 2500) {\r\n          level = 0;\r\n        } else {\r\n          level = 9 - Math.floor(_tokenId / 250);\r\n        }\r\n      }\r\n      return level;\r\n    },\r\n\r\n    getPower: function (_tokenId) {\r\n      return this.powerForLevel[this.getLevel(_tokenId)];\r\n    },\r\n\r\n    approveRewardToken: async function () {\r\n      let that = this;\r\n\r\n      that.feedbackMessage = \"Approving SVC token\";\r\n\r\n      let tx = await that.rewardTokenContract.approve(\r\n        window.ReaperAddress,\r\n        ethers.constants.MaxUint256,\r\n        {\r\n          gasLimit: 65000, // 60k is probably fine, too\r\n          gasPrice: 1046740000,\r\n        }\r\n      );\r\n      await tx.wait();\r\n      that.rewardTokenContract\r\n        .allowance(that.stakersAddress, window.ReaperAddress)\r\n        .then((allowance) => {\r\n          that.stakersTokenAllowanceForLeveling = allowance;\r\n        });\r\n      that.feedbackMessage = \"\";\r\n    },\r\n\r\n    stake: async function (tokenId) {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n      let tx = await this.reaperContract.stake([tokenId], {\r\n        gasLimit: 400000,\r\n        gasPrice: 1046740000,\r\n      });\r\n      // let tx = await this.reaperContract.stake([tokenId]);\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    unstake: async function (tokenId) {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n      let tx = await this.reaperContract.unstake([tokenId], {\r\n        gasLimit: 450000,\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    selectVisible: function () {\r\n      this.feedbackMessage = \"\";\r\n      this.selectedNfts = [];\r\n      for (let tokenId of this.filteredNfts) {\r\n        if (this.selectedNfts.indexOf(tokenId) < 0) {\r\n          this.selectedNfts.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    clearSelection: function () {\r\n      this.feedbackMessage = \"\";\r\n      this.selectedNfts = [];\r\n      this.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    stakeSelected: async function () {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n\r\n      let IDs = [];\r\n\r\n      for (let tokenId of this.selectedNfts) {\r\n        if (\r\n          this.nftInfo[tokenId].staked === false &&\r\n          this.filteredNfts.indexOf(tokenId) > -1 &&\r\n          IDs.length < this.maxNftsPerTx\r\n        ) {\r\n          // console.log(this.selectedNfts[i], this.stakersNfts[findIdx]);\r\n          IDs.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.selectedNfts = IDs.slice();\r\n\r\n      if (IDs.length === 0) {\r\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\r\n        return false;\r\n      } else {\r\n        this.feedbackMessage = \"Staking selected NFTs.\";\r\n      }\r\n\r\n      let tx = await this.reaperContract.stake(IDs, {\r\n        gasLimit: Math.min(200000 + 200000 * IDs.length, 9999999),\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    unstakeSelected: async function () {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n\r\n      let IDs = [];\r\n\r\n      for (let tokenId of this.selectedNfts) {\r\n        if (\r\n          this.nftInfo[tokenId].staked === true &&\r\n          this.filteredNfts.indexOf(tokenId) > -1 &&\r\n          IDs.length < this.maxNftsPerTx\r\n        ) {\r\n          // console.log(this.selectedNfts[i], this.filteredNfts[findIdx]);\r\n          IDs.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.selectedNfts = IDs.slice();\r\n\r\n      if (IDs.length === 0) {\r\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\r\n        return false;\r\n      } else {\r\n        this.feedbackMessage = \"Unstaking selected NFTs.\";\r\n      }\r\n\r\n      let tx = await this.reaperContract.unstake(IDs, {\r\n        gasLimit: Math.min(250000 + 300000 * IDs.length, 9999999),\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    updateCostForBulkUpgrade: function () {\r\n      let nftsFound = 0;\r\n      this.tokenCostToBulkUpgrade = 0;\r\n\r\n      for (let idx = 0; idx < this.selectedNfts.length; idx++) {\r\n        let tokenId = this.selectedNfts[idx];\r\n        let cost = this.nftInfo[tokenId].levelsToUpgrade * this.tokenCostPerLevel;\r\n        if (nftsFound >= this.maxNftsPerTx) {\r\n          this.feedbackMessage = \"Max. number of NFTs selected\";\r\n          removeItemOnce(this.selectedNfts, tokenId);\r\n          idx--;\r\n        } else {\r\n          this.tokenCostToBulkUpgrade += cost;\r\n          nftsFound++;\r\n        }\r\n      }\r\n    },\r\n\r\n    upgradeSpecificNft: async function (_tokenId, _levelsToUpgrade) {\r\n      if (_levelsToUpgrade === 0) {\r\n        this.feedbackMessage = \"Can't upgrade 0 levels\";\r\n        return false;\r\n      }\r\n\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n      let _rewardTokens = _levelsToUpgrade * that.tokenCostPerLevel;\r\n\r\n      // checking SVC token\r\n      if (_rewardTokens > that.stakersTokenAllowanceForLeveling) {\r\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\r\n        return false;\r\n      } else if (_rewardTokens > that.stakersTokenBalance) {\r\n        that.feedbackMessage = \"SVC token balance is too low\";\r\n        return false;\r\n      }\r\n\r\n      let level = that.getLevel(_tokenId);\r\n      if (level >= that.maxLevel) {\r\n        that.feedbackMessage =\r\n          \"Cannot upgrade \" + _tokenId + \", because it's already at max. level\";\r\n        console.log(that.feedbackMessage);\r\n        return false;\r\n      }\r\n\r\n      // check owner\r\n      let _nftOwner = await that.nftContract.ownerOf(_tokenId);\r\n      if (_nftOwner !== that.stakersAddress) {\r\n        if (_nftOwner !== window.ReaperAddress) {\r\n          that.feedbackMessage =\r\n            \"Cannot upgrade \" + _tokenId + \", because it's not in your wallet\";\r\n          console.log(that.feedbackMessage);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      that.feedbackMessage =\r\n        \"Upgrading 1 NFT by \" +\r\n        _levelsToUpgrade +\r\n        \" levels with \" +\r\n        _rewardTokens +\r\n        \" SVC\";\r\n      console.log(that.feedbackMessage);\r\n\r\n      console.log(\"Power old= \" + that.getPower(_tokenId));\r\n      console.log(\"Level old= \" + level);\r\n      console.log(\"Balance old= \" + that.stakersTokenBalance);\r\n      let balanceNew = that.stakersTokenBalance - _rewardTokens;\r\n      console.log(\"Balance new= \" + balanceNew);\r\n\r\n      let tx = await that.reaperContract.upgradeLevel(\r\n        [_tokenId],\r\n        [_levelsToUpgrade],\r\n        {\r\n          gasLimit: 300000,\r\n          gasPrice: 1046740000,\r\n        }\r\n      );\r\n      await tx.wait();\r\n\r\n      if (that.nftInfo[_tokenId].staked) {\r\n        // that.load();\r\n        // that.$emit('updateStakingPowerEvent');\r\n        window.location.reload();\r\n      } else {\r\n        that.load();\r\n      }\r\n    },\r\n\r\n    upgradeSelectedNfts: async function () {\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n\r\n      // checking SVC token\r\n      if (that.tokenCostToBulkUpgrade > that.stakersTokenAllowanceForLeveling) {\r\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\r\n        return false;\r\n      } else if (that.tokenCostToBulkUpgrade > that.stakersTokenBalance) {\r\n        that.feedbackMessage = \"SVC token balance is too low\";\r\n        return false;\r\n      }\r\n\r\n      if (that.selectedNfts.length < 1) {\r\n        that.feedbackMessage = \"No NFTs selected\";\r\n        return false;\r\n      } else if (that.selectedNfts.length == 1) {\r\n        let tokenId = that.selectedNfts[0];\r\n        let level = that.getLevel(tokenId);\r\n        if (level >= that.maxLevel) {\r\n          that.feedbackMessage =\r\n            \"Cannot upgrade \" +\r\n            tokenId +\r\n            \", because it's already at max. level\";\r\n          console.log(that.feedbackMessage);\r\n          return false;\r\n        }\r\n\r\n        // check owner\r\n        let _nftOwner = await this.nftContract.ownerOf(tokenId);\r\n        if (_nftOwner !== that.stakersAddress) {\r\n          if (_nftOwner !== window.ReaperAddress) {\r\n            that.feedbackMessage = \"You don't own \" + tokenId;\r\n            console.log(that.feedbackMessage);\r\n            return false;\r\n          }\r\n        }\r\n\r\n        that.feedbackMessage =\r\n          \"Upgrading 1 NFT with \" +\r\n          that.nftInfo[tokenId].levelsToUpgrade +\r\n          \" SVC\";\r\n        console.log(that.feedbackMessage);\r\n\r\n        console.log(\"Level old= \" + level);\r\n        console.log(\"Balance old= \" + that.stakersTokenBalance);\r\n        let balanceNew =\r\n          that.stakersTokenBalance - that.nftInfo[tokenId].levelsToUpgrade;\r\n        console.log(\"Balance new= \" + balanceNew);\r\n\r\n        let tx = await that.reaperContract.upgradeLevel(\r\n          [tokenId],\r\n          [that.nftInfo[tokenId].levelsToUpgrade],\r\n          {\r\n            gasLimit: 300000,\r\n            gasPrice: 1046740000,\r\n          }\r\n        );\r\n        await tx.wait();\r\n        if (that.nftInfo[tokenId].staked) {\r\n          // that.emit('updateStakingPowerEvent');\r\n          window.location.reload();\r\n        } else {\r\n          that.load();\r\n        }\r\n      } else if (that.selectedNfts.length > 1) {\r\n        // go through selected NFTs and pick first maxNftsPerTx which qualify for an upgrade\r\n        let nftsToUpgradeArray = [];\r\n        let levelsToUpgradeArray = [];\r\n        that.feedbackMessage =\r\n          \"Double checking ownership and level of selected NFTs\";\r\n        for (\r\n          let i = 0;\r\n          i < that.selectedNfts.length &&\r\n          nftsToUpgradeArray.length < that.maxNftsPerTx;\r\n          i++\r\n        ) {\r\n          let tokenId = that.selectedNfts[i];\r\n          // check cost\r\n          if (that.nftInfo[tokenId].levelsToUpgrade === 0) {\r\n            that.feedbackMessage +=\r\n              \" -- Skipping \" + tokenId + \" (0 SVC upgrade)\";\r\n            continue;\r\n          }\r\n\r\n          // check level\r\n          if (that.getLevel(tokenId) >= that.maxLevel) {\r\n            that.feedbackMessage +=\r\n              \" -- Skipping \" + tokenId + \" (already at max level)\";\r\n            continue;\r\n          }\r\n\r\n          // check owner\r\n          let _nftOwner = await this.nftContract.ownerOf(tokenId);\r\n          if (_nftOwner !== that.stakersAddress) {\r\n            if (_nftOwner !== window.ReaperAddress) {\r\n              that.feedbackMessage +=\r\n                \" -- Skipping \" + tokenId + \" (not in your wallet)\";\r\n              console.log(that.feedbackMessage);\r\n            }\r\n          }\r\n\r\n          nftsToUpgradeArray.push(that.selectedNfts[i]);\r\n          levelsToUpgradeArray.push(that.nftInfo[tokenId].levelsToUpgrade);\r\n          console.log(\"Adding \" + tokenId);\r\n          console.log(nftsToUpgradeArray);\r\n        }\r\n\r\n        that.feedbackMessage +=\r\n          \" -- \" + nftsToUpgradeArray.length + \" NFTs passed all checks\";\r\n        console.log(nftsToUpgradeArray);\r\n        console.log(levelsToUpgradeArray);\r\n        console.log(\"Bulk Upgrade Cost= \" + that.tokenCostToBulkUpgrade);\r\n\r\n        console.log(\"Balance old=\" + that.stakersTokenBalance);\r\n        let powBalanceAfterUpgrade =\r\n          that.stakersTokenBalance - that.tokenCostToBulkUpgrade;\r\n        console.log(\"Balance after bulk upgrade: \", powBalanceAfterUpgrade);\r\n\r\n        if (nftsToUpgradeArray.length <= 0) {\r\n          return false;\r\n        }\r\n\r\n        that.feedbackMessage +=\r\n          \" -- Upgrading NFTs [\" +\r\n          nftsToUpgradeArray +\r\n          \"] with [\" +\r\n          levelsToUpgradeArray +\r\n          \"] SVC\";\r\n        let tx = await this.reaperContract.upgradeLevel(\r\n          nftsToUpgradeArray,\r\n          levelsToUpgradeArray,\r\n          {\r\n            gasLimit: Math.min(\r\n              200000 + 200000 * nftsToUpgradeArray.length,\r\n              9999999\r\n            ),\r\n            gasPrice: 1046740000,\r\n          }\r\n        );\r\n        await tx.wait();\r\n      }\r\n\r\n      window.location.reload();\r\n    },\r\n\r\n    // upgrade1NftGasSavings: function (_rewardTokens, _tokenId, startPwrX10k, startLvl) {\r\n    //   console.log(\"V2+ (gas savings) start\");\r\n\r\n    //   let that = this;\r\n    //   let rewardTokensConsumed = 0;\r\n\r\n    // console.log(\"after full + partial level upgrades: level: \" + newLvl + \" power: \" + newPwrX10k + \" -- tokenCostPerLevel: \" + tokenCostPerLevel + \" -- minpower: \", this.getMinPower(newLvl), this.getMinPower(newLvl + 1));\r\n\r\n    // return { rewardTokensConsumed, newPwrX10k, newLvl };\r\n    // },\r\n\r\n    calculatePowerIncreaseSolidityV2: function (_rewardTokens, _tokenId) {\r\n      let startLvl = this.nftLevel[_tokenId - 1];\r\n      let startPwrX10k = this.getPower(_tokenId);\r\n\r\n      let result2 = this.upgrade1NftGasSavings(\r\n        _rewardTokens,\r\n        _tokenId,\r\n        startPwrX10k,\r\n        startLvl\r\n      );\r\n\r\n      this.nftInfo[_tokenId].nftPowerAfterUpgrade = result2.newPwrX10k;\r\n      this.nftInfo[_tokenId].nftLevelAfterUpgrade = result2.newLvl;\r\n      this.nftInfo[_tokenId].levelsToUpgrade = result2.rewardTokensConsumed;\r\n      let minpwrLevel = this.getMinPower(result2.newLvl);\r\n      let minpwrNextLevel = this.getMinPower(result2.newLvl + 1);\r\n      this.nftInfo[_tokenId].pctInLevelX100AfterUpgrade = Math.min(\r\n        10000,\r\n        Math.round(\r\n          (((result2.newPwrX10k - minpwrLevel) /\r\n            (minpwrNextLevel - minpwrLevel)) *\r\n            10000) /\r\n            0.7\r\n        )\r\n      );\r\n    },\r\n\r\n    filterNfts: function (_param) {\r\n      let that = this;\r\n      let staked = [];\r\n      let unstaked = [];\r\n      that.filter = _param;\r\n      switch (_param) {\r\n        case \"all\":\r\n          // that.filteredNfts = that.stakersNfts;\r\n          staked = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === true;\r\n          });\r\n          unstaked = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === false;\r\n          });\r\n          that.filteredNfts = staked.concat(unstaked);\r\n          break;\r\n        case \"staked\":\r\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === true;\r\n          });\r\n          break;\r\n        case \"unstaked\":\r\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === false;\r\n          });\r\n          break;\r\n        default:\r\n          that.feedbackMessage = \"Filter not implemented\";\r\n      }\r\n    },\r\n\r\n    fillNftInfo: function (_inArr, _staked) {\r\n      let that = this;\r\n      for (let i in _inArr) {\r\n        let tokenId = _inArr[i];\r\n        that.stakersNfts.push(tokenId);\r\n        let level = that.getLevel(tokenId);\r\n\r\n        that.nftInfo[tokenId] = {\r\n          staked: _staked,\r\n          level: level,\r\n          nftLevelAfterUpgrade: level + 1,\r\n          levelsToUpgrade: 1,\r\n          image: that.currentCollection.pictureLink + tokenId + \".png\",\r\n        };\r\n      }\r\n      if (\r\n        that.loadingStakedNfts === false &&\r\n        that.loadingUnstakedNfts === false\r\n      ) {\r\n        that.stakersNfts.sort(function (a, b) {\r\n          return that.nftInfo[b].level - that.nftInfo[a].level;\r\n        });\r\n        console.log(\"calling filter\");\r\n        that.filterNfts(that.filter);\r\n        this.transactionInProgress = false;\r\n      }\r\n    },\r\n\r\n    updateLevels: async function () {\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n\r\n      return new Promise((resolve, reject) => {\r\n        // loading power updates that came later\r\n        console.log(\r\n          \"nextBlock: \" + that.currentCollection.levels.nextBlockToCheck\r\n        );\r\n        const optionsPower = {\r\n          fromBlock: that.currentCollection.levels.nextBlockToCheck, //Number || \"earliest\" || \"pending\" || \"latest\"\r\n          toBlock: \"latest\",\r\n        };\r\n\r\n        try {\r\n          let web3HttpReadLevels = new Web3(this.rpc);\r\n          const stakeContractHttp = new web3HttpReadLevels.eth.Contract(\r\n            Reaperville.abi,\r\n            window.ReaperAddress\r\n          );\r\n\r\n          console.log(\"Getting past events for power upgrades\");\r\n          stakeContractHttp\r\n            .getPastEvents(\"levelUpgraded\", optionsPower)\r\n            .then(function (events) {\r\n              if (0 >= events.length) {\r\n                console.log(\"No events\");\r\n                return true;\r\n              }\r\n              // that.currentCollection.level.nextBlockToCheck = Math.max(that.currentCollection.level.nextBlockToCheck, (events[events.length - 1].blockNumber + 1));\r\n\r\n              console.log(events.length + \" events found for power upgrades\");\r\n\r\n              for (let item of events) {\r\n                // console.log(item);\r\n                let id = parseInt(item.returnValues.tokenId);\r\n                let newLevel = parseInt(item.returnValues.newLevel);\r\n\r\n                that.currentCollection.levels[\"level\"][id] = newLevel;\r\n                console.log(\r\n                  id +\r\n                    \" upgraded to \" +\r\n                    newLevel +\r\n                    \" == \" +\r\n                    that.currentCollection.levels[\"level\"][id] +\r\n                    \" in \" +\r\n                    item.blockNumber\r\n                );\r\n              }\r\n            })\r\n            .then(() => {\r\n              console.log(\"returning Power\");\r\n              resolve();\r\n            });\r\n        } catch (e) {\r\n          console.log(e);\r\n          reject();\r\n        }\r\n      });\r\n    },\r\n\r\n    load: async function () {\r\n      let that = this;\r\n      that.loadingUnstakedNfts = true;\r\n      that.loadingStakedNfts = true;\r\n\r\n      that.filteredNfts = [];\r\n      that.stakersNfts = [];\r\n\r\n      that.currentCollection = nftCollection[that.nftCA];\r\n\r\n      that.stakersAddress = await that.signer.getAddress();\r\n\r\n      that.reaperContract.isPaused().then((pause) => {\r\n        that.paused = pause;\r\n      });\r\n\r\n      // load SVC balance and allowance\r\n      that.rewardTokenContract\r\n        .balanceOf(that.stakersAddress)\r\n        .then((balance) => {\r\n          that.stakersTokenBalance = balance;\r\n        });\r\n      that.rewardTokenContract\r\n        .allowance(that.stakersAddress, window.ReaperAddress)\r\n        .then((allowance) => {\r\n          that.stakersTokenAllowanceForLeveling = allowance;\r\n        });\r\n\r\n      //////////////////\r\n      // Update power //\r\n      //////////////////\r\n      await that.updateLevels(); // updates this.nftPower\r\n      // console.log(\"nftPower in load: \" + that.nftPower);\r\n\r\n      ////////////\r\n      // staked //\r\n      ////////////\r\n      that.nftContract.walletOfOwnerStaked(that.stakersAddress).then((tokens) => {\r\n        let tokensStaked = [];\r\n        for (let iCopy = 0; iCopy < tokens.length; iCopy++) {\r\n          let tokenId = Number(tokens[iCopy]);\r\n          if (tokenId === 0) {\r\n            continue;\r\n          }\r\n          tokensStaked.push(tokenId);\r\n        }\r\n        that.loadingStakedNfts = false;\r\n        that.stakedCount = tokensStaked.length;\r\n        that.fillNftInfo(tokensStaked, true);\r\n      });\r\n\r\n      //////////////\r\n      // unstaked //\r\n      //////////////\r\n      that.nftContract.walletOfOwner(that.stakersAddress).then((tokens) => {\r\n        let tokensInWallet = [];\r\n        for (let iCopy = 0; iCopy < tokens.length; iCopy++) {\r\n          let tokenId = Number(tokens[iCopy]);\r\n          if (tokenId === 0) {\r\n            continue;\r\n          }\r\n          tokensInWallet.push(tokenId);\r\n        }\r\n        that.loadingUnstakedNfts = false;\r\n        that.unstakedCount = tokensInWallet.length;\r\n        that.fillNftInfo(tokensInWallet, false);\r\n      });\r\n    },\r\n  },\r\n\r\n  mounted: function () {\r\n    this.rpc = window.ethereum; // doesn't work on Android due to a bug(?)\r\n\r\n    this.provider = new ethers.providers.Web3Provider(this.rpc, \"any\");\r\n\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n\r\n        let _nftContract = new ethers.Contract(\r\n          this.nftCA.toString(),\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _reaperContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _rewardTokenContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.nftContract = _nftContract;\r\n        this.reaperContract = _reaperContract;\r\n        this.rewardTokenContract = _rewardTokenContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n","import { render } from \"./Nft.vue?vue&type=template&id=391157ec\"\nimport script from \"./Nft.vue?vue&type=script&lang=js\"\nexport * from \"./Nft.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"col-12 align-items-center\">\r\n    <div class=\"row align-items-center\">\r\n      <h4>\r\n        Balance: {{ stakersRewardTokenBalance }} SVC &nbsp;\r\n        <i\r\n          title=\"Refresh SVC Balance\"\r\n          @click=\"loadRewardTokenBalance\"\r\n          class=\"ri-refresh-line\"\r\n        ></i>\r\n      </h4>\r\n      <br />\r\n      <h4 v-on:updateStakingPowerEvent=\"loadStakerInfo\">\r\n        Staking power: {{ stakersPower }}⚡ &nbsp;\r\n        <i\r\n          title=\"Refresh SVC Balance\"\r\n          @click=\"loadStakerInfo\"\r\n          class=\"ri-refresh-line\"\r\n        ></i>\r\n      </h4>\r\n      <br />\r\n\r\n      <template v-if=\"stakersPower > 0\">\r\n        <h4>\r\n          Staked for {{ formatSeconds(stakerStakedForSeconds) }}. (Harvest and\r\n          unstake reset the timer.)\r\n        </h4>\r\n        <br />\r\n        <h4>Current payout level: {{ stakersPayoutPct }}%</h4>\r\n        <br />\r\n        <h4 v-if=\"stakerNextPayoutPctInSeconds > 0\">\r\n          Next payout level: {{ stakersNextPayoutPct }}% -- reached in\r\n          {{ formatSeconds(stakerNextPayoutPctInSeconds) }}\r\n        </h4>\r\n        <h4 v-else>\r\n          Congratulations! You reached the highest payout level. 👏\r\n        </h4>\r\n      </template>\r\n\r\n      <br />\r\n      <h6>Total staked power: {{ totalStakedPower }}⚡</h6>\r\n      <h6>Base power: {{ baseStakingPower }}⚡</h6>\r\n      <h6>\r\n        Total SVC Emission: ~{{\r\n          Math.round(womEmissionPerHour * earningsTime * 100) / 100\r\n        }}\r\n        SVC / {{ hoursInWords[earningsTime] }}\r\n      </h6>\r\n      <br />\r\n      <div\r\n        class=\"settings-menu\"\r\n        v-if=\"womEmissionPerHour && totalStakedPower && stakersPower\"\r\n      >\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          id=\"collection-filter\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n          style=\"font-size: 14px\"\r\n        >\r\n          Earning ~{{\r\n            Math.round(stakerEarningRateX1k * earningsTime) / 1000\r\n          }}\r\n          SVC / {{ hoursInWords[earningsTime] }}\r\n        </button>\r\n        <ul class=\"dropdown-menu\" aria-labelledby=\"earnings-time\">\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 1\"\r\n              :class=\"earningsTime === 1 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 1) / 1000 }}\r\n              SVC / hour\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 24\"\r\n              v-bind:class=\"earningsTime === 24 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 24) / 1000 }}\r\n              SVC / day\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 168\"\r\n              v-bind:class=\"earningsTime === 168 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 168) / 1000 }}\r\n              SVC / week\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 720\"\r\n              v-bind:class=\"earningsTime === 720 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 720) / 1000 }}\r\n              SVC / month\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 8760\"\r\n              v-bind:class=\"earningsTime === 8760 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 8760) / 1000 }}\r\n              SVC / year\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"settings-menu\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          @click=\"harvest\"\r\n          :disabled=\"paused || womToHarvest == 0\"\r\n          style=\"font-size: 14px\"\r\n        >\r\n          Harvest\r\n          {{ Math.round(stakersPayoutPct * womToHarvest * 10) / 1000 }} SVC\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport Reaper from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\n// let RewardTokenAddress = window.RewardTokenAddress;\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      rewardTokenContract: null,\r\n\r\n      nftContract: null,\r\n      stakingContract: null,\r\n\r\n      provider: null,\r\n      signer: null,\r\n\r\n      womEmissionPerHour: null,\r\n\r\n      stakersAddress: null,\r\n      stakerStakedForSeconds: null,\r\n      SECONDS_PER_DAY: 60, // TODO\r\n      stakersPayoutPct: null,\r\n      stakersNextPayoutPct: null,\r\n      stakerNextPayoutPctInSeconds: null,\r\n\r\n      stakersPower: null,\r\n      totalStakedPower: null,\r\n      baseStakingPower: null,\r\n      stakerEarningRateX1k: null,\r\n\r\n      earningsTime: 168,\r\n      hoursInWords: {\r\n        1: \"hour\",\r\n        24: \"day\",\r\n        168: \"week\",\r\n        720: \"month\",\r\n        8760: \"year\",\r\n      },\r\n\r\n      womToHarvest: null,\r\n      paused: true,\r\n      stakersRewardTokenBalance: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    harvest: async function () {\r\n      let tx = await this.stakingContract.harvest();\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n    approve: async function () {\r\n      let tx = await this.nftContract.setApprovalForAll(\r\n        window.ReaperAddress,\r\n        true\r\n      );\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    loadStakerInfo: function () {\r\n      this.stakingContract\r\n        .showStakerInfo(this.stakersAddress)\r\n        .then((stakerInfo) => {\r\n          let stakedForSeconds = stakerInfo[0];\r\n          this.stakerStakedForSeconds = stakedForSeconds;\r\n          if (stakedForSeconds > 30 * this.SECONDS_PER_DAY) {\r\n            this.stakersPayoutPct = 115; // 15% bonus\r\n            this.stakersNextPayoutPct = 115;\r\n            this.stakerNextPayoutPctInSeconds = 0;\r\n          } else if (stakedForSeconds < 19 * this.SECONDS_PER_DAY) {\r\n            let stakedForDays = Math.floor(\r\n              stakedForSeconds / this.SECONDS_PER_DAY\r\n            );\r\n            this.stakersPayoutPct = (stakedForDays + 1) * 5;\r\n            this.stakersNextPayoutPct = this.stakersPayoutPct + 5;\r\n            this.stakerNextPayoutPctInSeconds =\r\n              (stakedForDays + 1) * this.SECONDS_PER_DAY - stakedForSeconds;\r\n          } else {\r\n            this.stakersPayoutPct = 100;\r\n            this.stakersNextPayoutPct = 115;\r\n            this.stakerNextPayoutPctInSeconds =\r\n              30 * this.SECONDS_PER_DAY - stakedForSeconds;\r\n          }\r\n\r\n          this.stakersPower = stakerInfo[1];\r\n          this.totalStakedPower = stakerInfo[2];\r\n          this.baseStakingPower = stakerInfo[3];\r\n          this.womEmissionPerHour =\r\n            Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\r\n            100000;\r\n          this.stakerEarningRateX1k =\r\n            ((this.womEmissionPerHour * this.stakersPower) /\r\n              (this.totalStakedPower - this.baseStakingPower)) *\r\n            1000;\r\n        });\r\n      this.womToHarvest = 0;\r\n      this.stakingContract\r\n        .showStakersEarningsUntilLastTimestamp(this.stakersAddress)\r\n        .then((amount) => {\r\n          this.womToHarvest +=\r\n            Math.round(ethers.utils.formatEther(amount) * 100000) / 100000;\r\n        });\r\n      this.stakingContract\r\n        .showStakersEarningsAfterLastTimestamp(this.stakersAddress)\r\n        .then((earnings) => {\r\n          this.womToHarvest +=\r\n            Math.round(ethers.utils.formatEther(earnings) * 100000) / 100000;\r\n        });\r\n      this.stakingContract.isPaused().then((pause) => {\r\n        this.paused = pause;\r\n      });\r\n    },\r\n\r\n    formatSeconds: function (seconds) {\r\n      seconds = Number(seconds);\r\n      var d = Math.floor(seconds / (3600 * 24));\r\n      var h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n      var m = Math.floor((seconds % 3600) / 60);\r\n      var s = Math.floor(seconds % 60);\r\n\r\n      var dDisplay = d > 0 ? d + \" d, \" : \"\";\r\n      var hDisplay = h > 0 ? h + \" h, \" : \"\";\r\n      var mDisplay = m > 0 ? m + \" min, \" : \"\";\r\n      var sDisplay = s > 0 ? s + \" sec\" : \"\";\r\n      return dDisplay + hDisplay + mDisplay + sDisplay;\r\n    },\r\n\r\n    loadRewardTokenBalance: function () {\r\n      console.log(this.stakersAddress);\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersRewardTokenBalance =\r\n            Math.round(ethers.utils.formatEther(balance) * 100000) / 100000;\r\n        });\r\n    },\r\n\r\n    load: function () {\r\n      this.signer.getAddress().then((userAddress) => {\r\n        this.stakersAddress = userAddress;\r\n        this.loadStakerInfo();\r\n        this.loadRewardTokenBalance();\r\n      });\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n        let _womContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _stakingContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaper.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.rewardTokenContract = _womContract;\r\n        this.stakingContract = _stakingContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","import { render } from \"./NftTop.vue?vue&type=template&id=d52f2d56\"\nimport script from \"./NftTop.vue?vue&type=script&lang=js\"\nexport * from \"./NftTop.vue?vue&type=script&lang=js\"\n\nimport \"./NftTop.vue?vue&type=style&index=0&id=d52f2d56&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Reaper.vue?vue&type=template&id=6dd579bd\"\nimport script from \"./Reaper.vue?vue&type=script&lang=js\"\nexport * from \"./Reaper.vue?vue&type=script&lang=js\"\n\nimport \"./Reaper.vue?vue&type=style&index=0&id=6dd579bd&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport '../public/css/style.css'\r\nimport Admin from \"@/components/Admin\";\r\nimport NftMint from \"@/components/NftMint\";\r\nimport {createRouter, createWebHistory} from \"vue-router\";\r\nimport Reaper from \"@/components/Reaper\";\r\n\r\n\r\n\r\nexport let app = createApp(App);\r\n\r\nconst routes = [\r\n    { path: '/reaper', component: Reaper },\r\n    { path: '/admin', component: Admin },\r\n    { path: '/nftMint', component: NftMint },\r\n    { path: '/', component: Reaper },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n})\r\n\r\napp.use(router);\r\n\r\napp.mount('#app')\r\n","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Layout.vue?vue&type=style&index=0&id=3ac9eb58&lang=css\"","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Reaper.vue?vue&type=style&index=0&id=6dd579bd&lang=css\""],"sourceRoot":""}