{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7b18","webpack:///./src/App.vue","webpack:///./src/components/Layout.vue","webpack:///./src/components/Layout.vue?a8d1","webpack:///./src/App.vue?7b1b","webpack:///./src/components/Admin.vue","webpack:///./src/components/Admin.vue?7be1","webpack:///./src/components/NftMint.vue","webpack:///./src/components/NftMint.vue?6ae9","webpack:///./src/components/Reaper.vue","webpack:///./src/components/Nft.vue","webpack:///./src/components/Nft.vue?f1ad","webpack:///./src/components/NftTop.vue","webpack:///./src/components/NftTop.vue?a424","webpack:///./src/components/Reaper.vue?9e8e","webpack:///./src/components/Info.vue","webpack:///./src/components/Info.vue?8bb8","webpack:///./src/main.js","webpack:///./src/components/Layout.vue?67d1","webpack:///./src/components/Reaper.vue?ac6d","webpack:///./src/components/NftTop.vue?b8b2"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_createVNode","_component_Layout","_component_router_view","class","_createElementVNode","href","src","alt","width","_hoisted_9","_hoisted_13","data-bs-toggle","aria-haspopup","aria-expanded","tabindex","role","aria-hidden","_hoisted_25","_hoisted_29","_hoisted_33","_hoisted_6","$data","_createElementBlock","onClick","$options","_toDisplayString","_hoisted_21","target","_hoisted_36","myAddressDisplay","reaperAddress","ReaperAddress","netName","wrongNetwork","mounted","this","provider","ethers","providers","Web3Provider","ethereum","getNetwork","then","network","chainId","netId","request","method","params","utils","hexlify","catch","err","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","rpcServer","blockExplorerUrls","on","location","reload","signer","getSigner","getAddress","address","substring","methods","loginMM","addRewardTokenToMM","type","options","RewardTokenAddress","__exports__","components","Layout","render","_hoisted_5","_hoisted_7","Math","round","_hoisted_8","_hoisted_10","_hoisted_11","id","min","$event","disabled","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_27","_hoisted_28","_hoisted_31","rewardTokenContract","reaperContract","reaperBchBalance","reaperBchPerNft","rewardTokensToMint","addressTo","feedbackMessage","reaperIsSvcMinter","isAdmin","reaperMintPaused","reaperStakingPaused","totalStakedPower","baseStakingPower","released","svcEmissionPerHour","mintRewardToken","amount","mint","parseUnits","toString","tx","wait","registerAddressAsMinter","isMinter","isAlreadyMinter","addMinter","registerReaperAsMinter","unregisterReaperAsMinter","removeMinter","setReaperMintPaused","newPaused","setMintPaused","setReaperStakingPaused","setStakingPaused","setReaperBchPerNft","setBchPerNft","withdrawBchFromReaper","withdraw","send","_rewardTokenContract","Contract","RewardToken","abi","_reaperContract","Reaperville","DevAddress","showStakerInfo","stakerInfo","formatEther","getBalance","balance","isMintPausedStakingPaused","bchPerNft","_bchPerNft","_isMinter","_Fragment","_hoisted_12","_hoisted_14","_hoisted_16","stakersAddress","mintPaused","stakersBchBalance","stakersTokenBalance","burnRewardToken","burn","load","getRewardTokenBalance","balanceOf","getBchBalance","mintReaper","bchAmount","gasLimit","gasPrice","myAddress","_womContract","_component_NftTop","projectname","_component_Nft","nftCA","aria-powanded","aria-labelledby","title","style","_hoisted_34","_hoisted_35","_renderList","tokenId","image","level","staked","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","max","nftLevelAfterUpgrade","onChange","levelsToUpgrade","Web3","require","reaperTest","levels","reaperTestLevel","initialStakes","reaperInitialStakesTest","pictureLink","nftCollection","removeItemOnce","arr","index","indexOf","console","log","props","emits","rpc","maxLevel","tokenCostPerLevel","tokenCostToBulkUpgrade","powerForLevel","maxNftsPerTx","showLevelingExplanation","currentCollection","stakersTokenAllowanceForLeveling","nftContract","stakingContract","loadingUnstakedNfts","loadingStakedNfts","stakersNfts","filteredNfts","filter","selectedNfts","nftInfo","stakedCount","unstakedCount","picLink","nftLevel","transactionInProgress","stakingPaused","refreshPowBalance","selectNft","_tokenId","that","updateCostForBulkUpgrade","updateLevelsToUpgrade","getLevel","floor","getPower","approveRewardToken","approve","constants","MaxUint256","allowance","stake","unstake","selectVisible","clearSelection","stakeSelected","IDs","unstakeSelected","nftsFound","idx","cost","upgradeSpecificNft","_levelsToUpgrade","_rewardTokens","ownerOf","_nftOwner","balanceNew","upgradeLevel","upgradeSelectedNfts","nftsToUpgradeArray","levelsToUpgradeArray","powBalanceAfterUpgrade","calculatePowerIncreaseSolidityV2","startLvl","startPwrX10k","result2","upgrade1NftGasSavings","nftPowerAfterUpgrade","newPwrX10k","newLvl","rewardTokensConsumed","minpwrLevel","getMinPower","minpwrNextLevel","pctInLevelX100AfterUpgrade","filterNfts","_param","unstaked","concat","fillNftInfo","_inArr","_staked","sort","a","b","updateLevels","Promise","resolve","reject","nextBlockToCheck","optionsPower","fromBlock","toBlock","web3HttpReadLevels","stakeContractHttp","eth","getPastEvents","events","item","parseInt","returnValues","newLevel","blockNumber","e","walletOfOwnerStaked","tokens","tokensStaked","iCopy","Number","walletOfOwner","tokensInWallet","_nftContract","$props","_hoisted_3","onUpdateStakingPowerEvent","_hoisted_4","womEmissionPerHour","stakerStakedForSeconds","SECONDS_PER_DAY","stakersPayoutPct","stakersNextPayoutPct","stakerNextPayoutPctInSeconds","stakersPower","stakerEarningRateX1k","earningsTime","hoursInWords","1","24","168","720","8760","womToHarvest","stakersRewardTokenBalance","harvest","setApprovalForAll","loadStakerInfo","stakedForSeconds","stakedForDays","showStakersEarningsUntilLastTimestamp","showStakersEarningsAfterLastTimestamp","earnings","formatSeconds","seconds","h","dDisplay","hDisplay","mDisplay","sDisplay","loadRewardTokenBalance","userAddress","_stakingContract","Reaper","Nft","NftTop","_hoisted_2","script","app","createApp","App","routes","path","component","Admin","NftMint","Info","router","createRouter","history","createWebHistory","use","mount"],"mappings":"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","file":"js/app.70dad680.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=7b2d9ba5&lang=css\"","<template>\r\n  <Layout />\r\n  <router-view/>\r\n</template>\r\n\r\n<script>\r\nimport Layout from \"@/components/Layout\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {Layout},\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n\r\nselect, #app select:hover {\r\n  outline: 1px solid #6f4ef2;\r\n}\r\n\r\n.loggeed-in-addr-text {\r\n  background: #6F4EF2;\r\n  background: -webkit-linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  background: -moz-linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  background: linear-gradient(to right, #6F4EF2 0%, #802CB0 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-weight: bold;\r\n}\r\n\r\n.top-bid button.harvest-button {\r\n  margin: 0;\r\n}\r\n\r\n.back-to-top {\r\n position: fixed;\r\n bottom: 10px;\r\n right: 10px;\r\n width: 64px;\r\n height: 64px;\r\n z-index: 9999;\r\n cursor: pointer;\r\n text-decoration: none;\r\n transition: opacity 0.2s ease-out;\r\n background-image: url(../public/images/top.png);\r\n display: none;\r\n}\r\n.back-to-top:hover{\r\n opacity: 0.9;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"header\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <div class=\"header-content\">\r\n            <div class=\"header-left\">\r\n              <div class=\"brand-logo\">\r\n                <a class=\"mini-logo\" href=\"./\">\r\n                  <img src=\"images/logo.png\" alt=\"\" width=\"40\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"header-right\">\r\n              <!-- <div class=\"dark-light-toggle theme-switch\" onclick=\"themeToggle()\">\r\n                <span class=\"dark\"><i class=\"ri-moon-line\"></i></span>\r\n                <span class=\"light\"><i class=\"ri-sun-line\"></i></span>\r\n              </div> -->\r\n              <template v-if=\"!myAddressDisplay && !wrongNetwork\">\r\n                <div class=\"dark-light-toggle theme-switch\">\r\n                  <a\r\n                    @click=\"addRewardTokenToMM\"\r\n                    class=\"btn btn-outline-secondary btn-sm\"\r\n                    ><img src=\"images/metamask-icon-32.png\" /> Add SVC</a\r\n                  >\r\n                </div>\r\n              </template>\r\n              <div\r\n                class=\"dark-light-toggle theme-switch\"\r\n                v-if=\"!myAddressDisplay && !wrongNetwork\"\r\n              >\r\n                <a @click=\"loginMM\" class=\"btn btn-primary btn-sm\"\r\n                  ><img src=\"images/metamask-icon-32.png\" /> Login</a\r\n                >\r\n              </div>\r\n              <div class=\"dark-light-toggle theme-switch\" v-if=\"wrongNetwork\">\r\n                <strong>Please switch the network to {{ netName }}.</strong>\r\n              </div>\r\n              <div class=\"dropdown profile_log dropdown\">\r\n                <div\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  class=\"\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <div class=\"user icon-menu active loggeed-in-addr-text\">\r\n                    <span>{{ myAddressDisplay }}</span>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  tabindex=\"-1\"\r\n                  role=\"menu\"\r\n                  aria-hidden=\"true\"\r\n                  class=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <a class=\"dropdown-item\" href=\"./nftMint\">\r\n                    <span><i class=\"ri-shopping-cart-line\"></i></span>Mint\r\n                    Reaperville NFTs\r\n                  </a>\r\n\r\n                  <a class=\"dropdown-item\" href=\"./reaper\">\r\n                    <span><i class=\"ri-hearts-line\"></i></span>My Reaperville NFTs\r\n                  </a>\r\n\r\n                  <a class=\"dropdown-item\" href=\"./info\">\r\n                    <span><i class=\"ri-information-line\"></i></span>Staking and\r\n                    Leveling Information\r\n                  </a>\r\n\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    :href=\"\r\n                      'https://oasis.cash/collection/' + reaperAddress\r\n                    \"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <span><i class=\"ri-search-line\"></i></span>Buy and sell Reaperville NFTs on Oasis\r\n                  </a>\r\n\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    v-bind:href=\"\r\n                      'https://www.smartscan.cash/address/' + reaperAddress\r\n                    \"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <span><i class=\"ri-search-line\"></i></span>Inspect\r\n                    Reaperville Contract Activity\r\n                  </a>\r\n\r\n                  <div class=\"dark-light-toggle theme-switch\">\r\n                    <a\r\n                      @click=\"addRewardTokenToMM\"\r\n                      class=\"btn btn-outline-secondary btn-sm\"\r\n                      ><img src=\"images/metamask-icon-32.png\" /> Add SVC to\r\n                      Metamask</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sidebar\">\r\n    <div class=\"brand-logo\">\r\n      <a class=\"full-logo\" href=\"./\"\r\n        ><img src=\"images/logo.png\" alt=\"\" width=\"40\"\r\n      /></a>\r\n    </div>\r\n    <div class=\"menu\">\r\n      <ul>\r\n        <li>\r\n          <a href=\"./nftMint\">\r\n            <span><i class=\"ri-shopping-cart-line\"></i></span>\r\n            <span class=\"nav-text\">NFT Mint</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"./reaper\">\r\n            <span><i class=\"ri-hearts-line\"></i></span>\r\n            <span class=\"nav-text\">Reaperville NFTs</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"./info\">\r\n            <span><i class=\"ri-information-line\"></i></span>\r\n            <span class=\"nav-text\">Staking and Leveling Information</span>\r\n          </a>\r\n        </li>\r\n        <!-- <li>\r\n          <a href=\"./admin\">\r\n            <span><i class=\"ri-settings-3-fill\"></i></span>\r\n            <span class=\"nav-text\">Admin</span>\r\n          </a>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      myAddressDisplay: null,\r\n\r\n      reaperAddress: window.ReaperAddress,\r\n      netName: window.netName,\r\n      wrongNetwork: false,\r\n    };\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider.getNetwork().then((network) => {\r\n      if (network.chainId !== window.netId) {\r\n        this.wrongNetwork = true;\r\n        window.ethereum\r\n          .request({\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: [{ chainId: ethers.utils.hexlify(window.netId) }],\r\n          })\r\n          .catch((err) => {\r\n            // This error code indicates that the chain has not been added to MetaMask\r\n            if (err.code === 4902) {\r\n              // dispatch(connectFailed(`Add ${window.netName} to Metamask and then reload this website.`));\r\n              window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [\r\n                  {\r\n                    chainName: window.netName,\r\n                    chainId: ethers.utils.hexlify(window.netId),\r\n                    nativeCurrency: {\r\n                      name: \"BCH\",\r\n                      decimals: 18,\r\n                      symbol: \"BCH\",\r\n                    },\r\n                    rpcUrls: [window.rpcServer],\r\n                    blockExplorerUrls: [\"https://smartscan.cash/\"],\r\n                  },\r\n                ],\r\n              });\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.provider.on(\"network\", (n, o) => {\r\n      if (o) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n    this.signer = this.provider.getSigner();\r\n    this.signer.getAddress().then((address) => {\r\n      this.myAddressDisplay =\r\n        address.substring(0, 5) +\r\n        \"...\" +\r\n        address.substring(address.length - 5, address.length);\r\n    });\r\n  },\r\n  methods: {\r\n    loginMM: function () {\r\n      window.location.reload();\r\n    },\r\n\r\n    addRewardTokenToMM: function () {\r\n      window.ethereum.request({\r\n        method: \"wallet_watchAsset\",\r\n        params: {\r\n          type: \"ERC20\",\r\n          options: {\r\n            address: window.RewardTokenAddress,\r\n            symbol: \"SVC\",\r\n            decimals: 18,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>","import { render } from \"./Layout.vue?vue&type=template&id=7bb0e8db\"\nimport script from \"./Layout.vue?vue&type=script&lang=js\"\nexport * from \"./Layout.vue?vue&type=script&lang=js\"\n\nimport \"./Layout.vue?vue&type=style&index=0&id=7bb0e8db&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=7b2d9ba5\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7b2d9ba5&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <div>\r\n            <h2 class=\"mb-0\">Reaperville Staking Statistics</h2>\r\n            <p>\r\n              Earnable reward tokens: 5 million in total for Reaperville\r\n              collection, 1 million in first year, 2.5 million in first 3 years\r\n            </p>\r\n            <p>SVC Total max. supply: 210 million</p>\r\n            <p>Total staked power: {{ totalStakedPower }}</p>\r\n            <p>Base staking power: {{ baseStakingPower }}</p>\r\n            <!-- <p>Released SVC by contract: {{ released }}</p> -->\r\n            <p>Total emission rate: {{ svcEmissionPerHour }} SVC / hour</p>\r\n            <p>\r\n              =\r\n              {{ Math.round((svcEmissionPerHour * 24 * 365) / 1000) / 1000 }}\r\n              million SVC / year\r\n            </p>\r\n\r\n            <h1 class=\"mb-0\">---Everything below this line is ADMIN ONLY---</h1>\r\n            <h2 v-if=\"!isAdmin\">(You are not logged into the admin wallet)</h2>\r\n            <h2 v-else>(YOU ARE THE ADMIN)</h2>\r\n\r\n            <h2>Mint Reward Tokens</h2>\r\n            <input\r\n              id=\"tokensToMint\"\r\n              type=\"number\"\r\n              min=\"10\"\r\n              class=\"form-control mx-auto\"\r\n              v-model=\"rewardTokensToMint\"\r\n            />\r\n            <input\r\n              id=\"addressTo\"\r\n              type=\"text\"\r\n              class=\"form-control mx-auto\"\r\n              v-model=\"addressTo\"\r\n            />\r\n\r\n            <button\r\n              class=\"btn btn-danger\"\r\n              @click=\"registerAddressAsMinter(addressTo)\"\r\n            >\r\n              Register {{ addressTo }} as minter\r\n            </button>\r\n            \r\n            &nbsp;\r\n\r\n            <button\r\n              class=\"btn btn-primary\"\r\n              @click=\"mintRewardToken(addressTo, rewardTokensToMint)\"\r\n            >\r\n              Mint {{ rewardTokensToMint }}\r\n            </button>\r\n\r\n            <h6>{{ feedbackMessage }}</h6>\r\n\r\n            <h2 class=\"mb-0\">Register Reaper Contract as Token Minter</h2>\r\n            <div>\r\n              Reaperville is minter: <strong>{{ reaperIsSvcMinter }}</strong>\r\n            </div>\r\n            <div>\r\n              <button\r\n                class=\"btn btn-danger\"\r\n                type=\"button\"\r\n                :disabled=\"!reaperIsSvcMinter\"\r\n                @click=\"unregisterReaperAsMinter\"\r\n              >\r\n                Unregister as minter\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                class=\"btn btn-success\"\r\n                type=\"button\"\r\n                :disabled=\"reaperIsSvcMinter\"\r\n                @click=\"registerReaperAsMinter\"\r\n              >\r\n                Register as minter\r\n              </button>\r\n            </div>\r\n            <br />\r\n\r\n            <h4>Reaper Contract Balances</h4>\r\n            <p>\r\n              {{ Math.round(reaperBchBalance / 10 ** 15) / 10 ** 3 }}\r\n              BCH\r\n            </p>\r\n            <div>\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                type=\"button\"\r\n                :disabled=\"reaperBchBalance <= 0\"\r\n                @click=\"withdrawBchFromReaper\"\r\n              >\r\n                withdraw BCH\r\n              </button>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <h4>Reaper Mint Price</h4>\r\n            <p>\r\n              {{ Math.round(reaperBchPerNft / 10 ** 12) / 10 ** 6 }}\r\n              BCH\r\n            </p>\r\n            <input\r\n              id=\"reaperBchPerNft\"\r\n              type=\"number\"\r\n              min=\"10\"\r\n              class=\"form-control mx-auto\"\r\n              v-model=\"reaperBchPerNft\"\r\n            />\r\n            <div>\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                type=\"button\"\r\n                @click=\"setReaperBchPerNft\"\r\n              >\r\n                set new price {{ Math.round(reaperBchPerNft / 10 ** 12) / 10 ** 6 }} BCH\r\n              </button>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <h2 class=\"mb-0\">Pause Reaper Mint</h2>\r\n            Mint is active: {{ !reaperMintPaused }}\r\n            <p>\r\n              <button\r\n                @click=\"setReaperMintPaused(true)\"\r\n                :disabled=\"reaperMintPaused\"\r\n                class=\"btn btn-danger\"\r\n              >\r\n                Pause\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                @click=\"setReaperMintPaused(false)\"\r\n                :disabled=\"!reaperMintPaused\"\r\n                class=\"btn btn-success\"\r\n              >\r\n                Unpause\r\n              </button>\r\n            </p>\r\n\r\n            <h2 class=\"mb-0\">Pause Reaper Staking</h2>\r\n            Staking is active: {{ !reaperStakingPaused }}\r\n            <p>\r\n              <button\r\n                @click=\"setReaperStakingPaused(true)\"\r\n                :disabled=\"reaperStakingPaused\"\r\n                class=\"btn btn-danger\"\r\n              >\r\n                Pause\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                @click=\"setReaperStakingPaused(false)\"\r\n                :disabled=\"!reaperStakingPaused\"\r\n                class=\"btn btn-success\"\r\n              >\r\n                Unpause\r\n              </button>\r\n            </p>\r\n            <!-- <p>\r\n              <button @click=\"resetBoosts\" class=\"btn btn-warning\">Reset boosts</button>\r\n            </p> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      rewardTokenContract: null,\r\n      reaperContract: null,\r\n\r\n      reaperBchBalance: 0,\r\n      reaperBchPerNft: 0,\r\n\r\n      rewardTokensToMint: 10000,\r\n      addressTo: \"\",\r\n\r\n      feedbackMessage: \"\",\r\n\r\n      reaperIsSvcMinter: false,\r\n\r\n      isAdmin: false,\r\n\r\n      reaperMintPaused: false,\r\n      reaperStakingPaused: false,\r\n\r\n      totalStakedPower: null,\r\n      baseStakingPower: null,\r\n      released: null,\r\n      svcEmissionPerHour: null,\r\n    };\r\n  },\r\n  methods: {\r\n    mintRewardToken: async function (addressTo, amount) {\r\n      let tx = await this.rewardTokenContract.mint(\r\n        addressTo,\r\n        ethers.utils.parseUnits(amount.toString(), \"ether\")\r\n      );\r\n      await tx.wait();\r\n    },\r\n\r\n    registerAddressAsMinter: async function (addressTo) {\r\n      this.feedbackMessage = \"\";\r\n      let isAlreadyMinter = await this.rewardTokenContract.isMinter(addressTo);\r\n      if (isAlreadyMinter) {\r\n        this.feedbackMessage = addressTo + \" is already registered as minter\";\r\n        return false;\r\n      }\r\n      let tx = await this.rewardTokenContract.addMinter(addressTo);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    registerReaperAsMinter: async function () {\r\n      let tx = await this.rewardTokenContract.addMinter(window.ReaperAddress);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n    unregisterReaperAsMinter: async function () {\r\n      let tx = await this.rewardTokenContract.removeMinter(\r\n        window.ReaperAddress\r\n      );\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    setReaperMintPaused: async function (newPaused) {\r\n      let tx = await this.reaperContract.setMintPaused(newPaused);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n    setReaperStakingPaused: async function (newPaused) {\r\n      let tx = await this.reaperContract.setStakingPaused(newPaused);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    setReaperBchPerNft: async function () {\r\n      let tx = await this.reaperContract.setBchPerNft(this.reaperBchPerNft);\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    withdrawBchFromReaper: async function () {\r\n      let tx = await this.reaperContract.withdraw();\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n        let _rewardTokenContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _reaperContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        // let _flexUsdContract = new ethers.Contract(\r\n        //   window.FlexUsdAddress,\r\n        //   RewardToken.abi,\r\n        //   this.provider.getSigner()\r\n        // );\r\n\r\n        this.rewardTokenContract = _rewardTokenContract;\r\n        this.reaperContract = _reaperContract;\r\n        // this.flexUsdTokenContract = _flexUsdContract;\r\n      })\r\n      .then(() => {\r\n        this.signer.getAddress().then((address) => {\r\n          this.addressTo = address;\r\n          if (address === window.DevAddress) {\r\n            this.isAdmin = true;\r\n          }\r\n        });\r\n        this.reaperContract\r\n          .showStakerInfo(window.DevAddress)\r\n          .then((stakerInfo) => {\r\n            this.totalStakedPower = stakerInfo[2];\r\n            this.baseStakingPower = stakerInfo[3];\r\n            this.svcEmissionPerHour =\r\n              Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\r\n              100000;\r\n          });\r\n        this.provider.getBalance(window.ReaperAddress).then((balance) => {\r\n          this.reaperBchBalance = balance;\r\n        });\r\n        this.reaperContract.isMintPausedStakingPaused().then((result) => {\r\n          this.reaperMintPaused = result[0];\r\n          this.reaperStakingPaused = result[1];\r\n        });\r\n        this.reaperContract\r\n          .bchPerNft()\r\n          .then((_bchPerNft) => {\r\n            this.reaperBchPerNft = _bchPerNft;\r\n          });\r\n\r\n        this.rewardTokenContract\r\n          .isMinter(window.ReaperAddress)\r\n          .then((_isMinter) => {\r\n            this.reaperIsSvcMinter = _isMinter;\r\n          });\r\n      });\r\n  },\r\n};\r\n</script>","import { render } from \"./Admin.vue?vue&type=template&id=4493d6a8\"\nimport script from \"./Admin.vue?vue&type=script&lang=js\"\nexport * from \"./Admin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-12\">\r\n          <h2>NFT Minting</h2>\r\n          <template v-if=\"mintPaused\"\r\n            >The minting is currently paused. Please check back later!</template\r\n          >\r\n          <template v-else>\r\n            <p>\r\n              Mint some Reaperville NFTs on the testnet for\r\n              {{ Math.round(reaperBchPerNft/10**12)/10**6 }} testnet BCH!\r\n            </p>\r\n            <button @click=\"mintReaper(40)\" class=\"btn btn-primary\">\r\n              Mint 40\r\n            </button>\r\n            &nbsp;\r\n            <button @click=\"mintReaper(25)\" class=\"btn btn-primary\">\r\n              Mint 25\r\n            </button>\r\n            &nbsp;\r\n            <button @click=\"mintReaper(5)\" class=\"btn btn-primary\">\r\n              Mint 5\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {{ feedbackMessage }}\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </template>\r\n\r\n          <p>\r\n            Your current BCH balance:\r\n            {{ Math.round(stakersBchBalance / 10 ** 15) / 10 ** 3 }} BCH\r\n          </p>\r\n          <br />\r\n\r\n          <h1>---TESTNET ONLY---</h1>\r\n\r\n          <h2>Free Testnet BCH</h2>\r\n          <p>\r\n            If you need testnet BCH, please claim it for free at:\r\n            <a href=\"http://54.169.31.93:8080/faucet\" target=\"_blank\"\r\n              >http://54.169.31.93:8080/faucet</a\r\n            >\r\n          </p>\r\n          <br />\r\n\r\n          <div class=\"col-xxl-12\">\r\n            <h2>For test purposes, you can burn Surviville Coins here:</h2>\r\n            <p>\r\n              Your SVC token balance:\r\n              {{ Math.round(stakersTokenBalance / 10 ** 15) / 10 ** 3 }} SVC\r\n            </p>\r\n            <button @click=\"burnRewardToken(0)\" class=\"btn btn-primary\">\r\n              Burn My SVC\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      provider: null,\r\n      signer: null,\r\n\r\n      stakersAddress: \"\",\r\n      feedbackMessage: \"\",\r\n\r\n      reaperContract: null,\r\n      rewardTokenContract: null,\r\n\r\n      reaperBchPerNft: 20000000000000000,\r\n      mintPaused: true,\r\n\r\n      stakersBchBalance: 0,\r\n      stakersTokenBalance: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    burnRewardToken: async function (amount) {\r\n      this.feedbackMessage = \"\";\r\n      if (amount == 0) {\r\n        amount = this.stakersTokenBalance;\r\n      }\r\n      if (amount == 0) {\r\n        this.feedbackMessage = \"Nothing to burn!\";\r\n        return false;\r\n      }\r\n      let tx = await this.rewardTokenContract.burn(amount);\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    getRewardTokenBalance: function () {\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersTokenBalance = balance;\r\n        });\r\n    },\r\n\r\n    getBchBalance: function () {\r\n      this.provider.getBalance(this.stakersAddress).then((balance) => {\r\n        this.stakersBchBalance = balance;\r\n      });\r\n    },\r\n\r\n    mintReaper: async function (amount) {\r\n      let bchAmount = this.reaperBchPerNft * amount;\r\n      if (bchAmount > this.stakersBchBalance * 10 ** 15) {\r\n        this.feedbackMessage = \"Not enough BCH!\";\r\n        return false;\r\n      }\r\n      this.feedbackMessage = \"Minting NFTs. Please wait!\";\r\n      let c = new ethers.Contract(\r\n        window.ReaperAddress,\r\n        Reaperville.abi,\r\n        this.provider.getSigner()\r\n      );\r\n      let tx = await c.mint(amount, {\r\n        value: bchAmount.toString(), \r\n        gasLimit: 9999999,\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    load: async function () {\r\n      this.signer.getAddress().then((myAddress) => {\r\n        this.stakersAddress = myAddress;\r\n        this.getBchBalance();\r\n        this.getRewardTokenBalance();\r\n      });\r\n      this.reaperContract.isMintPausedStakingPaused().then((result) => {\r\n        this.mintPaused = result[0];\r\n      });\r\n      this.reaperContract.bchPerNft().then((_bchPerNft) => {\r\n        this.reaperBchPerNft = _bchPerNft;\r\n      });\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n\r\n        this.reaperContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        let _womContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.rewardTokenContract = _womContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>","import { render } from \"./NftMint.vue?vue&type=template&id=2dc4e7be\"\nimport script from \"./NftMint.vue?vue&type=script&lang=js\"\nexport * from \"./NftMint.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container text-start\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xxl-6\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <NftTop projectname=\"Reaperville\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <Nft :nftCA=\"nftContract\" projectname=\"Reaperville\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Nft from \"@/components/Nft.vue\";\r\nimport NftTop from \"@/components/NftTop.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: { Nft, NftTop },\r\n  data() {\r\n    return {\r\n      nftContract: window.ReaperAddress,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","<template>\r\n  <template v-if=\"stakersAddress === null\">\r\n    <div class=\"text-center\">\r\n      Please log into Metamask first, then refresh this website...\r\n    </div>\r\n  </template>\r\n\r\n  <template\r\n    v-if=\"\r\n      loadingStakedNfts === true &&\r\n      loadingUnstakedNfts === true &&\r\n      stakersAddress !== null\r\n    \"\r\n  >\r\n    <div class=\"text-center\">Loading NFTs...</div>\r\n  </template>\r\n\r\n  <div class=\"container\">\r\n    <template v-if=\"transactionInProgress\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            Waiting for current transaction to finish...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </template>\r\n\r\n    <div class=\"row text-center\">\r\n      <h4>{{ feedbackMessage }}</h4>\r\n    </div>\r\n    <br />\r\n\r\n    <div v-if=\"stakersTokenAllowanceForLeveling <= 0\" class=\"row\">\r\n      <div class=\"col-xxl-6\">\r\n        <div class=\"card top-bid\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col align-items-center\">\r\n                <span\r\n                  >Before you can upgrade your NFTs, you need to approve the SVC\r\n                  token once.</span\r\n                >\r\n                <button\r\n                  class=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                  id=\"approveRewardToken\"\r\n                  @click=\"approveRewardToken\"\r\n                >\r\n                  approve SVC\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n      <div class=\"card filter-tab\">\r\n        <div class=\"card-body bs-0 p-0 bg-transparent\">\r\n          <div class=\"row\">\r\n            <div class=\"col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n              <div class=\"card-body\">\r\n                <h4 v-if=\"selectedNfts.length == 1\">\r\n                  1 NFT selected \r\n                </h4>\r\n\r\n                <h4 v-else>\r\n                  {{ selectedNfts.length }} NFTs selected \r\n                </h4>\r\n\r\n                <button\r\n                  class=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                  id=\"collection-filter\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-powanded=\"false\"\r\n                >\r\n                  Filter\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"collection-filter\">\r\n                  <li>\r\n                    <a\r\n                      class=\"dropdown-item\"\r\n                      href=\"#\"\r\n                      @click=\"filterNfts('all')\"\r\n                      v-bind:class=\"filter === null ? 'current' : ''\"\r\n                      >All ({{ stakersNfts.length }})</a\r\n                    >\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      class=\"dropdown-item\"\r\n                      href=\"#\"\r\n                      @click=\"filterNfts('staked')\"\r\n                      v-bind:class=\"filter === 'staked' ? 'current' : ''\"\r\n                      >Staked ({{ stakedCount }})</a\r\n                    >\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      class=\"dropdown-item\"\r\n                      href=\"#\"\r\n                      @click=\"filterNfts('unstaked')\"\r\n                      v-bind:class=\"filter === 'unstaked' ? 'current' : ''\"\r\n                      >Unstaked ({{ unstakedCount }})</a\r\n                    >\r\n                  </li>\r\n                </ul>\r\n\r\n                &nbsp;\r\n\r\n                <button\r\n                  @click=\"selectVisible\"\r\n                  class=\"btn btn-success\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Select all\r\n                </button>\r\n\r\n                &nbsp;\r\n\r\n                <button\r\n                  @click=\"clearSelection\"\r\n                  class=\"btn btn-danger\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Clear selection\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"upgradeSelectedNfts()\"\r\n                  class=\"btn btn-success\"\r\n                  :disabled=\"\r\n                    selectedNfts.length <= 0 ||\r\n                    stakersTokenAllowanceForLeveling <= 0 ||\r\n                    stakersTokenBalance <= 0 ||\r\n                    stakingPaused\r\n                  \"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Upgrade {{ Math.min(selectedNfts.length, maxNftsPerTx) }} for\r\n                  {{ tokenCostToBulkUpgrade }}\r\n                  SVC\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"stakeSelected\"\r\n                  class=\"btn btn-success\"\r\n                  :disabled=\"selectedNfts.length <= 0 || stakingPaused\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Stake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  @click=\"unstakeSelected\"\r\n                  class=\"btn btn-danger\"\r\n                  :disabled=\"selectedNfts.length <= 0 || stakingPaused\"\r\n                  style=\"font-size: 14px\"\r\n                >\r\n                  Unstake {{ Math.min(selectedNfts.length, maxNftsPerTx) }}\r\n                </button>\r\n                <p v-if=\"selectedNfts.length > maxLevel\">\r\n                  Note: {{ maxLevel }} NFTs max staking and unstaking in 1\r\n                  transaction\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div class=\"row\">\r\n            <template\r\n              v-if=\"\r\n                loadingStakedNfts === false &&\r\n                loadingUnstakedNfts === false &&\r\n                stakersNfts.length <= 0\r\n              \"\r\n            >\r\n              <h1 class=\"text-center\">No NFTs to display</h1>\r\n            </template>\r\n\r\n            <div\r\n              class=\"col-xxl-3 col-xl-4 col-lg-4 col-md-6 col-sm-6\"\r\n              v-for=\"tokenId in filteredNfts\"\r\n              :key=\"tokenId\"\r\n            >\r\n              <div class=\"card items\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"items-img position-relative\">\r\n                    <img\r\n                      :src=\"nftInfo[tokenId].image\"\r\n                      class=\"img-fluid rounded mb-3\"\r\n                      alt=\"\"\r\n                      @click=\"selectNft(tokenId)\"\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    :value=\"tokenId\"\r\n                    v-model=\"selectedNfts\"\r\n                    @click=\"selectNft(tokenId)\"\r\n                  />\r\n                  &nbsp;\r\n                  <label>\r\n                    <h4 class=\"card-title\">\r\n                      #{{ tokenId }}\r\n                      &nbsp;\r\n                      <span title=\"current level\"\r\n                        >🏆{{ nftInfo[tokenId].level }}</span\r\n                      >\r\n                      &nbsp;\r\n                      <span title=\"current staking power\"\r\n                        >🔥{{ powerForLevel[nftInfo[tokenId].level] }}</span\r\n                      >\r\n                    </h4>\r\n                  </label>\r\n                  <div class=\"d-flex justify-content-center mt-3\">\r\n                    <button\r\n                      v-if=\"nftInfo[tokenId].staked\"\r\n                      @click=\"unstake(tokenId)\"\r\n                      class=\"btn btn-danger\"\r\n                      :disabled=\"stakingPaused\"\r\n                    >\r\n                      Unstake\r\n                    </button>\r\n                    <button\r\n                      v-else\r\n                      @click=\"stake(tokenId)\"\r\n                      class=\"btn btn-primary\"\r\n                      :disabled=\"stakingPaused\"\r\n                    >\r\n                      Stake\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div v-if=\"nftInfo[tokenId].level >= maxLevel\">\r\n                    Max. level reached!\r\n                  </div>\r\n                  <div v-else>\r\n                    <div>\r\n                      <span title=\"current level\"\r\n                        >🏆{{ nftInfo[tokenId].level }}</span\r\n                      >\r\n                      <input\r\n                        type=\"range\"\r\n                        title=\"Choose desired level after upgrade\"\r\n                        class=\"form-control-range\"\r\n                        :min=\"nftInfo[tokenId].level + 1\"\r\n                        :max=\"maxLevel\"\r\n                        id=\"levelsToUpgradeSlider\"\r\n                        v-model=\"nftInfo[tokenId].nftLevelAfterUpgrade\"\r\n                        @change=\"updateLevelsToUpgrade(tokenId)\"\r\n                      />\r\n                      <span\r\n                        title=\"level after upgrade\"\r\n                        class=\"text-muted\"\r\n                        v-if=\"nftInfo[tokenId].nftLevelAfterUpgrade <= maxLevel\"\r\n                      >\r\n                        (🏆{{ nftInfo[tokenId].nftLevelAfterUpgrade }})\r\n                      </span>\r\n                      <span class=\"text-muted\" title=\"power after upgrade\">\r\n                        (🔥{{\r\n                          powerForLevel[nftInfo[tokenId].nftLevelAfterUpgrade]\r\n                        }})</span\r\n                      >\r\n                    </div>\r\n                    <button\r\n                      @click=\"\r\n                        upgradeSpecificNft(\r\n                          tokenId,\r\n                          nftInfo[tokenId].levelsToUpgrade\r\n                        )\r\n                      \"\r\n                      class=\"btn btn-primary\"\r\n                      :disabled=\"\r\n                        stakersTokenBalance <= 0 ||\r\n                        stakersTokenAllowanceForLeveling <= 0 ||\r\n                        nftInfo[tokenId].level >= maxLevel ||\r\n                        stakingPaused\r\n                      \"\r\n                      style=\"font-size: 14px\"\r\n                    >\r\n                      Upgrade\r\n                      {{ nftInfo[tokenId].levelsToUpgrade }} level<template\r\n                        v-if=\"nftInfo[tokenId].levelsToUpgrade != 1\"\r\n                        >s</template\r\n                      >\r\n                      for\r\n                      {{ nftInfo[tokenId].levelsToUpgrade * tokenCostPerLevel }}\r\n                      SVC\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nconst Web3 = require(\"web3\");\r\nimport { ethers } from \"ethers\";\r\nimport Reaperville from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\n// import reaperInitialStakes from \"../reaper-initial-stakes.json\";\r\n// import reaperLevel from \"../reaper-level.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\nimport reaperInitialStakesTest from \"../reaperTest-initial-stakes.json\";\r\n\r\nimport reaperTestLevel from \"../reaperTest-level.json\";\r\n\r\n// TODO Testnet - Mainnet switch\r\n// let reaper = {\r\n//   levels: reaperLevel,\r\n//   initialStakes: reaperInitialStakes,\r\n//   pictureLink:\r\n//     \"https://raw.githubusercontent.com/WorldOfMasks/data/main/json/\",\r\n// };\r\n\r\n// TODO Testnet - Mainnet switch\r\nlet reaperTest = {\r\n  levels: reaperTestLevel,\r\n  initialStakes: reaperInitialStakesTest,\r\n  pictureLink:\r\n    \"https://raw.githubusercontent.com/Surviville/Reaperville/master/png/\",\r\n};\r\n\r\nconst nftCollection = {\r\n  // TODO Testnet - Mainnet switch\r\n  // \"0xf928B82061bc531e3B24B8CF3736724e35988b7a\": reaper,\r\n\r\n  // TODO Testnet - Mainnet switch\r\n  \"0x4C40680ab319411a0F98Fb5DBc7105E64da12B18\": reaperTest,\r\n};\r\n\r\nfunction removeItemOnce(arr, value) {\r\n  let index = arr.indexOf(value);\r\n  if (index > -1) {\r\n    arr.splice(index, 1); // 2nd parameter: Amount of elements to remove\r\n  } else {\r\n    console.log(\"Unstaking an NFT that has not been staked before!\");\r\n  }\r\n  return arr;\r\n}\r\n\r\n// function matchesAllFilters(nft, filters) {\r\n//   for (const [category, traits] of Object.entries(filters)) {\r\n//     if (0 === traits.length) {\r\n//       // console.log(\"No filter on \" + category + \" specified\");\r\n//       continue;\r\n//     } else if (-1 === traits.indexOf(nft[\"traits\"][category])) {\r\n//       // console.log(\"Specified traits for \" + category + \" not in nft \" + nft.id +\". Trait is \" + nft[\"traits\"][category]);\r\n//       return false;\r\n//     }\r\n//   }\r\n//   // console.log(nft.id + \" matches all filters\");\r\n//   return true;\r\n// }\r\n\r\nexport default {\r\n  name: \"App\",\r\n  props: [\"nftCA\", \"projectname\"],\r\n  emits: [\"updateStakingPowerEvent\"],\r\n\r\n  data() {\r\n    return {\r\n      rpc: null,\r\n\r\n      maxLevel: 100,\r\n      tokenCostPerLevel: 100,\r\n      tokenCostToBulkUpgrade: 0,\r\n\r\n      powerForLevel: [\r\n        1000, 1050, 1104, 1162, 1224, 1291, 1363, 1440, 1523, 1613, 1710, 1815,\r\n        1928, 2051, 2184, 2329, 2486, 2657, 2844, 3048, 3271, 3515, 3782, 4075,\r\n        4397, 4730, 5074, 5428, 5792, 6165, 6546, 6934, 7329, 7730, 8136, 8546,\r\n        8959, 9375, 9793, 10212, 10632, 11051, 11469, 11886, 12301, 12713,\r\n        13122, 13527, 13928, 14324, 14715, 15101, 15481, 15855, 16223, 16584,\r\n        16939, 17287, 17628, 17962, 18288, 18607, 18918, 19222, 19519, 19808,\r\n        20090, 20364, 20631, 20891, 21143, 21391, 21634, 21873, 22107, 22336,\r\n        22561, 22781, 22997, 23210, 23421, 23630, 23836, 24040, 24242, 24441,\r\n        24638, 24833, 25025, 25215, 25402, 25587, 25770, 25950, 26128, 26304,\r\n        26477, 26648, 26817, 26983, 27147,\r\n      ],\r\n\r\n      maxNftsPerTx: 50,\r\n\r\n      showLevelingExplanation: false,\r\n\r\n      stakersAddress: null,\r\n\r\n      currentCollection: null,\r\n\r\n      stakersTokenBalance: 0,\r\n      stakersTokenAllowanceForLeveling: 0,\r\n\r\n      feedbackMessage: \"\",\r\n\r\n      nftContract: null,\r\n      stakingContract: null,\r\n      rewardTokenContract: null,\r\n\r\n      provider: null,\r\n      signer: null,\r\n\r\n      loadingUnstakedNfts: true,\r\n      loadingStakedNfts: true,\r\n\r\n      stakersNfts: [],\r\n      filteredNfts: [],\r\n      filter: \"all\",\r\n      selectedNfts: [],\r\n      nftInfo: {},\r\n\r\n      stakedCount: 0,\r\n      unstakedCount: 0,\r\n\r\n      picLink: \"\",\r\n\r\n      nftLevel: {},\r\n\r\n      transactionInProgress: false,\r\n\r\n      stakingPaused: true,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // updateFilters: function () {\r\n    //   that.filters = {}\r\n    //   filters.Background = getSelectValues(document.getElementById(\"Background\"));\r\n    //   filters.Fur = getSelectValues(document.getElementById(\"Fur\"));\r\n    //   filters.Clothes = getSelectValues(document.getElementById(\"Clothes\"));\r\n    //   filters.Eyes = getSelectValues(document.getElementById(\"Eyes\"));\r\n    //   filters.Mouth = getSelectValues(document.getElementById(\"Mouth\"));\r\n    //   filters.Earring = getSelectValues(document.getElementById(\"Earring\"));\r\n    //   filters.Hat = getSelectValues(document.getElementById(\"Hat\"));\r\n    //   filters.Profile = getSelectValues(document.getElementById(\"Profile\"));\r\n    //   filters.Special = getSelectValues(document.getElementById(\"Special\"));\r\n    //   filters.trait_count = getSelectValues(document.getElementById(\"trait_count\"));\r\n\r\n    //   for (let nft of that.sts) {\r\n    //     if (false == matchesAllFilters(nft, filters)) continue;\r\n    //   }\r\n    // },\r\n\r\n    refreshPowBalance: function () {\r\n      this.feedbackMessage = \"Updating SVC Balance\";\r\n      this.stakersTokenBalance = \"updating\";\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersTokenBalance = balance;\r\n        });\r\n      this.feedbackMessage = \"Reward Token Balance Updated\";\r\n    },\r\n\r\n    selectNft: function (_tokenId) {\r\n      let that = this;\r\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\r\n        that.selectedNfts.push(_tokenId);\r\n      } else {\r\n        removeItemOnce(that.selectedNfts, _tokenId);\r\n      }\r\n      that.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    updateLevelsToUpgrade: function (_tokenId) {\r\n      let that = this;\r\n      if (that.selectedNfts.indexOf(_tokenId) < 0) {\r\n        that.selectedNfts.push(_tokenId);\r\n      }\r\n      if (that.nftInfo[_tokenId].nftLevelAfterUpgrade > that.maxLevel) {\r\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade = that.maxLevel;\r\n      }\r\n      that.nftInfo[_tokenId].levelsToUpgrade =\r\n        that.nftInfo[_tokenId].nftLevelAfterUpgrade -\r\n        that.nftInfo[_tokenId].level;\r\n\r\n      that.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    getLevel: function (_tokenId) {\r\n      let level = this.currentCollection.levels[\"level\"][_tokenId];\r\n      if (!level) {\r\n        // set initial level\r\n        if (_tokenId < 10) {\r\n          level = 10;\r\n        } else if (_tokenId == 2500) {\r\n          level = 0;\r\n        } else {\r\n          level = 9 - Math.floor(_tokenId / 250);\r\n        }\r\n      }\r\n      return level;\r\n    },\r\n\r\n    getPower: function (_tokenId) {\r\n      return this.powerForLevel[this.getLevel(_tokenId)];\r\n    },\r\n\r\n    approveRewardToken: async function () {\r\n      let that = this;\r\n\r\n      that.feedbackMessage = \"Approving SVC token\";\r\n\r\n      let tx = await that.rewardTokenContract.approve(\r\n        window.ReaperAddress,\r\n        ethers.constants.MaxUint256,\r\n        {\r\n          gasLimit: 65000, // 60k is probably fine, too\r\n          gasPrice: 1046740000,\r\n        }\r\n      );\r\n      await tx.wait();\r\n      that.rewardTokenContract\r\n        .allowance(that.stakersAddress, window.ReaperAddress)\r\n        .then((allowance) => {\r\n          that.stakersTokenAllowanceForLeveling = allowance;\r\n        });\r\n      that.feedbackMessage = \"\";\r\n    },\r\n\r\n    stake: async function (tokenId) {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n      let tx = await this.stakingContract.stake([tokenId], {\r\n        gasLimit: 230000,\r\n        gasPrice: 1046740000,\r\n      });\r\n      // let tx = await this.stakingContract.stake([tokenId]);\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    unstake: async function (tokenId) {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n      let tx = await this.stakingContract.unstake([tokenId], {\r\n        gasLimit: 290000,\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    selectVisible: function () {\r\n      this.feedbackMessage = \"\";\r\n      this.selectedNfts = [];\r\n      for (let tokenId of this.filteredNfts) {\r\n        if (this.selectedNfts.indexOf(tokenId) < 0) {\r\n          this.selectedNfts.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    clearSelection: function () {\r\n      this.feedbackMessage = \"\";\r\n      this.selectedNfts = [];\r\n      this.updateCostForBulkUpgrade();\r\n    },\r\n\r\n    stakeSelected: async function () {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n\r\n      let IDs = [];\r\n\r\n      for (let tokenId of this.selectedNfts) {\r\n        if (\r\n          this.nftInfo[tokenId].staked === false &&\r\n          this.filteredNfts.indexOf(tokenId) > -1 &&\r\n          IDs.length < this.maxNftsPerTx\r\n        ) {\r\n          // console.log(this.selectedNfts[i], this.stakersNfts[findIdx]);\r\n          IDs.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.selectedNfts = IDs.slice();\r\n\r\n      if (IDs.length === 0) {\r\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\r\n        return false;\r\n      } else {\r\n        this.feedbackMessage = \"Staking selected NFTs.\";\r\n      }\r\n\r\n      let tx = await this.stakingContract.stake(IDs, {\r\n        gasLimit: Math.min(50000 + 130000 * IDs.length, 9999999),\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    unstakeSelected: async function () {\r\n      this.transactionInProgress = true;\r\n      this.feedbackMessage = \"\";\r\n\r\n      let IDs = [];\r\n\r\n      for (let tokenId of this.selectedNfts) {\r\n        if (\r\n          this.nftInfo[tokenId].staked === true &&\r\n          this.filteredNfts.indexOf(tokenId) > -1 &&\r\n          IDs.length < this.maxNftsPerTx\r\n        ) {\r\n          // console.log(this.selectedNfts[i], this.filteredNfts[findIdx]);\r\n          IDs.push(tokenId);\r\n        }\r\n      }\r\n\r\n      this.selectedNfts = IDs.slice();\r\n\r\n      if (IDs.length === 0) {\r\n        this.feedbackMessage = \"No selected NFT matches all criteria.\";\r\n        return false;\r\n      } else {\r\n        this.feedbackMessage = \"Unstaking selected NFTs.\";\r\n      }\r\n\r\n      let tx = await this.stakingContract.unstake(IDs, {\r\n        gasLimit: Math.min(125000 + 200000 * IDs.length, 9999999),\r\n        gasPrice: 1046740000,\r\n      });\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n\r\n    updateCostForBulkUpgrade: function () {\r\n      let nftsFound = 0;\r\n      this.tokenCostToBulkUpgrade = 0;\r\n\r\n      for (let idx = 0; idx < this.selectedNfts.length; idx++) {\r\n        let tokenId = this.selectedNfts[idx];\r\n        let cost =\r\n          this.nftInfo[tokenId].levelsToUpgrade * this.tokenCostPerLevel;\r\n        if (nftsFound >= this.maxNftsPerTx) {\r\n          this.feedbackMessage = \"Max. number of NFTs selected\";\r\n          removeItemOnce(this.selectedNfts, tokenId);\r\n          idx--;\r\n        } else {\r\n          this.tokenCostToBulkUpgrade += cost;\r\n          nftsFound++;\r\n        }\r\n      }\r\n    },\r\n\r\n    upgradeSpecificNft: async function (_tokenId, _levelsToUpgrade) {\r\n      if (_levelsToUpgrade === 0) {\r\n        this.feedbackMessage = \"Can't upgrade 0 levels\";\r\n        return false;\r\n      }\r\n\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n      let _rewardTokens = _levelsToUpgrade * that.tokenCostPerLevel;\r\n\r\n      // checking SVC token\r\n      if (_rewardTokens > that.stakersTokenAllowanceForLeveling) {\r\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\r\n        return false;\r\n      } else if (_rewardTokens > that.stakersTokenBalance) {\r\n        that.feedbackMessage = \"SVC token balance is too low\";\r\n        return false;\r\n      }\r\n\r\n      let level = that.getLevel(_tokenId);\r\n      if (level >= that.maxLevel) {\r\n        that.feedbackMessage =\r\n          \"Cannot upgrade \" + _tokenId + \", because it's already at max. level\";\r\n        console.log(that.feedbackMessage);\r\n        return false;\r\n      }\r\n\r\n      // check owner\r\n      let _nftOwner = await that.nftContract.ownerOf(_tokenId);\r\n      if (_nftOwner !== that.stakersAddress) {\r\n        if (_nftOwner !== window.ReaperAddress) {\r\n          that.feedbackMessage =\r\n            \"Cannot upgrade \" + _tokenId + \", because it's not in your wallet\";\r\n          console.log(that.feedbackMessage);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      that.feedbackMessage =\r\n        \"Upgrading 1 NFT by \" +\r\n        _levelsToUpgrade +\r\n        \" levels with \" +\r\n        _rewardTokens +\r\n        \" SVC\";\r\n      console.log(that.feedbackMessage);\r\n\r\n      console.log(\"Power old= \" + that.getPower(_tokenId));\r\n      console.log(\"Level old= \" + level);\r\n      console.log(\"Balance old= \" + that.stakersTokenBalance);\r\n      let balanceNew = that.stakersTokenBalance - _rewardTokens;\r\n      console.log(\"Balance new= \" + balanceNew);\r\n\r\n      let tx = await that.stakingContract.upgradeLevel(\r\n        [_tokenId],\r\n        [_levelsToUpgrade],\r\n        {\r\n          gasLimit: 180000,\r\n          gasPrice: 1046740000,\r\n        }\r\n      );\r\n      await tx.wait();\r\n\r\n      if (that.nftInfo[_tokenId].staked) {\r\n        // that.load();\r\n        // that.$emit('updateStakingPowerEvent');\r\n        window.location.reload();\r\n      } else {\r\n        that.load();\r\n      }\r\n    },\r\n\r\n    upgradeSelectedNfts: async function () {\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n\r\n      // checking SVC token\r\n      if (that.tokenCostToBulkUpgrade > that.stakersTokenAllowanceForLeveling) {\r\n        that.feedbackMessage = \"Please increase your SVC token allowance first\";\r\n        return false;\r\n      } else if (that.tokenCostToBulkUpgrade > that.stakersTokenBalance) {\r\n        that.feedbackMessage = \"SVC token balance is too low\";\r\n        return false;\r\n      }\r\n\r\n      if (that.selectedNfts.length < 1) {\r\n        that.feedbackMessage = \"No NFTs selected\";\r\n        return false;\r\n      } else if (that.selectedNfts.length == 1) {\r\n        let tokenId = that.selectedNfts[0];\r\n        let level = that.getLevel(tokenId);\r\n        if (level >= that.maxLevel) {\r\n          that.feedbackMessage =\r\n            \"Cannot upgrade \" +\r\n            tokenId +\r\n            \", because it's already at max. level\";\r\n          console.log(that.feedbackMessage);\r\n          return false;\r\n        }\r\n\r\n        // check owner\r\n        let _nftOwner = await this.nftContract.ownerOf(tokenId);\r\n        if (_nftOwner !== that.stakersAddress) {\r\n          if (_nftOwner !== window.ReaperAddress) {\r\n            that.feedbackMessage = \"You don't own \" + tokenId;\r\n            console.log(that.feedbackMessage);\r\n            return false;\r\n          }\r\n        }\r\n\r\n        that.feedbackMessage =\r\n          \"Upgrading 1 NFT with \" +\r\n          that.nftInfo[tokenId].levelsToUpgrade +\r\n          \" SVC\";\r\n        console.log(that.feedbackMessage);\r\n\r\n        console.log(\"Level old= \" + level);\r\n        console.log(\"Balance old= \" + that.stakersTokenBalance);\r\n        let balanceNew =\r\n          that.stakersTokenBalance - that.nftInfo[tokenId].levelsToUpgrade;\r\n        console.log(\"Balance new= \" + balanceNew);\r\n\r\n        let tx = await that.stakingContract.upgradeLevel(\r\n          [tokenId],\r\n          [that.nftInfo[tokenId].levelsToUpgrade],\r\n          {\r\n            gasLimit: 180000,\r\n            gasPrice: 1046740000,\r\n          }\r\n        );\r\n        await tx.wait();\r\n        if (that.nftInfo[tokenId].staked) {\r\n          // that.emit('updateStakingPowerEvent');\r\n          window.location.reload();\r\n        } else {\r\n          that.load();\r\n        }\r\n      } else if (that.selectedNfts.length > 1) {\r\n        // go through selected NFTs and pick first maxNftsPerTx which qualify for an upgrade\r\n        let nftsToUpgradeArray = [];\r\n        let levelsToUpgradeArray = [];\r\n        that.feedbackMessage =\r\n          \"Double checking ownership and level of selected NFTs\";\r\n        for (\r\n          let i = 0;\r\n          i < that.selectedNfts.length &&\r\n          nftsToUpgradeArray.length < that.maxNftsPerTx;\r\n          i++\r\n        ) {\r\n          let tokenId = that.selectedNfts[i];\r\n          // check cost\r\n          if (that.nftInfo[tokenId].levelsToUpgrade === 0) {\r\n            that.feedbackMessage +=\r\n              \" -- Skipping \" + tokenId + \" (0 SVC upgrade)\";\r\n            continue;\r\n          }\r\n\r\n          // check level\r\n          if (that.getLevel(tokenId) >= that.maxLevel) {\r\n            that.feedbackMessage +=\r\n              \" -- Skipping \" + tokenId + \" (already at max level)\";\r\n            continue;\r\n          }\r\n\r\n          // check owner\r\n          let _nftOwner = await this.nftContract.ownerOf(tokenId);\r\n          if (_nftOwner !== that.stakersAddress) {\r\n            if (_nftOwner !== window.ReaperAddress) {\r\n              that.feedbackMessage +=\r\n                \" -- Skipping \" + tokenId + \" (not in your wallet)\";\r\n              console.log(that.feedbackMessage);\r\n            }\r\n          }\r\n\r\n          nftsToUpgradeArray.push(that.selectedNfts[i]);\r\n          levelsToUpgradeArray.push(that.nftInfo[tokenId].levelsToUpgrade);\r\n          console.log(\"Adding \" + tokenId);\r\n          console.log(nftsToUpgradeArray);\r\n        }\r\n\r\n        that.feedbackMessage +=\r\n          \" -- \" + nftsToUpgradeArray.length + \" NFTs passed all checks\";\r\n        console.log(nftsToUpgradeArray);\r\n        console.log(levelsToUpgradeArray);\r\n        console.log(\"Bulk Upgrade Cost= \" + that.tokenCostToBulkUpgrade);\r\n\r\n        console.log(\"Balance old=\" + that.stakersTokenBalance);\r\n        let powBalanceAfterUpgrade =\r\n          that.stakersTokenBalance - that.tokenCostToBulkUpgrade;\r\n        console.log(\"Balance after bulk upgrade: \", powBalanceAfterUpgrade);\r\n\r\n        if (nftsToUpgradeArray.length <= 0) {\r\n          return false;\r\n        }\r\n\r\n        that.feedbackMessage +=\r\n          \" -- Upgrading NFTs [\" +\r\n          nftsToUpgradeArray +\r\n          \"] with [\" +\r\n          levelsToUpgradeArray +\r\n          \"] SVC\";\r\n        let tx = await this.stakingContract.upgradeLevel(\r\n          nftsToUpgradeArray,\r\n          levelsToUpgradeArray,\r\n          {\r\n            gasLimit: Math.min(\r\n              20000 + 160000 * nftsToUpgradeArray.length,\r\n              9999999\r\n            ),\r\n            gasPrice: 1046740000,\r\n          }\r\n        );\r\n        await tx.wait();\r\n      }\r\n\r\n      window.location.reload();\r\n    },\r\n\r\n    // upgrade1NftGasSavings: function (_rewardTokens, _tokenId, startPwrX10k, startLvl) {\r\n    //   console.log(\"V2+ (gas savings) start\");\r\n\r\n    //   let that = this;\r\n    //   let rewardTokensConsumed = 0;\r\n\r\n    // console.log(\"after full + partial level upgrades: level: \" + newLvl + \" power: \" + newPwrX10k + \" -- tokenCostPerLevel: \" + tokenCostPerLevel + \" -- minpower: \", this.getMinPower(newLvl), this.getMinPower(newLvl + 1));\r\n\r\n    // return { rewardTokensConsumed, newPwrX10k, newLvl };\r\n    // },\r\n\r\n    calculatePowerIncreaseSolidityV2: function (_rewardTokens, _tokenId) {\r\n      let startLvl = this.nftLevel[_tokenId - 1];\r\n      let startPwrX10k = this.getPower(_tokenId);\r\n\r\n      let result2 = this.upgrade1NftGasSavings(\r\n        _rewardTokens,\r\n        _tokenId,\r\n        startPwrX10k,\r\n        startLvl\r\n      );\r\n\r\n      this.nftInfo[_tokenId].nftPowerAfterUpgrade = result2.newPwrX10k;\r\n      this.nftInfo[_tokenId].nftLevelAfterUpgrade = result2.newLvl;\r\n      this.nftInfo[_tokenId].levelsToUpgrade = result2.rewardTokensConsumed;\r\n      let minpwrLevel = this.getMinPower(result2.newLvl);\r\n      let minpwrNextLevel = this.getMinPower(result2.newLvl + 1);\r\n      this.nftInfo[_tokenId].pctInLevelX100AfterUpgrade = Math.min(\r\n        10000,\r\n        Math.round(\r\n          (((result2.newPwrX10k - minpwrLevel) /\r\n            (minpwrNextLevel - minpwrLevel)) *\r\n            10000) /\r\n            0.7\r\n        )\r\n      );\r\n    },\r\n\r\n    filterNfts: function (_param) {\r\n      let that = this;\r\n      let staked = [];\r\n      let unstaked = [];\r\n      that.filter = _param;\r\n      switch (_param) {\r\n        case \"all\":\r\n          // that.filteredNfts = that.stakersNfts;\r\n          staked = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === true;\r\n          });\r\n          unstaked = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === false;\r\n          });\r\n          that.filteredNfts = staked.concat(unstaked);\r\n          break;\r\n        case \"staked\":\r\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === true;\r\n          });\r\n          break;\r\n        case \"unstaked\":\r\n          that.filteredNfts = that.stakersNfts.filter((tokenId) => {\r\n            return that.nftInfo[tokenId].staked === false;\r\n          });\r\n          break;\r\n        default:\r\n          that.feedbackMessage = \"Filter not implemented\";\r\n      }\r\n    },\r\n\r\n    fillNftInfo: function (_inArr, _staked) {\r\n      let that = this;\r\n      for (let i in _inArr) {\r\n        let tokenId = _inArr[i];\r\n        that.stakersNfts.push(tokenId);\r\n        let level = that.getLevel(tokenId);\r\n\r\n        that.nftInfo[tokenId] = {\r\n          staked: _staked,\r\n          level: level,\r\n          nftLevelAfterUpgrade: level + 1,\r\n          levelsToUpgrade: 1,\r\n          image: that.currentCollection.pictureLink + tokenId + \".png\",\r\n        };\r\n      }\r\n      if (\r\n        that.loadingStakedNfts === false &&\r\n        that.loadingUnstakedNfts === false\r\n      ) {\r\n        that.stakersNfts.sort(function (a, b) {\r\n          return that.nftInfo[b].level - that.nftInfo[a].level;\r\n        });\r\n        console.log(\"calling filter\");\r\n        that.filterNfts(that.filter);\r\n        this.transactionInProgress = false;\r\n      }\r\n    },\r\n\r\n    updateLevels: async function () {\r\n      this.feedbackMessage = \"\";\r\n\r\n      let that = this;\r\n\r\n      return new Promise((resolve, reject) => {\r\n        // loading power updates that came later\r\n        console.log(\r\n          \"nextBlock: \" + that.currentCollection.levels.nextBlockToCheck\r\n        );\r\n        const optionsPower = {\r\n          fromBlock: that.currentCollection.levels.nextBlockToCheck, //Number || \"earliest\" || \"pending\" || \"latest\"\r\n          toBlock: \"latest\",\r\n        };\r\n\r\n        try {\r\n          let web3HttpReadLevels = new Web3(this.rpc);\r\n          const stakeContractHttp = new web3HttpReadLevels.eth.Contract(\r\n            Reaperville.abi,\r\n            window.ReaperAddress\r\n          );\r\n\r\n          console.log(\"Getting past events for power upgrades\");\r\n          stakeContractHttp\r\n            .getPastEvents(\"levelUpgraded\", optionsPower)\r\n            .then(function (events) {\r\n              if (0 >= events.length) {\r\n                console.log(\"No events\");\r\n                return true;\r\n              }\r\n              // that.currentCollection.level.nextBlockToCheck = Math.max(that.currentCollection.level.nextBlockToCheck, (events[events.length - 1].blockNumber + 1));\r\n\r\n              console.log(events.length + \" events found for power upgrades\");\r\n\r\n              for (let item of events) {\r\n                // console.log(item);\r\n                let id = parseInt(item.returnValues.tokenId);\r\n                let newLevel = parseInt(item.returnValues.newLevel);\r\n\r\n                that.currentCollection.levels[\"level\"][id] = newLevel;\r\n                console.log(\r\n                  id +\r\n                    \" upgraded to \" +\r\n                    newLevel +\r\n                    \" == \" +\r\n                    that.currentCollection.levels[\"level\"][id] +\r\n                    \" in \" +\r\n                    item.blockNumber\r\n                );\r\n              }\r\n            })\r\n            .then(() => {\r\n              console.log(\"returning Power\");\r\n              resolve();\r\n            });\r\n        } catch (e) {\r\n          console.log(e);\r\n          reject();\r\n        }\r\n      });\r\n    },\r\n\r\n    load: async function () {\r\n      let that = this;\r\n      that.loadingUnstakedNfts = true;\r\n      that.loadingStakedNfts = true;\r\n\r\n      that.filteredNfts = [];\r\n      that.stakersNfts = [];\r\n\r\n      that.currentCollection = nftCollection[that.nftCA];\r\n\r\n      that.stakersAddress = await that.signer.getAddress();\r\n\r\n      that.stakingContract.isMintPausedStakingPaused().then((result) => {\r\n        console.log(result);\r\n        that.stakingPaused = result[1];\r\n      });\r\n\r\n      // load SVC balance and allowance\r\n      that.rewardTokenContract\r\n        .balanceOf(that.stakersAddress)\r\n        .then((balance) => {\r\n          that.stakersTokenBalance = balance;\r\n        });\r\n      that.rewardTokenContract\r\n        .allowance(that.stakersAddress, window.ReaperAddress)\r\n        .then((allowance) => {\r\n          that.stakersTokenAllowanceForLeveling = allowance;\r\n        });\r\n\r\n      //////////////////\r\n      // Update power //\r\n      //////////////////\r\n      await that.updateLevels(); // updates this.nftPower\r\n      // console.log(\"nftPower in load: \" + that.nftPower);\r\n\r\n      ////////////\r\n      // staked //\r\n      ////////////\r\n      that.nftContract\r\n        .walletOfOwnerStaked(that.stakersAddress)\r\n        .then((tokens) => {\r\n          let tokensStaked = [];\r\n          for (let iCopy = 0; iCopy < tokens.length; iCopy++) {\r\n            let tokenId = Number(tokens[iCopy]);\r\n            if (tokenId === 0) {\r\n              continue;\r\n            }\r\n            tokensStaked.push(tokenId);\r\n          }\r\n          that.loadingStakedNfts = false;\r\n          that.stakedCount = tokensStaked.length;\r\n          that.fillNftInfo(tokensStaked, true);\r\n        });\r\n\r\n      //////////////\r\n      // unstaked //\r\n      //////////////\r\n      that.nftContract.walletOfOwner(that.stakersAddress).then((tokens) => {\r\n        let tokensInWallet = [];\r\n        for (let iCopy = 0; iCopy < tokens.length; iCopy++) {\r\n          let tokenId = Number(tokens[iCopy]);\r\n          if (tokenId === 0) {\r\n            continue;\r\n          }\r\n          tokensInWallet.push(tokenId);\r\n        }\r\n        that.loadingUnstakedNfts = false;\r\n        that.unstakedCount = tokensInWallet.length;\r\n        that.fillNftInfo(tokensInWallet, false);\r\n      });\r\n    },\r\n  },\r\n\r\n  mounted: function () {\r\n    this.rpc = window.ethereum; // doesn't work on Android due to a bug(?)\r\n\r\n    this.provider = new ethers.providers.Web3Provider(this.rpc, \"any\");\r\n\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n\r\n        let _nftContract = new ethers.Contract(\r\n          this.nftCA.toString(),\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        this.stakingContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaperville.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        let _rewardTokenContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.nftContract = _nftContract;\r\n        this.rewardTokenContract = _rewardTokenContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n","import { render } from \"./Nft.vue?vue&type=template&id=30e4ff7d\"\nimport script from \"./Nft.vue?vue&type=script&lang=js\"\nexport * from \"./Nft.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"col-12 align-items-center\">\r\n    <div class=\"row align-items-center\">\r\n      <h2>{{ projectname }} NFTs -- Staking and Leveling</h2>\r\n      <h4>\r\n        Balance: {{ stakersRewardTokenBalance }} SVC &nbsp;\r\n        <i\r\n          title=\"Refresh SVC Balance\"\r\n          @click=\"loadRewardTokenBalance\"\r\n          class=\"ri-refresh-line\"\r\n        ></i>\r\n      </h4>\r\n      <br />\r\n      <h4 v-on:updateStakingPowerEvent=\"loadStakerInfo\">\r\n        Staking power: {{ stakersPower }}🔥 &nbsp;\r\n        <i\r\n          title=\"Refresh SVC Balance\"\r\n          @click=\"loadStakerInfo\"\r\n          class=\"ri-refresh-line\"\r\n        ></i>\r\n      </h4>\r\n      <br />\r\n\r\n      <template v-if=\"stakersPower > 0\">\r\n        <h4>\r\n          Staked for {{ formatSeconds(stakerStakedForSeconds) }}. (Harvest and\r\n          unstake reset the timer.)\r\n        </h4>\r\n        <br />\r\n        <h4>Current payout level: {{ stakersPayoutPct }}%</h4>\r\n        <br />\r\n        <h4 v-if=\"stakerNextPayoutPctInSeconds > 0\">\r\n          Next payout level: {{ stakersNextPayoutPct }}% -- reached in\r\n          {{ formatSeconds(stakerNextPayoutPctInSeconds) }}\r\n        </h4>\r\n        <h4 v-else>\r\n          Congratulations! You reached the highest payout level.\r\n        </h4>\r\n      </template>\r\n\r\n      <br />\r\n      <h6>Total staked power: {{ totalStakedPower }}🔥</h6>\r\n      <h6>Base power: {{ baseStakingPower }}🔥</h6>\r\n      <h6>\r\n        Total SVC Emission: ~{{\r\n          Math.round(womEmissionPerHour * earningsTime * 100) / 100\r\n        }}\r\n        SVC / {{ hoursInWords[earningsTime] }}\r\n      </h6>\r\n      <br />\r\n      <div\r\n        class=\"settings-menu\"\r\n        v-if=\"womEmissionPerHour && totalStakedPower && stakersPower\"\r\n      >\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          id=\"collection-filter\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n          style=\"font-size: 14px\"\r\n        >\r\n          Earning ~{{\r\n            Math.round(stakerEarningRateX1k * earningsTime) / 1000\r\n          }}\r\n          SVC / {{ hoursInWords[earningsTime] }}\r\n        </button>\r\n        <ul class=\"dropdown-menu\" aria-labelledby=\"earnings-time\">\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 1\"\r\n              :class=\"earningsTime === 1 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 1) / 1000 }}\r\n              SVC / hour\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 24\"\r\n              v-bind:class=\"earningsTime === 24 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 24) / 1000 }}\r\n              SVC / day\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 168\"\r\n              v-bind:class=\"earningsTime === 168 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 168) / 1000 }}\r\n              SVC / week\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 720\"\r\n              v-bind:class=\"earningsTime === 720 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 720) / 1000 }}\r\n              SVC / month\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              class=\"dropdown-item\"\r\n              @click=\"earningsTime = 8760\"\r\n              v-bind:class=\"earningsTime === 8760 ? 'current' : ''\"\r\n            >\r\n              Earning ~{{ Math.round(stakerEarningRateX1k * 8760) / 1000 }}\r\n              SVC / year\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"settings-menu\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          @click=\"harvest\"\r\n          :disabled=\"stakingPaused || womToHarvest == 0\"\r\n          style=\"font-size: 14px\"\r\n        >\r\n          Harvest\r\n          {{ Math.round(stakersPayoutPct * womToHarvest * 10) / 1000 }} SVC\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ethers } from \"ethers\";\r\nimport Reaper from \"../../artifacts/contracts/Reaperville.sol/Reaperville.json\";\r\nimport RewardToken from \"../../artifacts/contracts/RewardToken.sol/RewardToken.json\";\r\n\r\n// let RewardTokenAddress = window.RewardTokenAddress;\r\n\r\nexport default {\r\n  name: \"App\",\r\n  props: [\"projectname\"],\r\n  data() {\r\n    return {\r\n      rewardTokenContract: null,\r\n\r\n      nftContract: null,\r\n      stakingContract: null,\r\n\r\n      provider: null,\r\n      signer: null,\r\n\r\n      womEmissionPerHour: null,\r\n\r\n      stakersAddress: null,\r\n      stakerStakedForSeconds: null,\r\n      SECONDS_PER_DAY: 600, // TODO\r\n      stakersPayoutPct: null,\r\n      stakersNextPayoutPct: null,\r\n      stakerNextPayoutPctInSeconds: null,\r\n\r\n      stakersPower: null,\r\n      totalStakedPower: null,\r\n      baseStakingPower: null,\r\n      stakerEarningRateX1k: null,\r\n\r\n      earningsTime: 168,\r\n      hoursInWords: {\r\n        1: \"hour\",\r\n        24: \"day\",\r\n        168: \"week\",\r\n        720: \"month\",\r\n        8760: \"year\",\r\n      },\r\n\r\n      womToHarvest: null,\r\n      stakingPaused: true,\r\n      stakersRewardTokenBalance: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    harvest: async function () {\r\n      let tx = await this.stakingContract.harvest();\r\n      await tx.wait();\r\n      this.load();\r\n    },\r\n    approve: async function () {\r\n      let tx = await this.nftContract.setApprovalForAll(\r\n        window.ReaperAddress,\r\n        true\r\n      );\r\n      await tx.wait();\r\n      window.location.reload();\r\n    },\r\n\r\n    loadStakerInfo: function () {\r\n      this.stakingContract\r\n        .showStakerInfo(this.stakersAddress)\r\n        .then((stakerInfo) => {\r\n          let stakedForSeconds = stakerInfo[0];\r\n          this.stakerStakedForSeconds = stakedForSeconds;\r\n          if (stakedForSeconds > 30 * this.SECONDS_PER_DAY) {\r\n            this.stakersPayoutPct = 115; // 15% bonus\r\n            this.stakersNextPayoutPct = 115;\r\n            this.stakerNextPayoutPctInSeconds = 0;\r\n          } else if (stakedForSeconds < 19 * this.SECONDS_PER_DAY) {\r\n            let stakedForDays = Math.floor(\r\n              stakedForSeconds / this.SECONDS_PER_DAY\r\n            );\r\n            this.stakersPayoutPct = (stakedForDays + 1) * 5;\r\n            this.stakersNextPayoutPct = this.stakersPayoutPct + 5;\r\n            this.stakerNextPayoutPctInSeconds =\r\n              (stakedForDays + 1) * this.SECONDS_PER_DAY - stakedForSeconds;\r\n          } else {\r\n            this.stakersPayoutPct = 100;\r\n            this.stakersNextPayoutPct = 115;\r\n            this.stakerNextPayoutPctInSeconds =\r\n              30 * this.SECONDS_PER_DAY - stakedForSeconds;\r\n          }\r\n\r\n          this.stakersPower = stakerInfo[1];\r\n          this.totalStakedPower = stakerInfo[2];\r\n          this.baseStakingPower = stakerInfo[3];\r\n          this.womEmissionPerHour =\r\n            Math.round(ethers.utils.formatEther(stakerInfo[4]) * 100000) /\r\n            100000;\r\n          this.stakerEarningRateX1k =\r\n            ((this.womEmissionPerHour * this.stakersPower) /\r\n              (this.totalStakedPower - this.baseStakingPower)) *\r\n            1000;\r\n        });\r\n      this.womToHarvest = 0;\r\n      this.stakingContract\r\n        .showStakersEarningsUntilLastTimestamp(this.stakersAddress)\r\n        .then((amount) => {\r\n          this.womToHarvest +=\r\n            Math.round(ethers.utils.formatEther(amount) * 100000) / 100000;\r\n        });\r\n      this.stakingContract\r\n        .showStakersEarningsAfterLastTimestamp(this.stakersAddress)\r\n        .then((earnings) => {\r\n          this.womToHarvest +=\r\n            Math.round(ethers.utils.formatEther(earnings) * 100000) / 100000;\r\n        });\r\n      this.stakingContract.isMintPausedStakingPaused().then((result) => {\r\n        this.stakingPaused = result[1];\r\n      });\r\n    },\r\n\r\n    formatSeconds: function (seconds) {\r\n      seconds = Number(seconds);\r\n      var d = Math.floor(seconds / (3600 * 24));\r\n      var h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n      var m = Math.floor((seconds % 3600) / 60);\r\n      var s = Math.floor(seconds % 60);\r\n\r\n      var dDisplay = d > 0 ? d + \" d, \" : \"\";\r\n      var hDisplay = h > 0 ? h + \" h, \" : \"\";\r\n      var mDisplay = m > 0 ? m + \" min, \" : \"\";\r\n      var sDisplay = s > 0 ? s + \" sec\" : \"\";\r\n      return dDisplay + hDisplay + mDisplay + sDisplay;\r\n    },\r\n\r\n    loadRewardTokenBalance: function () {\r\n      console.log(this.stakersAddress);\r\n      this.rewardTokenContract\r\n        .balanceOf(this.stakersAddress)\r\n        .then((balance) => {\r\n          this.stakersRewardTokenBalance =\r\n            Math.round(ethers.utils.formatEther(balance) * 100000) / 100000;\r\n        });\r\n    },\r\n\r\n    load: function () {\r\n      this.signer.getAddress().then((userAddress) => {\r\n        this.stakersAddress = userAddress;\r\n        this.loadStakerInfo();\r\n        this.loadRewardTokenBalance();\r\n      });\r\n    },\r\n  },\r\n  mounted: function () {\r\n    this.provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\r\n    this.provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then(() => {\r\n        this.signer = this.provider.getSigner();\r\n        let _womContract = new ethers.Contract(\r\n          window.RewardTokenAddress,\r\n          RewardToken.abi,\r\n          this.provider.getSigner()\r\n        );\r\n        let _stakingContract = new ethers.Contract(\r\n          window.ReaperAddress,\r\n          Reaper.abi,\r\n          this.provider.getSigner()\r\n        );\r\n\r\n        this.rewardTokenContract = _womContract;\r\n        this.stakingContract = _stakingContract;\r\n      })\r\n      .then(() => {\r\n        this.load();\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","import { render } from \"./NftTop.vue?vue&type=template&id=2b8abc6b\"\nimport script from \"./NftTop.vue?vue&type=script&lang=js\"\nexport * from \"./NftTop.vue?vue&type=script&lang=js\"\n\nimport \"./NftTop.vue?vue&type=style&index=0&id=2b8abc6b&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Reaper.vue?vue&type=template&id=5af8a16a\"\nimport script from \"./Reaper.vue?vue&type=script&lang=js\"\nexport * from \"./Reaper.vue?vue&type=script&lang=js\"\n\nimport \"./Reaper.vue?vue&type=style&index=0&id=5af8a16a&lang=css\"\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"content-body\">\r\n    <div class=\"container text-start\">\r\n      <div class=\"row\">\r\n\r\n\r\n        <div class=\"col-xxl-12\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col align-items-center\">\r\n                  <h4>How Staking Your Reaperville NFTs Works</h4>\r\n                  <ul>\r\n                    <li>\r\n                      Normally, when you stake one or multiple NFTs, you\r\n                      transfer the ownership of your NFTs to a smart contract\r\n                      which promises to transfer them back when you unstake.\r\n                    </li>\r\n                    <li>\r\n                      We at Surviville do things differently. When you stake a\r\n                      Reaperville NFT, it remains in your wallet. However, you\r\n                      cannot transfer a staked NFT to another wallet.\r\n                    </li>\r\n                    <li>\r\n                      To be able to transfer a staked NFT, you have to unstake\r\n                      it first -- which you can do at any time.\r\n                    </li>\r\n                  </ul>\r\n                  <br />\r\n                  <h4>Advantages and Disadvantages</h4>\r\n                  <h6>Advantages</h6>\r\n                  <ul>\r\n                    <li>\r\n                      Super low gas fees for staking and unstaking your NFTs.\r\n                    </li>\r\n                    <li>\r\n                      The staked NFTs remain in your wallet. No need to trust\r\n                      another smart contract with the custody of your staked\r\n                      NFTs.\r\n                    </li>\r\n                  </ul>\r\n                  <br />\r\n                  <h6>Disadvantages</h6>\r\n                  <ul>\r\n                    <li>\r\n                      Because the staked NFTs remain in your wallet, it may\r\n                      appear as if you could transfer them. However, they can\r\n                      only be transferred once you unstake them.\r\n                    </li>\r\n                    <li>\r\n                      Note that third party DAPPs may not be aware of this\r\n                      limitation. Attempted transfers of staked NFTs will fail\r\n                      until you unstake the corresponding NFTs first with this\r\n                      DAPP.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div class=\"col-xxl-12\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col align-items-center\">\r\n                  <h4>NFT Level Upgrades</h4>\r\n                  <ul>\r\n                    <li>\r\n                      You can permanently increase the staking power of your\r\n                      NFTs by upgrading the levels of any NFT you own.\r\n                    </li>\r\n                    <li>\r\n                      For level upgrades you need SVC tokens which you can earn\r\n                      by staking your NFTs or by buying them on MistSwap.\r\n                    </li>\r\n                    <li>\r\n                      Each level upgrade costs <strong>100 SVC tokens. </strong>\r\n                    </li>\r\n                    <li>The maximum level is <strong>100. </strong></li>\r\n                    <li>\r\n                      Use the slider to select the level you want to upgrade to.\r\n                      The website shows you a preview of the power after the\r\n                      upgrade.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-xxl-12\">\r\n          <div class=\"card top-bid\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col align-items-center\">\r\n                  <h4>Automatic Harvests and Pure Harvests</h4>\r\n                  <ul>\r\n                    <li>\r\n                      Whenever you stake, unstake or upgrade one or multiple\r\n                      NFTs, a harvest of SVC reward tokens is automatically\r\n                      executed.\r\n                    </li>\r\n                    <li>\r\n                      Additionally, you can harvest SVC reward tokens whenever\r\n                      you want. This operation is called a\r\n                      <strong>pure harvest.</strong>\r\n                    </li>\r\n                  </ul>\r\n                  <br />\r\n                  <h4>Harvest Penalties and Bonuses</h4>\r\n                  <h6>Penalties</h6>\r\n                  <ul>\r\n                    <li>\r\n                      If you harvest within the first 20 days of staking, the\r\n                      amount is reduced with a penalty.\r\n                    </li>\r\n                    <li>\r\n                      The penalty applies to both automatic and pure harvests.\r\n                    </li>\r\n                    <li>\r\n                      Within the first day of staking, the penalty is 95% of the\r\n                      harvest amount.\r\n                    </li>\r\n                    <li>\r\n                      For each subsequent full day of staking, the penalty\r\n                      percentage is reduced by 5%.\r\n                    </li>\r\n                    <li>\r\n                      That means, you will receive 10% after a full day of\r\n                      staking, 15% after 2 full days and so on.\r\n                    </li>\r\n                    <li>\r\n                      After 19 full days of staking your NFTs, you will receive\r\n                      100% of the harvest amount (no penalties).\r\n                    </li>\r\n                  </ul>\r\n                  <br />\r\n                  <h6>Bonus</h6>\r\n                  <ul>\r\n                    <li>\r\n                      But wait, that's not all: After 30 full days of staking,\r\n                      you will receive a 15% bonus. 👀\r\n                    </li>\r\n                    <li>\r\n                      Note that each pure harvest and each unstake will reset\r\n                      the penalties and bonuses cycle. A stake or level upgrade\r\n                      will\r\n                      <strong>not</strong> reset the cycle.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n","import { render } from \"./Info.vue?vue&type=template&id=c2717df8\"\nconst script = {}\n\nimport exportComponent from \"/home/martin/Documents/coding/reaperville-staking/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport '../public/css/style.css'\r\nimport Admin from \"@/components/Admin\";\r\nimport NftMint from \"@/components/NftMint\";\r\nimport {createRouter, createWebHistory} from \"vue-router\";\r\nimport Reaper from \"@/components/Reaper\";\r\nimport Info from \"@/components/Info\";\r\n\r\n\r\n\r\n\r\nexport let app = createApp(App);\r\n\r\nconst routes = [\r\n    { path: '/reaper', component: Reaper },\r\n    { path: '/admin', component: Admin },\r\n    { path: '/nftMint', component: NftMint },\r\n    { path: '/info', component: Info },\r\n    { path: '/', component: Reaper },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n})\r\n\r\napp.use(router);\r\n\r\napp.mount('#app')\r\n","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Layout.vue?vue&type=style&index=0&id=7bb0e8db&lang=css\"","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Reaper.vue?vue&type=style&index=0&id=5af8a16a&lang=css\"","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NftTop.vue?vue&type=style&index=0&id=2b8abc6b&lang=css\""],"sourceRoot":""}